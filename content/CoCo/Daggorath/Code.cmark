;;%%image Daggorath.jpg
;;%%- Coco/Daggorath/RAMUse.mark /CoCo/Daggorath/RAMUse.html
;;%%-2 Coco/Hardware.mark /CoCo/Hardware.html
;;%%cpu 6809
;;%%directPage 200
;; The game's RAM usage is detailed here: 
;; [RAMUse.html RAM Usage]

;;{{{html
;;<script src="/js/CANVAS.js"    type="text/javascript"></script>
;;<script src="/js/pixelUI.js"   type="text/javascript"></script>
;;<script src="/js/bytes.js"     type="text/javascript"></script>
;;<script src="/js/dundagUI.js"  type="text/javascript"></script>
;;
;;<!-- Cache some commonly-used values -->
;;<canvas width="0" height="0"
;;        data-canvasFunction="handleTileCanvas"
;;        data-labelColor=""
;;        data-pixWidth="8"
;;        data-gridX="5"
;;        data-gridY="7"
;;        data-pixHeight="8"
;;        data-gap="0.25"
;;        data-gridPad="10"
;;        data-colorsName="CS0"
;;        data-colors='["#808080","#000080"]'>
;;</canvas>
;;}}}

C000: CE C0 D1            LDU     #$C0D1         ; Demo info
C003: 20 03               BRA     $C008          ;{} Do Demo
;
C005: CE C1 24            LDU     #$C124         ; Game info
;
C008: 10 CE 10 00         LDS     #$1000         ; Stacks builds to lower from $1000
C00C: 8E FF 00            LDX     #$FF00         ; PIA0
C00F: CC 34 FA            LDD     #$34FA         ; A=34, B=FA
C012: A7 03               STA     3,X            ; CTRL-B = 0_0_110_1_00 : IRQs off ...
C014: A7 01               STA     1,X            ; CTRL_A = 0_0_110_1_00 : ... output register select
C016: 8E FF 20            LDX     #$FF20         ; PIA1
C019: A7 01               STA     1,X            ; CTRL-B = 0_0_110_1_00 : IRQs off
C01B: 6F 03               CLR     3,X            ; DDR selected for B
C01D: E7 02               STB     2,X            ; DDRB = 11111010 (mem and serial inputs)
C01F: 86 3C               LDA     #$3C           ; 0_0_111_1_00
C021: A7 03               STA     3,X            ; Turn off FIRQs
C023: CC 20 46            LDD     #$2046         ; 001000__0001000_110
C026: BD C2 66            JSR     $C266          ;{} Graphics=G6R,G6C  Display=8*512 (0x1000)
C029: 86 F8               LDA     #$F8           ; Upper bits ...
C02B: A7 02               STA     2,X            ; ... of display mode (256x192 color)
C02D: 8E 02 00            LDX     #$0200         ; Clear ...
C030: 6F 80               CLR     ,X+            ; ... all ...
C032: 8C 40 00            CMPX    #$4000         ; ... temporary ...
C035: 25 F9               BCS     $C030          ;{} ... memory (base page)
C037: EF E3               STU     ,--S           ; Store return to demo or game
C039: 86 02               LDA     #$02           ; DP = ...
C03B: 1F 8B               TFR     A,DP           ; ... 0200
C03D: 10 8E D7 E8         LDY     #$D7E8         ; Table of inits
C041: A6 A0               LDA     ,Y+            ; Get count
C043: 27 41               BEQ     $C086          ;{} All done ... move on
C045: AE A1               LDX     ,Y++           ; Get destination
C047: 8D 02               BSR     $C04B          ;{} Do copy
C049: 20 F6               BRA     $C041          ;{} Do all

CopyYtoX:
; Copy bytes (A is count) from Y to X
C04B: E6 A0               LDB     ,Y+            ; Value from Y
C04D: E7 80               STB     ,X+            ; Store to X
C04F: 4A                  DECA                   ; All done?
C050: 26 F9               BNE     $C04B          ;{} No ... do all
C052: 39                  RTS                    ; Out

InitTasks:
C053: 34 77               PSHS    U,Y,X,B,A,CC     ; Save all registers
C055: 1A 10               ORCC    #$10             ; Turn OFF the IRQ interrupt
C057: 8E 02 9F            LDX     #$029F           ;
C05A: 6F 80               CLR     ,X+              ;
C05C: 8C 02 AD            CMPX    #$02AD           ;
C05F: 25 F9               BCS     $C05A            ;{}
C061: 8E 09 FD            LDX     #$09FD           ; First game-task slot
C064: 9F B9               STX     >$B9             ;{-} Clear the task list
C066: 6F 80               CLR     ,X+              ; Zero out  ...
C068: 8C 0B 07            CMPX    #$0B07           ; ... game-tasks ... (Not the last task. It is initialized at startup.)
C06B: 25 F9               BCS     $C066            ;{} ... slots
;
C06D: 10 8E D7 DC         LDY     #$D7DC           ; Initial task routines
C071: 0A BB               DEC     >$BB             ;{-}        
C073: CC 00 0C            LDD     #$000C           ;
C076: AE A1               LDX     ,Y++             ; Get next task entry
C078: 27 0A               BEQ     $C084            ;{} All tasks made ... out
C07A: BD C2 5C            JSR     $C25C            ;{} Reserve a task slot (pointer in U) 
C07D: AF 43               STX     3,U              ; Save code pointer in structure
C07F: BD C2 1D            JSR     $C21D            ;{} ?? Add task pointer to chain ??
C082: 20 F2               BRA     $C076            ;{} Do all tasks
C084: 35 F7               PULS    CC,A,B,X,Y,U,PC  ; Done

; Initialization continues from C043
C086: 8D CB               BSR     $C053          ;{} Initialize game tasks
C088: CE DA 91            LDU     #$DA91         ; Object distribution table
C08B: 4F                  CLRA                   ; First object in table is type 0 (SUPREME RING)
C08C: E6 C4               LDB     ,U             ; Get the info
C08E: C4 0F               ANDB    #$0F           ; Hold ...
C090: D7 8C               STB     >$8C           ;{-} ... number of objects
C092: E6 C0               LDB     ,U+            ; Get the info
C094: 54                  LSRB                   ; Hold ...
C095: 54                  LSRB                   ; ... ...
C096: 54                  LSRB                   ; ... ...
C097: 54                  LSRB                   ; ... ...
C098: D7 8D               STB     >$8D           ;{-} ... first appear on level
C09A: 3F                  SWI                    ; Make an instance of the object
C09B: 17                                         ; SWI 17 Create object structure
C09C: 6A 05               DEC     5,X            ; Object isn't in any list (room, player, monster)
C09E: 5C                  INCB                   ; Next object on next level
C09F: C1 05               CMPB    #$05           ; Past level 4?
C0A1: 2F 02               BLE     $C0A5          ; No ... use next level
C0A3: D6 8D               LDB     >$8D           ;{-} use
C0A5: 0A 8C               DEC     >$8C           ;{-} Decrement number of objects
C0A7: 26 F1               BNE     $C09A          ;{} Go back to create more of this type
C0A9: 4C                  INCA                   ; Next object type
C0AA: 11 83 DA A3         CMPU    #$DAA3         ; All object types done?
C0AE: 25 DC               BCS     $C08C          ;{} Not end of table ... go back
;
C0B0: CE 03 88            LDU     #$0388         ;
C0B3: 0A B7               DEC     >$B7           ;{-}
C0B5: 3F                  SWI                 
C0B6: 0A                                         ; SWI 0A Clear hand descriptor
C0B7: 3F                  SWI                 
C0B8: 02                                         ; SWI 02 * Uncompress message m and display
;
C0B9: F8 DF 0C C9 27 45 00 02 65 C1 03 52 39 3C 00 68 DA CC 63 09 48 ; "COPYRIGHT  DYNA MICRO  MCMLXXXII"
;           
C0CE: 0F B7               CLR     >$B7           ;{-}
C0D0: 39                  RTS                    ;
C0D1: 0A 77               DEC     >$77           ;{-}
C0D3: 8D 3F               BSR     $C114          ;{}       
C0D5: 8E DF 10            LDX     #$DF10      
C0D8: 0A 9E               DEC     >$9E           ;{-}       
C0DA: 3F                  SWI                 
C0DB: 14                                         ; SWI 14 Beam subroutine
C0DC: 3F                  SWI                 
C0DD: 02                                         ; SWI 02 * Uncompress message m and display
;
C0DE: 9F D2 02 06 45 06 4A 02 BA 85 97 BD EF 80 ; "_1F_I DARE YE ENTER..._1F_"
;
C0EC: 3F                  SWI                 
C0ED: 02                                         ; SWI 02 * Uncompress message m and display
;
C0EE: F7 BD EA 20 A0 25 5C 72 BD D3 03 CC 02 04 E7 7C 83 44 6F 7B ; "...THE DUNGEONS OF DAGGORATH!!!"
;
C102: 3F                  SWI                 
C103: 10                                         ; SWI 10 Wait for n SYNCs
C104: 3F                  SWI                 
C105: 10                                         ; SWI 10 Wait for n SYNCs
C106: 3F                  SWI                 
C107: 15                                         ; SWI 15 Beam subroutine
C108: 3F                  SWI                 
C109: 09                                         ; SWI 09 Clear secondary screen
C10A: 0A B4               DEC     >$B4           ;{-}       
C10C: 13                  SYNC                
C10D: 86 02               LDA     #$02        
C10F: CE D7 D5            LDU     #$D7D5      
C112: 20 1D               BRA     $C131          ;{}       
C114: CC 34 3C            LDD     #$343C      
C117: B7 FF 21            STA     $FF21       
C11A: F7 FF 23            STB     $FF23       
C11D: 4C                  INCA                
C11E: B7 FF 03            STA     $FF03       
C121: 3C EF               CWAI    $EF         
C123: 39                  RTS                 
C124: 8D EE               BSR     $C114          ;{}       
C126: CC 10 0B            LDD     #$100B      
C129: DD 13               STD     >$13           ;{-}       
C12B: 0F 17               CLR     >$17           ;{-}       
C12D: 4F                  CLRA                
C12E: CE D7 D9            LDU     #$D7D9      
C131: 3F                  SWI                 
C132: 16                                         ; SWI 16 Print PREPARE
C133: 3F                  SWI                 
C134: 1A                                         ; SWI 1A Set up level
C135: 10 8E 02 29         LDY     #$0229      
C139: A6 C0               LDA     ,U+         
C13B: 2B 12               BMI     $C14F          ;{}       
C13D: 3F                  SWI                 
C13E: 17                                         ; SWI 17 Create object structure
C13F: 6C 05               INC     5,X         
C141: 1E 13               EXG     X,U         
C143: 3F                  SWI                 
C144: 18                                         ; SWI 18 Change object to proper name and data
C145: 1E 13               EXG     X,U         
C147: 6F 0B               CLR     11,X        
C149: AF A4               STX     ,Y          
C14B: 1F 12               TFR     X,Y         
C14D: 20 EA               BRA     $C139          ;{}       
C14F: 0D 77               TST     >$77           ;{-}       
C151: 27 13               BEQ     $C166          ;{}       
C153: 0A 9B               DEC     >$9B           ;{-}       
C155: 8E CD B2            LDX     #$CDB2      
C158: 9F B2               STX     >$B2           ;{-}       
C15A: 0A 94               DEC     >$94           ;{-}       
C15C: 3F                  SWI                 
C15D: 0E                                         ; SWI 0E Display playing screen
C15E: 3F                  SWI                 
C15F: 10                                         ; SWI 10 Wait for n SYNCs
C160: 3F                  SWI                 
C161: 10                                         ; SWI 10 Wait for n SYNCs
C162: 0F 9B               CLR     >$9B           ;{-}       
C164: 13                  SYNC                
C165: 13                  SYNC                
C166: 3F                  SWI                 
C167: 19                                         ; SWI 19 Bring up normal display
C168: 3F                  SWI                 
C169: 0F                                         ; SWI 0F Ready command prompt
C16A: 7E C1 F5            JMP     $C1F5          ;{}       
C16D: BF 00 7E            STX     $007E       
C170: 10 3F               SWI2                
C172: 06 
C173: 4D                  TSTA        
C174: 10 26 DE AF         LBNE    $A027          ;{}       
C178: F6 00 7C            LDB     $007C       
C17B: 39                  RTS                 
C17C: CE FF 00            LDU     #$FF00      
C17F: CC 34 3C            LDD     #$343C      
C182: A7 43               STA     3,U         
C184: B7 FF 23            STA     $FF23       
C187: F7 FF 21            STB     $FF21       
C18A: 39                  RTS                 
C18B: 9E 00               LDX     >$00           ;{-}       
C18D: 30 1F               LEAX    -1,X        
C18F: 26 FC               BNE     $C18D          ;{}       
C191: 39                  RTS                 
C192: 8D E8               BSR     $C17C          ;{}       
C194: 8D F5               BSR     $C18B          ;{}       
C196: 8D F3               BSR     $C18B          ;{}       
C198: 10 3F               SWI2                
C19A: 0C 10               INC     >$10           ;{-}       
C19C: 3F                  SWI                 
C19D: 08                                         ; SWI 08 Clear display screen
C19E: 8D EB               BSR     $C18B          ;{}       
C1A0: 10 3F               SWI2                
C1A2: 0C 8E               INC     >$8E           ;{-}       
C1A4: 02                       
C1A5: 00 CC               NEG     >$CC           ;{-}       
C1A7: 01                       
C1A8: 80 FD               SUBA    #$FD        
C1AA: 00 7C               NEG     >$7C           ;{-}       
C1AC: BF 00 7E            STX     $007E       
C1AF: 10 3F               SWI2                
C1B1: 08 8C               LSL     >$8C           ;{-}       
C1B3: 0F 05               CLR     >$05           ;{-}       
C1B5: 25 EF               BCS     $C1A6          ;{}       
C1B7: FF                    
C1B8: 00 7C               NEG     >$7C           ;{-}       
C1BA: 10 3F               SWI2                
C1BC: 08 8D               LSL     >$8D           ;{-}       
C1BE: CC 20 2B            LDD     #$202B      
C1C1: 8D B9               BSR     $C17C          ;{}       
C1C3: 10 3F               SWI2                
C1C5: 04 DE               LSR     >$DE           ;{-}       
C1C7: 0B                        
C1C8: AE C4               LDX     ,U          
C1CA: 8D A1               BSR     $C16D          ;{}       
C1CC: 26 F8               BNE     $C1C6          ;{}       
C1CE: AE C4               LDX     ,U          
C1D0: CE 03 13            LDU     #$0313      
C1D3: C6 08               LDB     #$08        
C1D5: A6 80               LDA     ,X+         
C1D7: A1 C0               CMPA    ,U+         
C1D9: 26 E6               BNE     $C1C1          ;{}       
C1DB: 5A                  DECB                
C1DC: 26 F7               BNE     $C1D5          ;{}       
C1DE: 10 3F               SWI2                
C1E0: 04 8E               LSR     >$8E           ;{-}       
C1E2: 02                       
C1E3: 00 8D               NEG     >$8D           ;{-}       
C1E5: 87                       
C1E6: 2A FC               BPL     $C1E4          ;{}       
C1E8: 10 CE 10 00         LDS     #$1000      
C1EC: BD C1 14            JSR     $C114          ;{}       
C1EF: 0F B8               CLR     >$B8           ;{-}       
C1F1: 3F                  SWI                 
C1F2: 19                                         ; SWI 19 Bring up normal display
C1F3: 3F                  SWI                    ; SWI 0F ...
C1F4: 0F                                         ; SWI 0F Ready command prompt

C1F5: CE 02 AB            LDU     #$02AB      
C1F8: 0F BB               CLR     >$BB           ;{-}       
C1FA: 1F 32               TFR     U,Y         
C1FC: 0D B8               TST     >$B8           ;{-}       
C1FE: 2E 92               BGT     $C192       
C200: 2B BF               BMI     $C1C1          ;{}       
C202: EE C4               LDU     ,U          
C204: 27 EF               BEQ     $C1F5          ;{}       
;
C206: 34 60               PSHS    U,Y            ; Hold registers         
C208: AD D8 03            JSR     [$03,U]        ; Execute game task
C20B: 35 60               PULS    Y,U            ; Restore
;
C20D: 0D BB               TST     >$BB           ;{-}       
C20F: 26 E4               BNE     $C1F5          ;{}       
C211: C1 0C               CMPB    #$0C        
C213: 27 E5               BEQ     $C1FA          ;{}       
C215: 8D 21               BSR     $C238          ;{}       
C217: 8D 04               BSR     $C21D          ;{}       
C219: 1F 23               TFR     Y,U         
C21B: 20 DF               BRA     $C1FC          ;{}       

C21D: 34 17               PSHS    X,B,A,CC    
C21F: 1A 10               ORCC    #$10           ; Turn OFF the IRQ interrupt
C221: A7 42               STA     2,U         
C223: 8E 02 9F            LDX     #$029F      
C226: 3A                  ABX                 
C227: 4F                  CLRA                
C228: 5F                  CLRB                
C229: ED C4               STD     ,U          
C22B: 10 A3 84            CMPD    ,X          
C22E: 27 04               BEQ     $C234          ;{}       
C230: AE 84               LDX     ,X          
C232: 20 F7               BRA     $C22B          ;{}       
C234: EF 84               STU     ,X          
C236: 35 97               PULS    CC,A,B,X,PC
 
C238: 34 11               PSHS    X,CC        
C23A: 1A 10               ORCC    #$10           ; Turn OFF the IRQ interrupt
C23C: AE C4               LDX     ,U          
C23E: AF A4               STX     ,Y          
C240: 35 91               PULS    CC,X,PC  
   
C242: 34 74               PSHS    U,Y,X,B     
C244: 0D 9B               TST     >$9B           ;{-}       
C246: 26 12               BNE     $C25A          ;{}       
C248: 1F 32               TFR     U,Y         
C24A: EE C4               LDU     ,U          
C24C: 27 0C               BEQ     $C25A          ;{}       
C24E: 6A 42               DEC     2,U         
C250: 26 F6               BNE     $C248          ;{}       
C252: 8D E4               BSR     $C238          ;{}       
C254: C6 0C               LDB     #$0C        
C256: 8D C5               BSR     $C21D          ;{}       
C258: 20 EE               BRA     $C248          ;{}       
C25A: 35 F4               PULS    B,X,Y,U,PC  

ReserveTask:
; Move the next-task-pointer to the next seven-byte slot.
; Return reserved slot pointer in U.
C25C: 34 10               PSHS    X              ; Hold X
C25E: DE B9               LDU     >$B9           ;{-} Get the slot pointer
C260: 30 47               LEAX    7,U            ; Point to next
C262: 9F B9               STX     >$B9           ;{-} New slot pointer
C264: 35 90               PULS    X,PC           ; Out

WriteToSAM:
; The SAM chip is mapped only to the address bus. Writing to an even adress
; clears the target register bit. Writing to the next (odd) address sets the
; bit. This routine copies the 10-bit value in D to the first 10 SAM registers.
;
; The SAM is 16 bits and the value passed is 16 bits, and looks correct for
; the full register set. But this routine only changes the lowest 10 bits.
;
; F6 F5 F4 F3 F2 F1 F0 V2 V1 V0
;
; V is the video mode
; F is the video memory address (F*512 is the address)
;
C266: 34 16               PSHS    X,B,A          ; Preserve the registers
C268: 8E FF C0            LDX     #$FFC0         ; Start of SAM memory
C26B: 44                  LSRA                   ; Next bit ...
C26C: 56                  RORB                   ; ... into carry
C26D: 25 03               BCS     $C272          ;{} It is a one ... set the bit
C26F: A7 84               STA     ,X             ; It is a zero ... set the bit
C271: 8C A7 01            CMPX    #$A701         ; "STA 1,X" at C272
C274: 30 02               LEAX    2,X            ; Next register bit
C276: 8C FF D4            CMPX    #$FFD4         ; All done?
C279: 25 F0               BCS     $C26B          ;{} No ... keep going
C27B: 35 96               PULS    A,B,X,PC       ; Restore and out

InterruptServiceRoutine:
C27D: 8E FF 20            LDX     #$FF20         ; 6-bit sound value
C280: A6 88 E3            LDA     $-1D,X         ; FF03 ... 16.67MS (60Hz) interrupt status
C283: 10 2A 00 99         LBPL    $C320          ; Upper bit 0 ... must have been the horizontal ... ignore
C287: 86 02               LDA     #$02           ; Set DP to ...
C289: 1F 8B               TFR     A,DP           ; ... base 02xx
C28B: 0D B4               TST     >$B4           ;{-} Time to flip screens?
C28D: 27 0E               BEQ     $C29D          ;{} No ... keep what we have
C28F: DC 09               LDD     >$09           ;{-} Get the current visible
C291: DE 0B               LDU     >$0B           ;{-} Get the current drawing
C293: DD 0B               STD     >$0B           ;{-} Flip the ...
C295: DF 09               STU     >$09           ;{-} ... visible and drawing screens
C297: EC 44               LDD     4,U            ; Get the SAM settings for the new visible screen
C299: 8D CB               BSR     $C266          ;{} Set the SAM registers to flip the screen
C29B: 0F B4               CLR     >$B4           ;{-} Acknowledge the flip
;
C29D: 0D 9C               TST     >$9C           ;{-} Is the wizard beaming in or out (cut scenes)?
C29F: 27 08               BEQ     $C2A9          ;{} No ... skip it
C2A1: 03 9D               COM     >$9D           ;{-} Toggle the wizard sound square wave
C2A3: 96 9D               LDA     >$9D           ;{-} Get sound value
C2A5: 48                  ASLA                   ; 8 bit to ...
C2A6: 48                  ASLA                   ; ... 6 bit value (divide by 4)
C2A7: A7 84               STA     ,X             ; Store to FF20 (6 bit sound)
;
C2A9: 0D B1               TST     >$B1           ;{-}       
C2AB: 27 2F               BEQ     $C2DC          ;{}       
C2AD: 0A AE               DEC     >$AE           ;{-}       
C2AF: 26 2B               BNE     $C2DC          ;{}       
C2B1: 96 AF               LDA     >$AF           ;{-}       
C2B3: 97 AE               STA     >$AE           ;{-}       
C2B5: E6 02               LDB     2,X         
C2B7: C8 02               EORB    #$02        
C2B9: E7 02               STB     2,X         
C2BB: 0D AD               TST     >$AD           ;{-}       
C2BD: 27 1D               BEQ     $C2DC          ;{}       
C2BF: CE 03 88            LDU     #$0388      
C2C2: AE 44               LDX     4,U         
C2C4: CC 00 0F            LDD     #$000F      
C2C7: ED 44               STD     4,U         
C2C9: 86 20               LDA     #$20        
C2CB: 03 B0               COM     >$B0           ;{-}       
C2CD: 27 02               BEQ     $C2D1          ;{}       
C2CF: 86 22               LDA     #$22        
C2D1: BD CA 17            JSR     $CA17          ;{}       
C2D4: 6C 45               INC     5,U         
C2D6: 4C                  INCA                
C2D7: BD CA 17            JSR     $CA17          ;{}       
C2DA: AF 44               STX     4,U         
;
C2DC: CE 02 A1            LDU     #$02A1      
C2DF: BD C2 42            JSR     $C242          ;{}       
C2E2: 8E 02 95            LDX     #$0295      
C2E5: 10 8E C3 24         LDY     #$C324      
C2E9: 6C 84               INC     ,X          
C2EB: 8C 02 9A            CMPX    #$029A      
C2EE: 27 0F               BEQ     $C2FF          ;{}       
C2F0: A6 84               LDA     ,X          
C2F2: A1 A0               CMPA    ,Y+         
C2F4: 2D 09               BLT     $C2FF       
C2F6: 6F 80               CLR     ,X+         
C2F8: 33 42               LEAU    2,U         
C2FA: BD C2 42            JSR     $C242          ;{}       
C2FD: 20 EA               BRA     $C2E9          ;{}       
C2FF: 0D 28               TST     >$28           ;{-}       
C301: 26 1D               BNE     $C320          ;{}       
C303: 0D 77               TST     >$77           ;{-}       
C305: 27 11               BEQ     $C318          ;{}       
C307: 7F FF 02            CLR     $FF02       
C30A: B6 FF 00            LDA     $FF00       
C30D: 84 7F               ANDA    #$7F        
C30F: 81 7F               CMPA    #$7F        
C311: 27 0D               BEQ     $C320          ;{}       
C313: 8E C0 05            LDX     #$C005         ; Start game
C316: AF 6A               STX     10,S           ; Return address
C318: 10 3F               SWI2                   ; BASIC function ...
C31A: 00                                         ; ... POLCAT
C31B: 4D                  TSTA                   ; Was a key pressed?
C31C: 27 02               BEQ     $C320          ;{} No ... move on
C31E: 8D 20               BSR     $C340          ;{} Store character in ring buffer
C320: B6 FF 02            LDA     $FF02          ; Acknowledge the interrupt so it can fire again
C323: 3B                  RTI                    ; Return from interrupt


C324: 06 0A
C326: 3C 3C
C328: 18

CharFromBuf:
; Read character A from input ring buffer and advance the tail. Return 0
; if nothing to read.
C329: 34 15               PSHS    X,B,CC         ; Save
C32B: 1A 10               ORCC    #$10           ; Turn OFF the IRQ interrupt
C32D: 4F                  CLRA                   ; Initial return ... no key in buffer
C32E: 8E 02 D1            LDX     #$02D1         ; 32-byte input ring buffer
C331: D6 BC               LDB     >$BC           ;{-} The ring-buffer head
C333: D1 BD               CMPB    >$BD           ;{-} Same as the ring-buffer tail?
C335: 27 07               BEQ     $C33E          ;{} Yes ... return 0 (no input)
C337: A6 85               LDA     B,X            ; Get the next character from the head
C339: 5C                  INCB                   ; Advance the head ...
C33A: C4 1F               ANDB    #$1F           ; ... and wrap ...
C33C: D7 BC               STB     >$BC           ;{-} ... if needed
C33E: 35 95               PULS    CC,B,X,PC      ; Done

CharToBuf:
; Save character A to input ring buffer and advance tail
C340: 34 15               PSHS    X,B,CC         ; Save all
C342: 1A 10               ORCC    #$10           ; Turn OFF the IRQ interrupt
C344: 8E 02 D1            LDX     #$02D1         ; 32-byte ring buffer
C347: D6 BD               LDB     >$BD           ;{-} Get tail index
C349: A7 85               STA     B,X            ; Store the character to the tail
C34B: 5C                  INCB                   ; Advance the tail ...
C34C: C4 1F               ANDB    #$1F           ; ... and wrap ...
C34E: D7 BD               STB     >$BD           ;{-} ... if needed
C350: 35 95               PULS    CC,B,X,PC      ; Done

;;= SWI Handler =
;;
;;TODO discussion about this technique

SWIHandler:
;
C352: 1C EF               ANDCC   #$EF           ; Re-enable the IRQ 
C354: AE 6A               LDX     10,S           ; The Program Counter in the calling frame
C356: A6 80               LDA     ,X+            ; Get the interrupt number immediate
C358: AF 6A               STX     10,S           ; Update the calling frame program counter
C35A: 8E C3 84            LDX     #$C384         ; Offset of first routine
C35D: CE C9 95            LDU     #$C995         ; SWI routine offset bytes
C360: E6 C0               LDB     ,U+            ; Get offset byte to routine
C362: 3A                  ABX                    ; Add it to code pointer
C363: 4A                  DECA                   ; Found the one we are looking for?
C364: 2A FA               BPL     $C360          ;{} No ... keep off-setting
C366: AF E3               STX     ,--S           ; Push the address of the routine on the stack
C368: EC 63               LDD     3,S            ; A and B passed from caller
C36A: AE 66               LDX     6,S            ; X from the caller
C36C: EE 6A               LDU     10,S           ; U from the caller
C36E: AD F1               JSR     [,S++]         ; Do the SWI routine
C370: 3B                  RTI                    ; Return to caller

SWI2Handler:
; Execute one of the vectored routines in the BASIC ROM
; 00 = POLCAT
; 02 = CHROUT
; 04 = CSRDON
; 06 = BLKIN
; 08 = BLKOUT
; 0A = JOYIN
; 0C = WRTLDR
;
C371: 5F                  CLRB                   ; BASIC functions need ...                
C372: 1F 9B               TFR     B,DP           ; ... DP = 0
C374: EE 6A               LDU     10,S           ; The Program Counter in the calling frame
C376: E6 C0               LDB     ,U+            ; Get the interrupt number immediate
C378: EF 6A               STU     10,S           ; Update the calling frame program counter
C37A: CE A0 00            LDU     #$A000         ; BASIC function jump table
C37D: AD D5               JSR     [B,U]          ; Call the BASIC function
C37F: A7 61               STA     1,S            ; Return A value to caller
C381: AF 64               STX     4,S            ; Return Y value to caller
C383: 3B                  RTI                    ; Return to caller

SWI_0:
;  Light level
C384: 96 6E               LDA     >$6E           ;{-}       
C386: 0D 75               TST     >$75           ;{-}       
C388: 27 04               BEQ     $C38E          ;{}       
C38A: 96 6F               LDA     >$6F           ;{-}       
C38C: 0F 75               CLR     >$75           ;{-}       
C38E: 5F                  CLRB                
C38F: 80 07               SUBA    #$07        
C391: 90 8B               SUBA    >$8B           ;{-}       
C393: 2C 0A               BGE     $C39F       
C395: 5A                  DECB                
C396: 81 F9               CMPA    #$F9        
C398: 2F 05               BLE     $C39F       
C39A: 8E CB 96            LDX     #$CB96      
C39D: E6 86               LDB     A,X         
C39F: D7 2D               STB     >$2D           ;{-}       
C3A1: 39                  RTS                 

SWI_1: 
;  Draw picture X on screen
;
C3A2: 0F 51               CLR     >$51        ;{-} Starting new line segment
C3A4: 96 2D               LDA     >$2D        ;{-} Dot Frequency
C3A6: 4C                  INCA                ; Anything to draw?
C3A7: 27 4D               BEQ     $C3F6       ;{} No, out
;
C3A9: E6 84               LDB     ,X          ; Else get command
C3AB: C0 FA               SUBB    #$FA        ; Is this a command?
C3AD: 25 20               BCS     $C3CF       ;{} No, go to standard line
C3AF: 30 01               LEAX    1,X         ; Next in list
C3B1: 10 8E C3 B9         LDY     #$C3B9      ; Graphics Commands
C3B5: E6 A5               LDB     B,Y         ; Get offset
C3B7: 6E A5               JMP     B,Y         ; Go to command
;
; Special graphics commands
;        00-FA: Standard line command
C3B9: 10  ; FA: Return from graphics subroutine
C3BA: 06  ; FB: Jump to subroutine
C3BB: 5E  ; FC: Multiple short segments
C3BC: 0D  ; FD: Jump to xxxx
C3BD: 3D  ; FE: Exit
C3BE: 12  ; FF: Start a new segment
;
; Command FB: Jump to subroutine
C3BF: EC 81               LDD     ,X++        ; Get new address
C3C1: AF E3               STX     ,--S        ; Save return
C3C3: 1F 01               TFR     D,X         ; D->X
; Command FD: Jump to XXXX
C3C5: 8C AE 84            CMPX    #$AE84      ; LDX ,X Jump to address
; Command FA: Return from graphics subroutine
C3C8: 8C AE E1            CMPX    #$AEE1      ; LDX ,S++ Return from subroutine
; Command FF: Start a new segment
C3CB: 0F 51               CLR     >$51        ;{-} New segment
C3CD: 20 DA               BRA     $C3A9       ;{} Continue
;
; Regular line command
C3CF: 0D 51               TST     >$51        ;{-} Already have start point?
C3D1: 26 06               BNE     $C3D9       ;{} Yes, skip this
C3D3: 8D 0D               BSR     $C3E2       ;{} Get coordinates
C3D5: 0A 51               DEC     >$51        ;{-} Flag now have a start
C3D7: 20 D0               BRA     $C3A9       ;{} Continue
;
C3D9: 8D 05               BSR     $C3E0       ;{} Set up new segment
C3DB: BD CA B7            JSR     $CAB7       ;{} Draw line
C3DE: 20 C9               BRA     $C3A9       ;{} Back for more
;
C3E0: 8D 15               BSR     $C3F7       ;{} Move old end to new start
C3E2: E6 80               LDB     ,X+         ; Y coordinate
C3E4: D7 54               STB     >$54        ;{-} Hold on to it
C3E6: 8D 18               BSR     $C400       ;{}       
C3E8: D3 07               ADDD    >$07        ;{-} Y center of screen
C3EA: DD 33               STD     >$33        ;{-} Store new end Y
C3EC: E6 80               LDB     ,X+         ; X coordinate
C3EE: D7 52               STB     >$52        ;{-} Hold on to it
C3F0: 8D 14               BSR     $C406       ;{}       
C3F2: D3 05               ADDD    >$05        ;{-} X center of screen
C3F4: DD 35               STD     >$35        ;{-} Store new end X
; Command FE: Exit
C3F6: 39                  RTS                 ; Done
;
C3F7: DC 33               LDD     >$33        ;{-} Move old Y...
C3F9: DD 2F               STD     >$2F        ;{-} ... to new Y
C3FB: DC 35               LDD     >$35        ;{-} Move old X
C3FD: DD 31               STD     >$31        ;{-} ... to new X
C3FF: 39                  RTS                 ; Done
;
C400: 96 50               LDA     >$50        ;{-} Y Scale factor
C402: D0 08               SUBB    >$08        ;{-} Y byte center of screen
C404: 20 04               BRA     $C40A       ;{} Handle signed multiply
;
C406: 96 4F               LDA     >$4F        ;{-} X scale factor
C408: D0 06               SUBB    >$06        ;{-} X byte center of screen
;
C40A: 25 03               BCS     $C40F       ;{} Handle signed multiply
C40C: 3D                  MUL                 ; Do multiplication
C40D: 20 05               BRA     $C414       ;{}       
C40F: 50                  NEGB                ; Make it positive
C410: 3D                  MUL                 ; Do multiply
C411: BD CA 99            JSR     $CA99       ;{} Negate D
C414: 7E D3 77            JMP     $D377       ;{} Divide D by 128 (fractional math)
;
; Command FC: Multiple short segments
C417: A6 80               LDA     ,X+         ; Next description
C419: 27 B0               BEQ     $C3CB       ;{} 0 means done
C41B: 8D DA               BSR     $C3F7       ;{} Move old end to new beginning
C41D: E6 1F               LDB     -1,X        ; Byte
C41F: 57                  ASRB                ; Upper ...
C420: 57                  ASRB                ; ... 4 bits ...
C421: 57                  ASRB                ; ... ...
C422: 57                  ASRB                ; ... ...
C423: 58                  ASLB                ; ... *2
C424: DB 54               ADDB    >$54        ;{-} Add to old Y
C426: D7 54               STB     >$54        ;{-} New Y
C428: 8D D6               BSR     $C400       ;{} Do multiply and prepare
C42A: D3 07               ADDD    >$07        ;{-} Offset center of screen
C42C: DD 33               STD     >$33        ;{-} Save new Y
C42E: E6 1F               LDB     -1,X        ; Descriptor
C430: C4 0F               ANDB    #$0F        ; Lower four bits
C432: C5 08               BITB    #$08        ; Is this negative?
C434: 27 02               BEQ     $C438       ;{} No,
C436: CA F0               ORB     #$F0        ; Else make it negative
C438: 58                  ASLB                ; *2
C439: DB 52               ADDB    >$52        ;{-} Offset X coordinate
C43B: D7 52               STB     >$52        ;{-} Store New
C43D: 8D C7               BSR     $C406       ;{} Scale it
C43F: D3 05               ADDD    >$05        ;{-} Add offset to center
C441: DD 35               STD     >$35        ;{-} Absolute coordinate
C443: BD CA B7            JSR     $CAB7       ;{} Draw line segment
C446: 20 CF               BRA     $C417       ;{} Continue multiple segments

SWI_2:
;  * Uncompress message m and display
;
C448: AE 6C               LDX     12,S        ; PC from stack
C44A: 3F                  SWI                 ; Decompress the message
C44B: 05                                         ; SWI 05 Uncompress message X to buffer
C44C: AF 6C               STX     12,S        ; Update the PC to skip message
C44E: 8E 03 35            LDX     #$0335      ; Temporary buffer
C451: 8C 3F 04            CMPX    #$3F04      
;  C452: 3F         SWI                     ; Print character in A
;  C453: 04

SWI_3:
;  Display uncompressed message pointed to by X

C454: A6 80               LDA     ,X+         ; Next character from X
C456: 2A FA               BPL     $C452       ;{} Printable ... do it
C458: 39                  RTS                 ; End of string

SWI_4:
;  Display a single character in A

C459: 0D B7               TST     >$B7        ;{-}       
C45B: 26 03               BNE     $C460       ;{}       
C45D: CE 03 90            LDU     #$0390      
C460: AE 44               LDX     4,U         
C462: BD C9 B2            JSR     $C9B2       ;{}       
C465: AC 42               CMPX    2,U         
C467: 25 03               BCS     $C46C       ;{}       
C469: BD C9 D4            JSR     $C9D4       ;{}       
C46C: AF 44               STX     4,U         
C46E: 39                  RTS                 

SWI_5:
;  Uncompress message X to buffer

C46F: CE 03 35            LDU     #$0335      

SWI_6:
;  Uncompress message X to given buffer U

C472: 31 5F               LEAY    -1,U     ; First in buffer holds the algorithm spot   
C474: 6F A4               CLR     ,Y       ; Start with 0   
C476: 8D 14               BSR     $C48C    ;{} Get next byte to B   
C478: 1F 98               TFR     B,A      ; A holds the length   
C47A: 8D 10               BSR     $C48C    ;{} Get the byte   
C47C: E7 C0               STB     ,U+      ; Store to buffer   
C47E: 4A                  DECA             ; All done?   
C47F: 2A F9               BPL     $C47A    ;{} No ... keep going   
C481: A7 C4               STA     ,U       ; Store terminator FF   
C483: 6D A4               TST     ,Y       ; Did the algorithm finish on a byte boundary?   
C485: 27 02               BEQ     $C489    ;{} Yes ... X is pointing to next correctly   
C487: 30 01               LEAX    1,X      ; Advance ...   
C489: AF 66               STX     6,S      ; ... X to next message   
C48B: 39                  RTS              ; Done   

; Uncompress routine
; Y points to algorithm number
; Return byte in B (5 bits)
; Advance compression to next
;
; The algorithm compresses 8 5-bit values into 5 bytes
; There are 8 algorithm steps to peel out the 5 bit value and advance the pointer 
; if the next step needs it advanced.
;
; AAAAABBB BBCCCCCD DDDDEEEE EFFFFFGG GGGHHHHH
;
C48C: 34 42               PSHS    U,A      ; Hold buffer and length         
C48E: A6 A4               LDA     ,Y       ; Get algorithm spot   
C490: CE C4 A2            LDU     #$C4A2   ; Offset table   
C493: A6 C6               LDA     A,U      ; Get offset   
C495: AD C6               JSR     A,U      ; Execute next decompress step   
C497: A6 A4               LDA     ,Y       ; Bump ...   
C499: 4C                  INCA             ; ... to next step   
C49A: 84 07               ANDA    #$07     ; Rolls back to 0   
C49C: A7 A4               STA     ,Y       ; Next step   
C49E: C4 1F               ANDB    #$1F     ; Decompressed is 5 bit   
C4A0: 35 C2               PULS    A,U,PC   ; Return   
;     
C4A2: 08 ; C4A2 + 08 = C4AA  AAAAA
C4A3: 0E ; C4A2 + 0E = C4B0  BBBBB
C4A4: 13 ; C4A2 + 13 = C4B5  CCCCC
C4A5: 17 ; C4A2 + 17 = C4B9  DDDDD
C4A6: 1C ; C4A2 + 1C = C4BE  EEEEE
C4A7: 21 ; C4A2 + 21 = C4C3  FFFFF
C4A8: 25 ; C4A2 + 25 = C4C7  GGGGG
C4A9: 2A ; C4A2 + 2A = C4CC  HHHHH
;
; Get AAAAA    
C4AA: E6 84               LDB     ,X    ; B = [X]       
C4AC: 54                  LSRB          ; B = B >> 3  (0 in bit 7)
C4AD: 54                  LSRB          ; ...     
C4AE: 54                  LSRB          ; ...     
C4AF: 39                  RTS           ; Done      
;
; Get BBBBB
C4B0: EC 80               LDD     ,X+   ; D = [X++]      
C4B2: 7E D3 79            JMP     $D379 ;{} D = D>>6
;
; Get CCCCC
C4B5: E6 84               LDB     ,X    ; B = [X]     
C4B7: 20 F5               BRA     $C4AE ;{} B = B>>1      
;
; Get DDDDD
C4B9: EC 80               LDD     ,X+   ; D = [X++]      
C4BB: 7E D3 7D            JMP     $D37D ;{} D = D>>4      
;
; Get EEEEE
C4BE: EC 80               LDD     ,X+   ; D = [X++]      
C4C0: 7E D3 77            JMP     $D377 ;{} D = D>>7      
;
; Get FFFFF
C4C3: E6 84               LDB     ,X    ; B = [X]          
C4C5: 20 E6               BRA     $C4AD ;{} B = B>>2      
;
; Get GGGGG
C4C7: EC 80               LDD     ,X+   ; D = [X++]      
C4C9: 7E D3 7B            JMP     $D37B ;{} D = D>>5      
;
; Get HHHHH
C4CC: E6 80               LDB     ,X+   ; B = [X++]      
C4CE: 39                  RTS           ; Done      

SWI_7:
;  Get random number

C4CF: 8E 00 08            LDX     #$0008      
C4D2: 5F                  CLRB                
C4D3: 10 8E 00 08         LDY     #$0008      
C4D7: 96 6D               LDA     >$6D        ;{-}       
C4D9: 84 E1               ANDA    #$E1        
C4DB: 48                  ASLA                
C4DC: 24 01               BCC     $C4DF       ;{}       
C4DE: 5C                  INCB                
C4DF: 31 3F               LEAY    -1,Y        
C4E1: 26 F8               BNE     $C4DB       ;{}       
C4E3: 54                  LSRB                
C4E4: 09 6B               ROL     >$6B        ;{-}       
C4E6: 09 6C               ROL     >$6C        ;{-}       
C4E8: 09 6D               ROL     >$6D        ;{-}       
C4EA: 30 1F               LEAX    -1,X        
C4EC: 26 E4               BNE     $C4D2       ;{}       
C4EE: 96 6B               LDA     >$6B        ;{-}       
C4F0: A7 63               STA     3,S         
C4F2: 39                  RTS                 

SWI_8:
;  Clear display screen
SWI_9:
;  Clear secondary screen

C4F3: DE 09               LDU     >$09        ;{-} U = Visible screen descriptor
C4F5: 8C DE 0B            CMPX    #$DE0B      ; SWI_9 U = Drawing screen descriptor
C4F8: D6 2C               LDB     >$2C        ;{-}       
C4FA: 8D 1B               BSR     $C517       ;{}       
C4FC: EF 6A               STU     10,S        
C4FE: 39                  RTS                 

SWI_A:
;  Clear hand descriptor
C4FF: 8E 03 88            LDX     #$0388      ; Hand descriptor space
C502: CE D8 7C            LDU     #$D87C      ; Clearing Data
C505: 20 06               BRA     $C50D       ;{} Clear out hand descriptor

SWI_B:
;  Clear play field
C507: 8E 03 90            LDX     #$0390      ; Playing field
C50A: CE D8 88            LDU     #$D888      ; Clearing Data
C50D: 6F 04               CLR     4,X         ; Move cursor...
C50F: 6F 05               CLR     5,X         ; ... to beginning
C511: E6 06               LDB     6,X         ; Color
C513: 8D 02               BSR     $C517       ;{} Clear space
C515: 33 46               LEAU    6,U         ; Now clear command lines
C517: 34 76               PSHS    U,Y,X,B,A   
C519: 1D                  SEX                 ; Expand color mask to word
C51A: 1F 02               TFR     D,Y         ; D->Y for a double word
C51C: 30 C4               LEAX    ,U          ; First in space
C51E: EE 42               LDU     2,U         ; Last in space
C520: 36 26               PSHU    Y,B,A       ; Wipe 2 word area
C522: 11 A3 84            CMPU    ,X          ; Done?
C525: 26 F9               BNE     $C520       ;{} No, do all
C527: 35 F6               PULS    A,B,X,Y,U,PC; Out

SWI_C:
;  Update heart rate
C529: 0F C1               CLR     >$C1        ;{-}       
C52B: DC 17               LDD     >$17        ;{-} Strength
C52D: DD C2               STD     >$C2        ;{-}       
C52F: 86 06               LDA     #$06        
C531: 08 C3               LSL     >$C3        ;{-}       
C533: 09 C2               ROL     >$C2        ;{-}       
C535: 09 C1               ROL     >$C1        ;{-}       
C537: 4A                  DECA                
C538: 26 F7               BNE     $C531       ;{}       
C53A: 0F C4               CLR     >$C4        ;{-}       
C53C: DC 21               LDD     >$21        ;{-}       
C53E: DD C5               STD     >$C5        ;{-}       
C540: 08 C6               LSL     >$C6        ;{-}       
C542: 09 C5               ROL     >$C5        ;{-}       
C544: 09 C4               ROL     >$C4        ;{-}       
C546: DC 17               LDD     >$17        ;{-}       
C548: D3 C5               ADDD    >$C5        ;{-}       
C54A: DD C5               STD     >$C5        ;{-}       
C54C: D6 C4               LDB     >$C4        ;{-}       
C54E: C9 00               ADCB    #$00        
C550: D7 C4               STB     >$C4        ;{-}       
C552: 0F C7               CLR     >$C7        ;{-}       
C554: DC C2               LDD     >$C2        ;{-}       
C556: 93 C5               SUBD    >$C5        ;{-}       
C558: DD C2               STD     >$C2        ;{-}       
C55A: 96 C1               LDA     >$C1        ;{-}       
C55C: 92 C4               SBCA    >$C4        ;{-}       
C55E: 97 C1               STA     >$C1        ;{-}       
C560: 0C C7               INC     >$C7        ;{-}       
C562: 24 F0               BCC     $C554       ;{}       
C564: 96 C7               LDA     >$C7        ;{-}       
C566: 80 13               SUBA    #$13        
C568: 97 AF               STA     >$AF        ;{-}       
C56A: 0D 28               TST     >$28        ;{-}       
C56C: 26 27               BNE     $C595       ;{}       
C56E: 81 03               CMPA    #$03        
C570: 2E 3C               BGT     $C5AE       
C572: 3F                  SWI                 
C573: 0B                                         ; SWI 0B Clear play field
C574: 96 6E               LDA     >$6E           ;{-}       
C576: 97 70               STA     >$70           ;{-}       
C578: 0A 6F               DEC     >$6F           ;{-}       
C57A: AD 9F 02 B2         JSR     [$02B2]     ; Display playing screen
C57E: 0A B4               DEC     >$B4        ;{-}       
C580: 13                  SYNC                ; Wait for display
C581: 0A 6E               DEC     >$6E        ;{-} Light level down
C583: 96 6E               LDA     >$6E        ;{-} Down
C585: 81 F8               CMPA    #$F8        ; All fainted out?
C587: 2E EF               BGT     $C578       ; No, keep going
C589: 3F                  SWI                 ; Clear screen
C58A: 09                                         ; SWI 09 Clear secondary screen
C58B: 0A B4               DEC     >$B4           ;{-}       
C58D: 0A 28               DEC     >$28           ;{-}       
C58F: 0F BC               CLR     >$BC           ;{-}       
C591: 0F BD               CLR     >$BD           ;{-}       
C593: 20 19               BRA     $C5AE          ;{}       
C595: 81 04               CMPA    #$04        
C597: 2F 15               BLE     $C5AE       
C599: AD 9F 02 B2         JSR     [$02B2]     ; Display playing screen
C59D: 0A B4               DEC     >$B4        ;{-}       
C59F: 13                  SYNC                ; Wait a display
C5A0: 0C 6F               INC     >$6F        ;{-}       
C5A2: 0C 6E               INC     >$6E        ;{-}       
C5A4: 96 6E               LDA     >$6E        ;{-}       
C5A6: 91 70               CMPA    >$70        ;{-}       
C5A8: 2F EF               BLE     $C599       
C5AA: 0F 28               CLR     >$28        ;{-}       
C5AC: 3F                  SWI                 ; Display playing screen
C5AD: 0F                                         ; SWI 0F Ready command prompt
C5AE: 9E 17               LDX     >$17        ;{-} Strength
C5B0: 9C 21               CMPX    >$21        ;{-} Heart level
C5B2: 25 01               BCS     $C5B5       ;{} Can not support it, die
C5B4: 39                  RTS                 

; Player is dead!

C5B5: 8E DF 10            LDX     #$DF10      ; Beam on Moon Wizard (not Star Wizard)
C5B8: 0A 9E               DEC     >$9E        ;{-}       
C5BA: 3F                  SWI                 
C5BB: 13                                         ; SWI 13 Beam on picture pointed to by X
C5BC: 3F                  SWI                 ; Print "Yet Another Does Not Return"
C5BD: 02                                         ; SWI 02 * Uncompress message m and display
;
C5BE: FF C1 92 D0 01 73 E8 82 C8 04 79 66 07 3E 80 91 69 59 3B DE F0 ; "_1F_ YET ANOTHER DOES NOT RETURN..."
 ;      
C5D3: 0F 28               CLR     >$28                               ;{-}       
C5D5: 0A 77               DEC     >$77                               ;{-}       
C5D7: 20 FE               BRA     $C5D7       ;{} Endless loop

SWI_D:
;  Print contents of hands on status line

C5D9: CE 03 88            LDU     #$0388      ; Hand line descriptor
C5DC: 0A B7               DEC     >$B7        ;{-} Don't allow screen update
C5DE: 96 2C               LDA     >$2C        ;{-} Base color
C5E0: 43                  COMA                ; Hands are reverse color
C5E1: A7 46               STA     6,U         ; New color
C5E3: 4F                  CLRA                ; Coordinates...
C5E4: 5F                  CLRB                ; ...far left
C5E5: 8D 22               BSR     $C609       ;{} Blank left hand slot
C5E7: ED 44               STD     4,U         ; Reposition cursor
C5E9: 9E 1D               LDX     >$1D        ;{-} Left hand object
C5EB: 8D 2A               BSR     $C617       ;{} Create string
C5ED: 3F                  SWI                 ; And print
C5EE: 03                                         ; SWI 03 Display uncompressed message pointed to by X
C5EF: CC 00 11            LDD     #$0011      ; Start of right hand space
C5F2: 8D 15               BSR     $C609       ;{} Blank right hand area
C5F4: 9E 1F               LDX     >$1F        ;{-} Right hand object
C5F6: 8D 1F               BSR     $C617       ;{} Decode it
C5F8: 1F 12               TFR     X,Y         ; Over to Y
C5FA: CC 00 21            LDD     #$0021      ; Far right coordinates
C5FD: 5A                  DECB                ; Shift right hand from right
C5FE: 6D A0               TST     ,Y+         ; All accounted for?
C600: 2A FB               BPL     $C5FD       ;{} No, keep counting from right
C602: ED 44               STD     4,U         ; Coordinates for right hand
C604: 3F                  SWI                 ; Print right hand contents
C605: 03                                         ; SWI 03 Display uncompressed message pointed to by X
C606: 0F B7               CLR     >$B7        ;{-} Clear to display now
C608: 39                  RTS                 
C609: 34 06               PSHS    B,A         
C60B: ED 44               STD     4,U         ; Coordinates
C60D: CC 00 0F            LDD     #$000F      ; 15
C610: 3F                  SWI                 ; Print a space
C611: 04                                         ; SWI 04 Display a single character in A
C612: 5A                  DECB                ; All blanked?
C613: 26 FB               BNE     $C610       ;{} No, blank all
C615: 35 86               PULS    A,B,PC      
C617: 34 66               PSHS    U,Y,B,A     
C619: 31 84               LEAY    ,X          ; Get pointer to object
C61B: 26 05               BNE     $C622       ;{} Yes, it is something
C61D: 8E C6 50            LDX     #$C650      ; EMPTY message
C620: 20 1A               BRA     $C63C       ;{} Skip all decoding and use EMPTY
C622: CE 03 13            LDU     #$0313      ; Buffer for hand printing
C625: 6D 2B               TST     11,Y        ; Revealed?
C627: 26 09               BNE     $C632       ;{} No, skip proper name
C629: A6 29               LDA     9,Y         ; Get proper name token
C62B: 8E D8 F4            LDX     #$D8F4      ; Proper name table
C62E: 8D 0E               BSR     $C63E       ;{} Find proper name
C630: 6F 5F               CLR     -1,U        ; Stick space on end of proper name
C632: A6 2A               LDA     10,Y        ; Object class
C634: 8E D9 6B            LDX     #$D96B      ; Class name table
C637: 8D 05               BSR     $C63E       ;{} Find class name
C639: 8E 03 13            LDX     #$0313      ; Return pointer to buffer
C63C: 35 E6               PULS    A,B,Y,U,PC  
C63E: 34 12               PSHS    X,A         
C640: 3F                  SWI                 ; Uncompress message
C641: 05                                         ; SWI 05 Uncompress message X to buffer
C642: 4A                  DECA                ; Found proper one?
C643: 2A FB               BPL     $C640       ;{} No, keep going
C645: 8E 03 36            LDX     #$0336      ; Uncompress buffer
C648: A6 80               LDA     ,X+         ; Copy from uncompressed...
C64A: A7 C0               STA     ,U+         ; ... to hand string
C64C: 2A FA               BPL     $C648       ;{} Copy all, including end marker
C64E: 35 92               PULS    A,X,PC      
C650: 05                                    ;'E'
C651: 0D                                    ;'M'
C652: 10                                    ;'P'
C653: 14                                    ;'T'
C654: 19                                    ;'Y'
C655: FF                                    ;END

SWI_E:
;  Display playing screen

C656: 0D 28               TST     >$28        ;{-} Needs refreshing?
C658: 26 05               BNE     $C65F       ;{} No, skip it
C65A: 8D 04               BSR     $C660       ;{} Refresh display
C65C: 0A B4               DEC     >$B4        ;{-}       
C65E: 13                  SYNC                ; Wait on display
C65F: 39                  RTS                 ; Out
C660: 34 76               PSHS    U,Y,X,B,A   
C662: DC 26               LDD     >$26        ;{-} Abient light level
C664: DE 24               LDU     >$24        ;{-} Torch pointer
C666: 27 04               BEQ     $C66C       ;{} No torch lit, go with ambient level
C668: AB 47               ADDA    7,U         ; Add ambient...
C66A: EB 48               ADDB    8,U         ; ... to torch's power
C66C: DD 6E               STD     >$6E        ;{-} Light level to display things with
C66E: AD 9F 02 B2         JSR     [$02B2]     ; Refresh screen
C672: 35 F6               PULS    A,B,X,Y,U,PC

SWI_F:
;  Ready command prompt
C674: 8E C6 7A            LDX     #$C67A      ; Prompt CR and cursor
C677: 3F                  SWI                 ; SWI 03 ...
C678: 03                                         ; SWI 03 Display uncompressed message pointed to by X
C679: 39                  RTS                 ; Done 

C67A: 1F 1E 1C 24 FF     ; CR "." "_" BACK END 

SWI_10:
;  Wait for n SYNCs
                      
C67F: C6 51               LDB     #$51        
C681: 13                  SYNC                
C682: 5A                  DECB                
C683: 26 FC               BNE     $C681       ;{}       
C685: 39                  RTS                 

SWI_11:
;  Fill X to U with 0s
C686: 4F                  CLRA                ; LDA 0   (SWI_11)
C687: 8C                                      ; CMPX #86FF (Skip load)
SWI_12:
;  Fill X to U with FFs
C688: 86 FF               LDA     #$FF        ; LDA $FF (SWI_12)
C68A: A7 80               STA     ,X+         ; Clear the ...
C68C: AC 6A               CMPX    10,S        ; ... entire ... (calling U)
C68E: 26 FA               BNE     $C68A       ;{} ... buffer
C690: 39                  RTS                 ; Done

; Execute a BASIC ROM routine ?? Never called? Maybe old SWI that migrated to SWI2?
C691: 5F                  CLRB                
C692: 1F 9B               TFR     B,DP        
C694: EE 6C               LDU     12,S        
C696: E6 C0               LDB     ,U+         
C698: EF 6C               STU     12,S        
C69A: CE A0 00            LDU     #$A000      
C69D: AD D5               JSR     [B,U]       
C69F: A7 63               STA     3,S         
C6A1: AF 66               STX     6,S         
C6A3: 39                  RTS                 

SWI_13:
;  Beam on picture pointed to by X
C6A4: 0F B1               CLR     >$B1        ;{-}       
C6A6: 3F                  SWI                 
C6A7: 0A                                         ; SWI 0A Clear hand descriptor

SWI_14:
;  Beam subroutine
C6A8: 3F                  SWI                 
C6A9: 0B                                         ; SWI 0B Clear play field
C6AA: CC 80 80            LDD     #$8080      
C6AD: DD 4F               STD     >$4F           ;{-}       
C6AF: D6 9E               LDB     >$9E           ;{-}       
C6B1: 27 04               BEQ     $C6B7          ;{}       
C6B3: C6 20               LDB     #$20        
C6B5: 0A 9C               DEC     >$9C           ;{-}       
C6B7: 8D 1E               BSR     $C6D7          ;{}       
C6B9: 5A                  DECB                
C6BA: 5A                  DECB                
C6BB: 2A FA               BPL     $C6B7          ;{}       
C6BD: 0F 9C               CLR     >$9C           ;{-}       
C6BF: 0F 9E               CLR     >$9E           ;{-}       
C6C1: 3F                  SWI                 
C6C2: 1B                                         ; SWI 1B * Play sound i at full volume
C6C3: 16                                         ; Sound 16 = Wizard strike
C6C4: 39                  RTS

SWI_15:
;  Beam subroutine
C6C5: 3F                  SWI      
C6C6: 0B                                         ; SWI 0B Clear play field
C6C7: 8D F8               BSR     $C6C1          ;{}       
C6C9: 5F                  CLRB                
C6CA: 0A 9C               DEC     >$9C           ;{-}       
C6CC: 8D 09               BSR     $C6D7          ;{}       
C6CE: 5C                  INCB                
C6CF: 5C                  INCB                
C6D0: C1 20               CMPB    #$20        
C6D2: 26 F8               BNE     $C6CC          ;{}       
C6D4: 0F 9C               CLR     >$9C           ;{-}       
C6D6: 39                  RTS                 
C6D7: 34 50               PSHS    U,X         
C6D9: D7 2D               STB     >$2D           ;{-}       
C6DB: D7 9D               STB     >$9D           ;{-}       
C6DD: 3F                  SWI                 
C6DE: 09                                         ; SWI 09 Clear secondary screen
C6DF: 3F                  SWI                 
C6E0: 01                                         ; SWI 01 Draw picture X on screen
C6E1: 0A B4               DEC     >$B4           ;{-}       
C6E3: 13                  SYNC                
C6E4: 35 D0               PULS    X,U,PC     

SWI_16:
;  Print PREPARE
C6E6: BD D4 89            JSR     $D489          ;{}       
C6E9: CC 01 2C            LDD     #$012C      
C6EC: ED 44               STD     4,U         
C6EE: 3F                  SWI                 
C6EF: 02                                         ; SWI 02 * Uncompress message m and display
;
C6F0: 3C 24 58 06 45 D8 ; "PREPARE!"
;
C6F6: 0F B7               CLR     >$B7;{-}       
C6F8: 0A B4               DEC     >$B4       ;{-}       
C6FA: 39                  RTS                 

SWI_17:
;  Create object structure
;
; The object structure is filled out with all the class information for
; the object. If the object is a torch, shield, or sword then the base
; class info is used instead (pine, leather, wooden). When the object
; is revealed then it takes its own properties.
;
; A = type
; B = maze level
; Return X = pointer to object
;
C6FB: DE 0F               LDU     >$0F           ;{-} Current object pointer
C6FD: EF 66               STU     6,S            ; Return this
C6FF: 30 4E               LEAX    14,U           ; Point to ...
C701: 9F 0F               STX     >$0F           ;{-} ... next object
C703: A7 49               STA     9,U            ; Object type
C705: E7 44               STB     4,U            ; Maze level
C707: 3F                  SWI                    ; Fill out object ...
C708: 18                                         ; SWI 18 Change object to proper name and data
C709: E6 4A               LDB     10,U           ; Object class
C70B: 8E C7 19            LDX     #$C719         ; Base type table
C70E: A6 85               LDA     B,X            ; Get the basic model for this class
C710: 2B 06               BMI     $C718          ;{} There is no basic ... skip
C712: E6 4B               LDB     11,U           ; Preserve needed-to-reveal
C714: 3F                  SWI                    ; Copy over the basic ...
C715: 18                                         ; SWI 18 Change object to proper name and data
C716: E7 4B               STB     11,U           ; Preserve the needed-to-reveal
C718: 39                  RTS                    ; Done

; Basic type for each class (if applicable). This is used when the object is
; not revealed. Thus unrevealed IRON SWORD acts like the basic WOODEN SWORD.
C719: FF  ; Flask   no basic type
C71A: FF  ; Ring    no basic type
C71B: FF  ; Scroll  no basic type
C71C: 10  ; Shield  (10 = LEATHER SHIELD)
C71D: 11  ; Sword   (11 = WOODEN SWORD)
C71E: 0F  ; Torch   (0F = PINE TORCH)

SWI_18:
;  Change object to proper name and data
; A = object type
C71F: 48                  ASLA                   ; Type times ...
C720: 48                  ASLA                   ; ... 4 bytes per entry
C721: 8E DA 00            LDX     #$DA00         ; Object descriptors
C724: 31 86               LEAY    A,X            ; Get the object data
C726: 30 4A               LEAX    10,U           ; Destination in structure
C728: 86 04               LDA     #$04           ; Four bytes
C72A: BD C0 4B            JSR     $C04B          ;{} Copy 4 bytes from Y to X
C72D: 8E DA 60            LDX     #$DA60         ; Special object properties (backed up one slot)
C730: 30 04               LEAX    4,X            ; Point to next object
C732: A6 84               LDA     ,X             ; Object's type
C734: 2B 0C               BMI     $C742          ;{} End of list ... out
C736: A1 63               CMPA    3,S            ; Is this special data for us?
C738: 26 F6               BNE     $C730          ;{} No ... keep looking
C73A: EC 01               LDD     1,X            ; Copy ...
C73C: ED 46               STD     6,U            ; ... 3 ...
C73E: A6 03               LDA     3,X            ; ... bytes of ...
C740: A7 48               STA     8,U            ; ... special data
C742: 39                  RTS                    ; Done

SWI_19:
;  Bring up normal display
C743: 3F                  SWI                 
C744: 0A                                         ; SWI 0A Clear hand descriptor
C745: 3F                  SWI                 
C746: 0B                                         ; SWI 0B Clear play field
C747: 3F                  SWI                 
C748: 0C                                         ; SWI 0C Update heart rate
C749: 0C AE               INC     >$AE           ;{-}       
C74B: 0A AD               DEC     >$AD           ;{-}       
C74D: 0A B1               DEC     >$B1           ;{-}       
C74F: 3F                  SWI                 
C750: 0D                                         ; SWI 0D Print contents of hands on status line
C751: 8E CE 66            LDX     #$CE66      
C754: 9F B2               STX     >$B2           ;{-}       
C756: 3F                  SWI                 
C757: 0E                                         ; SWI 0E Display playing screen
C758: 39                  RTS                 

SWI_1A:
;  Set up level
;
C759: 97 81               STA     >$81           ;{-} Current level
C75B: C6 0C               LDB     #$0C           ; 12 bytes each (one byte to count each type of creature)
C75D: 3D                  MUL                    ; Pointer to ...
C75E: C3 03 98            ADDD    #$0398         ; ... creature count on level
C761: DD 82               STD     >$82           ;{-} Hold pointer to creature count
;
C763: D6 81               LDB     >$81           ;{-} Current level
C765: 8E CF FD            LDX     #$CFFD      
C768: 9F 86               STX     >$86           ;{-}       
C76A: A6 80               LDA     ,X+         
C76C: 2A FC               BPL     $C76A          ;{}       
C76E: 5A                  DECB                
C76F: 2A F7               BPL     $C768          ;{}       
C771: 8E 03 D4            LDX     #$03D4      
C774: CE 05 F4            LDU     #$05F4      
C777: 3F                  SWI                 
C778: 11                                         ; SWI 11 Fill X to U with 0s
C779: BD C0 53            JSR     $C053          ;{}       
C77C: BD CC 9C            JSR     $CC9C          ;{}       
;
C77F: DE 82               LDU     >$82           ;{-} Pointer to creature counts
C781: 86 0B               LDA     #$0B           ; Start with most powerful
C783: E6 C6               LDB     A,U            ; Get count of creature type in A
C785: 27 06               BEQ     $C78D          ;{} None to make ... skip
C787: BD CF A5            JSR     $CFA5          ;{} Make a creature of type in A
C78A: 5A                  DECB                   ; Make all ...
C78B: 26 FA               BNE     $C787          ;{} ... of that creature type
C78D: 4A                  DECA                   ; Next creature type
C78E: 2A F3               BPL     $C783          ;{} Do all creature types
;  
C790: CE 03 C3            LDU     #$03C3         ; (03D4 - 11) Start of monsters on this level
C793: 0F 91               CLR     >$91           ;{-} Scan from start of objects
C795: BD CF 63            JSR     $CF63          ;{} Find next object on this level
C798: 27 1C               BEQ     $C7B6          ;{} No objects ... done
C79A: 6D 05               TST     5,X            ; Somebody already holding this object?
C79C: 2A F7               BPL     $C795          ;{} Yes ... leave it alone
C79E: 33 C8 11            LEAU    $11,U          ; Point to next monster on this level
C7A1: 11 83 05 F4         CMPU    #$05F4         ; At end of list?
C7A5: 25 03               BCS     $C7AA          ;{} No ... leave pointer
C7A7: CE 03 D4            LDU     #$03D4         ; Yes ... start back with 1st monster
C7AA: 6D 4C               TST     12,U           ; Is this monster alive?
C7AC: 27 F0               BEQ     $C79E          ;{} No ... go to next monster (?? there better be at least one or this is an infinite loop)
C7AE: EC 48               LDD     8,U            ; Chain ....
C7B0: AF 48               STX     8,U            ; ... object ...
C7B2: ED 84               STD     ,X             ; ... to monster
C7B4: 20 DF               BRA     $C795          ;{} Keep going
;
C7B6: 96 81               LDA     >$81           ;{-}       
C7B8: 84 01               ANDA    #$01        
C7BA: 40                  NEGA                
C7BB: 97 2C               STA     >$2C           ;{-}       
C7BD: B7 03 96            STA     $0396       
C7C0: B7 03 86            STA     $0386       
C7C3: 43                  COMA                
C7C4: B7 03 8E            STA     $038E       
C7C7: 39                  RTS                 

SWI_1B:
;  * Play sound i at full volume
;
C7C8: AE 6C               LDX     12,S        ; Caller's PC
C7CA: A6 80               LDA     ,X+         ; Get the effect number
C7CC: AF 6C               STX     12,S        ; Restore the caller's PC
C7CE: C6 FF               LDB     #$FF        ; Full volume
;
SWI_1C:
;  Play sound A at volume B
;
C7D0: D7 61               STB     >$61        ;{-} Store the volume
C7D2: 8E C7 DC            LDX     #$C7DC      ; Effect table
C7D5: 48                  ASLA                ; Sound number to offset
C7D6: AD 96               JSR     [A,X]       ; Execute the sound routine
C7D8: 7F FF 20            CLR     $FF20       ; All sound off
C7DB: 39                  RTS                 ; Done

SoundEffectsRoutines:
; Sound effects routine entry points
;
C7DC: C8 2B ; 00 Spider
C7DE: C8 50 ; 01 Snake
C7E0: C9 51 ; 02 Giant
C7E2: C8 3C ; 03 Blob
C7E4: C8 E2 ; 04 Knight
C7E6: C9 55 ; 05 Hatchet Giant
C7E8: C8 4A ; 06 Scorpion
C7EA: C8 DE ; 07 Shielded Knight
C7EC: C8 4D ; 08 Wraith
C7EE: C9 59 ; 09 Galdrog
C7F0: C8 77 ; 0A Demon
C7F2: C8 77 ; 0B Wizard
;
C7F4: C8 0A ; 0C Flask
C7F6: C8 11 ; 0D Ring
C7F8: C8 27 ; 0E Scroll
C7FA: C8 DA ; 0F Shield
C7FC: C8 A6 ; 10 Sword
C7FE: C8 B2 ; 11 Torch
;
C800: C9 3F ; 12 Player hit
C802: C8 E6 ; 13 Wizard beam
C804: C8 72 ; 14 Wall hit
C806: C8 6D ; 15 Creature dying
C808: C8 8A ; 16 Wizard strike

C80A: CE C8 23            LDU     #$C823      
C80D: 86 04               LDA     #$04        
C80F: 20 05               BRA     $C816       ;{}       
C811: CE C8 1F            LDU     #$C81F      
C814: 86 0A               LDA     #$0A        
C816: 97 5F               STA     >$5F        ;{-}       
C818: AD C4               JSR     ,U          
C81A: 0A 5F               DEC     >$5F        ;{-}       
C81C: 26 FA               BNE     $C818       ;{}       
C81E: 39                  RTS                 
C81F: 8E 00 40            LDX     #$0040      
C822: 10 8E 00 80         LDY     #$0080      
C826: 10 8E 01 00         LDY     #$0100      
C82A: 10 8E 00 20         LDY     #$0020      
C82E: 8D 05               BSR     $C835       ;{}       
C830: 30 1F               LEAX    -1,X        
C832: 26 FA               BNE     $C82E       ;{}       
C834: 39                  RTS                 
C835: 86 FF               LDA     #$FF        
C837: 8D 30               BSR     $C869       ;{}       
C839: 4F                  CLRA                
C83A: 20 2D               BRA     $C869       ;{}       
C83C: 8E 05 00            LDX     #$0500      
C83F: 8D F4               BSR     $C835       ;{}       
C841: 30 88 30            LEAX    $30,X       
C844: 8C 08 00            CMPX    #$0800      
C847: 25 F6               BCS     $C83F       ;{}       
C849: 39                  RTS                 
C84A: 86 02               LDA     #$02        
C84C: 8C 86 01            CMPX    #$8601      
C84F: 8C 86 0A            CMPX    #$860A      
C852: 97 62               STA     >$62        ;{-}       
C854: 10 8E 00 C0         LDY     #$00C0      
C858: 8D 74               BSR     $C8CE       ;{}       
C85A: 8D 69               BSR     $C8C5       ;{}       
C85C: 31 3F               LEAY    -1,Y        
C85E: 26 F8               BNE     $C858       ;{}       
C860: 8D 58               BSR     $C8BA       ;{}       
C862: 0A 62               DEC     >$62        ;{-}       
C864: 26 EE               BNE     $C854       ;{}       
C866: 39                  RTS                 
C867: 8D 65               BSR     $C8CE       ;{}       
C869: 8D 5A               BSR     $C8C5       ;{}       
C86B: 20 50               BRA     $C8BD       ;{}       
C86D: CE DB DA            LDU     #$DBDA      
C870: 20 21               BRA     $C893       ;{}       
C872: CE DB D2            LDU     #$DBD2      
C875: 20 1C               BRA     $C893       ;{}       
C877: 86 08               LDA     #$08        
C879: 97 5F               STA     >$5F        ;{-}       
C87B: 8D 51               BSR     $C8CE       ;{}       
C87D: 4F                  CLRA                
C87E: 54                  LSRB                
C87F: 26 01               BNE     $C882       ;{}       
C881: 5C                  INCB                
C882: 1F 01               TFR     D,X         
C884: 8D A8               BSR     $C82E       ;{}       
C886: 0A 5F               DEC     >$5F        ;{-}       
C888: 26 F1               BNE     $C87B       ;{}       
C88A: CE DB D2            LDU     #$DBD2      
C88D: 8D 04               BSR     $C893       ;{}       
C88F: 8D 29               BSR     $C8BA       ;{}       
C891: 33 44               LEAU    4,U         
C893: AE C4               LDX     ,U          
C895: 10 AE 42            LDY     2,U         
C898: 8D CD               BSR     $C867       ;{}       
C89A: 31 3F               LEAY    -1,Y        
C89C: 26 FA               BNE     $C898       ;{}       
C89E: 30 02               LEAX    2,X         
C8A0: 8C 01 50            CMPX    #$0150      
C8A3: 26 F0               BNE     $C895       ;{}       
C8A5: 39                  RTS                 
C8A6: BD C9 31            JSR     $C931       ;{}       
C8A9: 80 8D               SUBA    #$8D        
C8AB: 76 25 04            ROR     $2504       
C8AE: 8D 15               BSR     $C8C5       ;{}       
C8B0: 20 F8               BRA     $C8AA       ;{}       
C8B2: BD C9 2E            JSR     $C92E       ;{}       
C8B5: A0 8D 6E 20         SUBA    $6E20,PC    
C8B9: FC 8E 10            LDD     $8E10       
C8BC: 00 34               NEG     >$34        ;{-}       
C8BE: 10 30                     
C8C0: 1F 26               TFR     Y,?         
C8C2: FC 35 90            LDD     $3590       
C8C5: D6 61               LDB     >$61        ;{-}       
C8C7: 3D                  MUL                 
C8C8: 84 FC               ANDA    #$FC        
C8CA: B7 FF 20            STA     $FF20       
C8CD: 39                  RTS                 
C8CE: DC 56               LDD     >$56        ;{-}       
C8D0: 58                  ASLB                
C8D1: 49                  ROLA                
C8D2: 58                  ASLB                
C8D3: 49                  ROLA                
C8D4: D3 56               ADDD    >$56        ;{-}       
C8D6: 5C                  INCB                
C8D7: DD 56               STD     >$56        ;{-}       
C8D9: 39                  RTS                 
C8DA: 8D 39               BSR     $C915       ;{}       
C8DC: 64 24               LSR     4,Y         
C8DE: 8D 35               BSR     $C915       ;{}       
C8E0: 32 12               LEAS    -14,X       
C8E2: 8D 31               BSR     $C915       ;{}       
C8E4: AF 36               STX     -10,Y       
C8E6: 8D 2D               BSR     $C915       ;{}       
C8E8: 19                  DAA                 
C8E9: 09 8D               ROL     >$8D        ;{-}       
C8EB: 42                        
C8EC: 60 9E              
C8EE: 63 10               COM     -16,X       
C8F0: 9E 65               LDX     >$65        ;{-}       
C8F2: 4F                  CLRA                
C8F3: 30 1F               LEAX    -1,X        
C8F5: 26 06               BNE     $C8FD       ;{}       
C8F7: 9E 63               LDX     >$63        ;{-}       
C8F9: 88 7F               EORA    #$7F        
C8FB: 8D 0D               BSR     $C90A       ;{}       
C8FD: 31 3F               LEAY    -1,Y        
C8FF: 26 F2               BNE     $C8F3       ;{}       
C901: 10 9E 65            LDY     >$65        ;{-}       
C904: 88 80               EORA    #$80        
C906: 8D 02               BSR     $C90A       ;{}       
C908: 20 E9               BRA     $C8F3       ;{}       
C90A: 97 59               STA     >$59        ;{-}       
C90C: 8D 70               BSR     $C97E       ;{}       
C90E: 23 B3               BLS     $C8C3       ;{}       
C910: 8D B3               BSR     $C8C5       ;{}       
C912: 96 59               LDA     >$59        ;{-}       
C914: 39                  RTS                 
C915: AE E1               LDX     ,S++        
C917: E6 80               LDB     ,X+         
C919: 4F                  CLRA                
C91A: DD 63               STD     >$63        ;{-}       
C91C: E6 80               LDB     ,X+         
C91E: DD 65               STD     >$65        ;{-}       
C920: 20 C8               BRA     $C8EA       ;{}       
C922: 8D AA               BSR     $C8CE       ;{}       
C924: 20 67               BRA     $C98D       ;{}       
C926: 8D A6               BSR     $C8CE       ;{}       
C928: 8D 54               BSR     $C97E       ;{}       
C92A: 23 97               BLS     $C8C3       ;{}       
C92C: 20 97               BRA     $C8C5       ;{}       
C92E: 9E 03               LDX     >$03        ;{-}       
C930: 10 9E 00            LDY     >$00        ;{-}       
C933: 9F 5B               STX     >$5B        ;{-}       
C935: AE E4               LDX     ,S          
C937: E6 80               LDB     ,X+         
C939: 4F                  CLRA                
C93A: DD 5D               STD     >$5D        ;{-}       
C93C: AF E4               STX     ,S          
C93E: 39                  RTS                 
C93F: 8D ED               BSR     $C92E       ;{}       
C941: 60 BD C8 CE         NEG     [$-3732,PC] 
C945: 44                  LSRA                
C946: 8D E0               BSR     $C928       ;{}       
C948: BD C8 CE            JSR     $C8CE       ;{}       
C94B: 8A 80               ORA     #$80        
C94D: 8D D9               BSR     $C928       ;{}       
C94F: 20 F1               BRA     $C942       ;{}       
C951: 8E 03 00            LDX     #$0300      
C954: 10 8E 02 00         LDY     #$0200      
C958: 10 8E 01 00         LDY     #$0100      
C95C: 9F 5D               STX     >$5D        ;{-}       
C95E: 4F                  CLRA                
C95F: 5F                  CLRB                
C960: DD 5B               STD     >$5B        ;{-}       
C962: 8D BE               BSR     $C922       ;{}       
C964: 25 0B               BCS     $C971       ;{}       
C966: BD C8 C5            JSR     $C8C5       ;{}       
C969: 8E 00 F0            LDX     #$00F0      
C96C: BD C8 BD            JSR     $C8BD       ;{}       
C96F: 20 F1               BRA     $C962       ;{}       
C971: 8D BB               BSR     $C92E       ;{}       
C973: 40                  NEGA                
C974: 8D B0               BSR     $C926       ;{}       
C976: 8E 00 60            LDX     #$0060      
C979: BD C8 BD            JSR     $C8BD       ;{}       
C97C: 20 F6               BRA     $C974       ;{}       
C97E: 34 02               PSHS    A           
C980: DC 5B               LDD     >$5B        ;{-}       
C982: 93 5D               SUBD    >$5D        ;{-}       
C984: 34 01               PSHS    CC          
C986: DD 5B               STD     >$5B        ;{-}       
C988: E6 61               LDB     1,S         
C98A: 3D                  MUL                 
C98B: 35 85               PULS    CC,B,PC     
C98D: 34 02               PSHS    A           
C98F: DC 5B               LDD     >$5B        ;{-}       
C991: D3 5D               ADDD    >$5D        ;{-}       
C993: 20 EF               BRA     $C984       ;{}       

;;TODO links here (Address) to the handlers
;;
;;TODO java to look through code and comment SWI from this table
;;
;;= SWI Function Table =
;;
;;||= SWI || Address || Function ||
;;|| 00 || C384 || Light level ||
;;|| 01 || C3A2 || Draw picture X on screen ||
;;|| 02 || C448 || * Uncompress message m and display ||
;;|| 03 || C454 || Display uncompressed message pointed to by X ||
;;|| 04 || C459 || Display a single character in A ||
;;|| 05 || C46F || Uncompress message X to buffer ||
;;|| 06 || C472 || Uncompress message X to given buffer U ||
;;|| 07 || C4CF || Get random number ||
;;|| 08 || C4F3 || Clear display screen ||
;;|| 09 || C4F6 || Clear secondary screen ||
;;|| 0A || C4FF || Clear hand descriptor ||
;;|| 0B || C507 || Clear play field ||
;;|| 0C || C529 || Update heart rate ||
;;|| 0D || C5D9 || Print contents of hands on status line ||
;;|| 0E || C656 || Display playing screen ||
;;|| 0F || C674 || Ready command prompt ||
;;|| 10 || C67F || Wait for n SYNCs ||
;;|| 11 || C686 || Fill X to U with 0s ||
;;|| 12 || C688 || Fill X to U with FFs ||
;;|| 13 || C6A4 || Beam on picture pointed to by X ||
;;|| 14 || C6A8 || Beam subroutine ||
;;|| 15 || C6C5 || Beam subroutine ||
;;|| 16 || C6E6 || Print PREPARE ||
;;|| 17 || C6FB || Create object structure ||
;;|| 18 || C71F || Change object to proper name and data ||
;;|| 19 || C743 || Bring up normal display ||
;;|| 1A || C759 || Set up level ||
;;|| 1B || C7C8 || * Play sound i at full volume ||
;;|| 1C || C7D0 || Play sound A at volume B  ||

SWIOffsetTable:
;
C995: 00 ;  0: C384 ??
C996: 1E ;  1: C3A2 Draw picture X on screen
C997: A6 ;  2: C448 Uncompress and display immediate message
C998: 0C ;  3: C454 Display uncompressed message pointed to by X
C999: 05 ;  4: C459 Display a single characte
C99A: 16 ;  5: C46F Uncompress message to buffer
C99B: 03 ;  6: C472 Uncompress message to given buffer
C99C: 5D ;  7: C4CF Return random number in A
C99D: 24 ;  8: C4F3 ??
C99E: 03 ;  9: C4F6 ??
C99F: 09 ;  A: C4FF Clear hand descriptor
C9A0: 08 ;  B: C507 Clear play field
C9A1: 22 ;  C: C529 ??
C9A2: B0 ;  D: C5D9 Print contents of hands on status line
C9A3: 7D ;  E: C656 Display playing screen
C9A4: 1E ;  F: C674 Ready command prompt
C9A5: 0B ; 10: C67F Wait for n SYNCs
C9A6: 07 ; 11: C686 ?? Fill with 0s
C9A7: 02 ; 12: C688 ?? Fill with FFs
C9A8: 1C ; 13: C6A4 ??
C9A9: 04 ; 14: C6A8 ??
C9AA: 1D ; 15: C6C5 ??
C9AB: 21 ; 16: C6E6 ??
C9AC: 15 ; 17: C6FB ??
C9AD: 24 ; 18: C71F ??
C9AE: 24 ; 19: C743 ??
C9AF: 16 ; 1A: C759 ??
C9B0: 6F ; 1B: C7C8 Play sound A at full volume
C9B1: 08 ; 1C: C7D0 Play sound A at volume B 

C9B2: 81 24               CMPA    #$24        
C9B4: 27 09               BEQ     $C9BF       ;{}       
C9B6: 81 1F               CMPA    #$1F        
C9B8: 27 10               BEQ     $C9CA       ;{}       
C9BA: 8D 5B               BSR     $CA17       ;{}       
C9BC: 30 01               LEAX    1,X         
C9BE: 39                  RTS                 
       
C9BF: 30 1F               LEAX    -1,X        
C9C1: 9C 03               CMPX    >$03        ;{-}       
C9C3: 26 04               BNE     $C9C9       ;{}       
C9C5: AE 42               LDX     2,U         
C9C7: 30 1F               LEAX    -1,X        
C9C9: 39                  RTS                 
C9CA: 30 88 20            LEAX    $20,X       
C9CD: 1E 01               EXG     D,X         
C9CF: C4 E0               ANDB    #$E0        
C9D1: 1E 01               EXG     D,X         
C9D3: 39                  RTS                 
C9D4: 34 36               PSHS    Y,X,B,A     
C9D6: AE C4               LDX     ,U          
C9D8: EC 42               LDD     2,U         
C9DA: 83 00 20            SUBD    #$0020      
C9DD: ED 62               STD     2,S         
C9DF: 8D 2F               BSR     $CA10       ;{}       
C9E1: 1F 02               TFR     D,Y         
C9E3: EC 89 01 00         LDD     $0100,X     
C9E7: 6D 47               TST     7,U         
C9E9: 26 04               BNE     $C9EF       ;{}       
C9EB: ED 89 18 00         STD     $1800,X     
C9EF: ED 81               STD     ,X++        
C9F1: 31 3E               LEAY    -2,Y        
C9F3: 26 EE               BNE     $C9E3       ;{}       
C9F5: E6 46               LDB     6,U         
C9F7: 1D                  SEX                 
C9F8: 10 8E 01 00         LDY     #$0100      
C9FC: 6D 47               TST     7,U         
C9FE: 26 04               BNE     $CA04       ;{}       
CA00: ED 89 18 00         STD     $1800,X     
CA04: ED 81               STD     ,X++        
CA06: 31 3E               LEAY    -2,Y        
CA08: 26 F2               BNE     $C9FC       ;{}       
CA0A: 35 B6               PULS    A,B,X,Y,PC  

; Shift-D-to-the-left entry points
CA0C: 58                  ASLB                   ; D << 5 starts here           
CA0D: 49                  ROLA                   ;
CA0E: 58                  ASLB                   ; D << 4 starts here
CA0F: 49                  ROLA                   ;
CA10: 58                  ASLB                   ; D << 3 starts here
CA11: 49                  ROLA                   ;
CA12: 58                  ASLB                   ; D << 2 starts here
CA13: 49                  ROLA                   ;
CA14: 58                  ASLB                   ; D << 1 starts here
CA15: 49                  ROLA                   ;
CA16: 39                  RTS                    ; Done
             
; Print character image or heart image
CA17: 34 76               PSHS    U,Y,X,B,A       ; Save everything
CA19: 81 20               CMPA    #$20            ; Letter?
CA1B: 25 0C               BCS     $CA29           ;{} Yes ... go handle
CA1D: 80 20               SUBA    #$20            ; Must be heart picture
CA1F: C6 07               LDB     #$07            ; 7 bytes ...
CA21: 3D                  MUL                     ; ... per heart picture
CA22: C3 DB B6            ADDD    #$DBB6          ; Offset ...
CA25: 1F 01               TFR     D,X             ; ... to bit mask
CA27: 20 1B               BRA     $CA44           ;{}       
; Get character pattern
CA29: C6 05               LDB     #$05            ; Five bytes in each character image
CA2B: 3D                  MUL                     ; Pointer now in D
CA2C: C3 DB 1B            ADDD    #$DB1B          ; Offset into character image table
CA2F: 1F 01               TFR     D,X             ; To X
CA31: CE 03 57            LDU     #$0357          ; Expansion buffer
CA34: 3F                  SWI                     ; Decompress the pattern
CA35: 06                                         ; SWI 06 Uncompress message X to given buffer U
CA36: 8E 03 5E            LDX     #$035E      
CA39: 68 82               ASL     ,-X         
CA3B: 68 84               ASL     ,X          
CA3D: 8C 03 57            CMPX    #$0357      
CA40: 22 F7               BHI     $CA39          ;{}       
CA42: EE 66               LDU     6,S         
;
CA44: EC 44               LDD     4,U         
CA46: 8D C8               BSR     $CA10          ;{}       
CA48: 54                  LSRB                
CA49: 54                  LSRB                
CA4A: 54                  LSRB                
CA4B: E3 C4               ADDD    ,U          
CA4D: 1F 02               TFR     D,Y         
CA4F: C6 07               LDB     #$07           ; 7 rows in an image
CA51: A6 80               LDA     ,X+            ; Get next row pattern
CA53: A8 46               EORA    6,U         
CA55: A7 A4               STA     ,Y          
CA57: 6D 47               TST     7,U         
CA59: 26 04               BNE     $CA5F          ;{}       
CA5B: A7 A9 18 00         STA     $1800,Y        ; Pattern to screen
CA5F: 31 A8 20            LEAY    $20,Y          ; Next row
CA62: 5A                  DECB                   ; All rows done?
CA63: 26 EC               BNE     $CA51          ;{} No ... go do them all
CA65: 35 F6               PULS    A,B,X,Y,U,PC   ; Done

CA67: 34 16               PSHS    X,B,A       
CA69: 6F E4               CLR     ,S          
CA6B: 6F 61               CLR     1,S         
CA6D: 0F C1               CLR     >$C1           ;{-}       
CA6F: DD C2               STD     >$C2           ;{-}       
CA71: 27 24               BEQ     $CA97          ;{}       
CA73: 10 A3 62            CMPD    2,S         
CA76: 26 04               BNE     $CA7C          ;{}       
CA78: 6C E4               INC     ,S          
CA7A: 20 1B               BRA     $CA97          ;{}       
CA7C: 8E 00 10            LDX     #$0010      
CA7F: 08 C3               LSL     >$C3           ;{-}       
CA81: 09 C2               ROL     >$C2           ;{-}       
CA83: 09 C1               ROL     >$C1           ;{-}       
CA85: 68 61               ASL     1,S         
CA87: 69 E4               ROL     ,S          
CA89: DC C1               LDD     >$C1           ;{-}       
CA8B: A3 62               SUBD    2,S         
CA8D: 25 04               BCS     $CA93          ;{}       
CA8F: DD C1               STD     >$C1           ;{-}       
CA91: 6C 61               INC     1,S         
CA93: 30 1F               LEAX    -1,X        
CA95: 26 E8               BNE     $CA7F          ;{}       
CA97: 35 96               PULS    A,B,X,PC    
CA99: 43                  COMA                
CA9A: 53                  COMB                
CA9B: C3 00 01            ADDD    #$0001      
CA9E: 39                  RTS                 
CA9F: 34 16               PSHS    X,B,A       
CAA1: 9E 43               LDX     >$43           ;{-}       
CAA3: EC E4               LDD     ,S          
CAA5: 2A 07               BPL     $CAAE          ;{}       
CAA7: 8D F0               BSR     $CA99          ;{}       
CAA9: 8D BC               BSR     $CA67          ;{}       
CAAB: 8D EC               BSR     $CA99          ;{}       
CAAD: 8C 8D B7            CMPX    #$8DB7      
CAB0: ED E4               STD     ,S          
CAB2: 35 96               PULS    A,B,X,PC    
CAB4: 7E CB 8A            JMP     $CB8A          ;{}       
CAB7: 34 76               PSHS    U,Y,X,B,A   
CAB9: 0C 2D               INC     >$2D           ;{-}       
CABB: 27 F7               BEQ     $CAB4          ;{}       
CABD: 96 2D               LDA     >$2D           ;{-}       
CABF: 97 2E               STA     >$2E           ;{-}       
CAC1: DC 35               LDD     >$35           ;{-}       
CAC3: 93 31               SUBD    >$31           ;{-}       
CAC5: DD 3E               STD     >$3E           ;{-}       
CAC7: 2A 02               BPL     $CACB          ;{}       
CAC9: 8D CE               BSR     $CA99          ;{}       
CACB: DD 43               STD     >$43           ;{-}       
CACD: DC 33               LDD     >$33           ;{-}       
CACF: 93 2F               SUBD    >$2F           ;{-}       
CAD1: DD 41               STD     >$41           ;{-}       
CAD3: 2A 02               BPL     $CAD7          ;{}       
CAD5: 8D C2               BSR     $CA99          ;{}       
CAD7: 10 93 43            CMPD    >$43           ;{-}       
CADA: 2D 04               BLT     $CAE0       
CADC: DD 43               STD     >$43           ;{-}       
CADE: 27 D4               BEQ     $CAB4          ;{}       
CAE0: DC 3E               LDD     >$3E           ;{-}       
CAE2: 8D BB               BSR     $CA9F          ;{}       
CAE4: DD 3E               STD     >$3E           ;{-}       
CAE6: 1F 89               TFR     A,B         
CAE8: 1D                  SEX                 
CAE9: C6 01               LDB     #$01        
CAEB: 97 3D               STA     >$3D           ;{-}       
CAED: 2A 01               BPL     $CAF0          ;{}       
CAEF: 50                  NEGB                
CAF0: D7 45               STB     >$45           ;{-}       
CAF2: DC 41               LDD     >$41           ;{-}       
CAF4: 8D A9               BSR     $CA9F          ;{}       
CAF6: DD 41               STD     >$41           ;{-}       
CAF8: 1F 89               TFR     A,B         
CAFA: 1D                  SEX                 
CAFB: C6 20               LDB     #$20        
CAFD: 97 40               STA     >$40           ;{-}       
CAFF: 2A 01               BPL     $CB02          ;{}       
CB01: 50                  NEGB                
CB02: D7 46               STB     >$46           ;{-}       
CB04: DC 31               LDD     >$31           ;{-}       
CB06: DD 37               STD     >$37           ;{-}       
CB08: DC 2F               LDD     >$2F           ;{-}       
CB0A: DD 3A               STD     >$3A           ;{-}       
CB0C: 86 80               LDA     #$80        
CB0E: 97 39               STA     >$39           ;{-}       
CB10: 97 3C               STA     >$3C           ;{-}       
CB12: AE 42               LDX     2,U         
CB14: 9F 49               STX     >$49           ;{-}       
CB16: AE C4               LDX     ,U          
CB18: 9F 47               STX     >$47           ;{-}       
CB1A: DC 3A               LDD     >$3A           ;{-}       
CB1C: BD CA 0C            JSR     $CA0C          ;{}       
CB1F: 30 8B               LEAX    D,X         
CB21: DC 37               LDD     >$37           ;{-}       
CB23: BD D3 7F            JSR     $D37F          ;{}       
CB26: 30 8B               LEAX    D,X         
CB28: CE CB 8E            LDU     #$CB8E         ; Bit table (80,40,20,10,08,04,02,01)
CB2B: 10 9E 43            LDY     >$43           ;{-}       
CB2E: 0A 2E               DEC     >$2E           ;{-}       
CB30: 26 22               BNE     $CB54          ;{}       
CB32: 96 2D               LDA     >$2D           ;{-}       
CB34: 97 2E               STA     >$2E           ;{-}       
CB36: 0D 37               TST     >$37           ;{-}       
CB38: 26 1A               BNE     $CB54          ;{}       
CB3A: 9C 47               CMPX    >$47           ;{-}       
CB3C: 25 16               BCS     $CB54          ;{}       
CB3E: 9C 49               CMPX    >$49           ;{-}       
CB40: 24 12               BCC     $CB54          ;{}       
CB42: D6 38               LDB     >$38           ;{-}       
CB44: C4 07               ANDB    #$07        
CB46: A6 C5               LDA     B,U            ; A = 2^b
CB48: 0D 2C               TST     >$2C           ;{-}       
CB4A: 27 04               BEQ     $CB50          ;{}       
CB4C: 43                  COMA                
CB4D: A4 84               ANDA    ,X          
CB4F: 8C AA 84            CMPX    #$AA84      
CB52: A7 84               STA     ,X          
CB54: 96 38               LDA     >$38           ;{-}       
CB56: 84 F8               ANDA    #$F8        
CB58: 97 C1               STA     >$C1           ;{-}       
CB5A: DC 38               LDD     >$38           ;{-}       
CB5C: D3 3E               ADDD    >$3E           ;{-}       
CB5E: DD 38               STD     >$38           ;{-}       
CB60: D6 37               LDB     >$37           ;{-}       
CB62: D9 3D               ADCB    >$3D           ;{-}       
CB64: D7 37               STB     >$37           ;{-}       
CB66: 84 F8               ANDA    #$F8        
CB68: 91 C1               CMPA    >$C1           ;{-}       
CB6A: 27 04               BEQ     $CB70          ;{}       
CB6C: D6 45               LDB     >$45           ;{-}       
CB6E: 30 85               LEAX    B,X         
CB70: DC 3B               LDD     >$3B           ;{-}       
CB72: 97 C1               STA     >$C1           ;{-}       
CB74: D3 41               ADDD    >$41           ;{-}       
CB76: DD 3B               STD     >$3B           ;{-}       
CB78: D6 3A               LDB     >$3A           ;{-}       
CB7A: D9 40               ADCB    >$40           ;{-}       
CB7C: D7 3A               STB     >$3A           ;{-}       
CB7E: 91 C1               CMPA    >$C1           ;{-}       
CB80: 27 04               BEQ     $CB86          ;{}       
CB82: D6 46               LDB     >$46           ;{-}       
CB84: 30 85               LEAX    B,X         
CB86: 31 3F               LEAY    -1,Y        
CB88: 26 A4               BNE     $CB2E          ;{}       
CB8A: 0A 2D               DEC     >$2D           ;{-}       
CB8C: 35 F6               PULS    A,B,X,Y,U,PC

CB8E: 80 40 20 10 08 04 02 01
                       
CB96: 34 52               PSHS    U,X,A       
CB98: 9E 11               LDX     >$11           ;{-}       
CB9A: CE 03 13            LDU     #$0313      
CB9D: A6 80               LDA     ,X+         
CB9F: 27 FC               BEQ     $CB9D          ;{}       
CBA1: 20 02               BRA     $CBA5          ;{}       
CBA3: A6 80               LDA     ,X+         
CBA5: 2F 08               BLE     $CBAF       
CBA7: A7 C0               STA     ,U+         
CBA9: 11 83 03 33         CMPU    #$0333      
CBAD: 25 F4               BCS     $CBA3          ;{}       
CBAF: 86 FF               LDA     #$FF        
CBB1: A7 C0               STA     ,U+         
CBB3: 9F 11               STX     >$11           ;{-}       
CBB5: 7D 03 13            TST     $0313       
CBB8: 35 D2               PULS    A,X,U,PC
    
CBBA: 0F 90               CLR     >$90           ;{-}       
CBBC: 8E D9 6A            LDX     #$D96A      
CBBF: 8D 2B               BSR     $CBEC          ;{}       
CBC1: 2B 05               BMI     $CBC8          ;{}       
CBC3: 27 1A               BEQ     $CBDF          ;{}       
CBC5: DD 8E               STD     >$8E           ;{-}       
CBC7: 39                  RTS                 
CBC8: 0A 90               DEC     >$90           ;{-}       
CBCA: 8E D8 F3            LDX     #$D8F3      
CBCD: 8D 18               BSR     $CBE7          ;{}       
CBCF: 2F 0E               BLE     $CBDF       
CBD1: DD 8E               STD     >$8E           ;{-}       
CBD3: 8E D9 6A            LDX     #$D96A      
CBD6: 8D 14               BSR     $CBEC          ;{}       
CBD8: 2F 05               BLE     $CBDF       
CBDA: D1 8F               CMPB    >$8F           ;{-}       
CBDC: 26 01               BNE     $CBDF          ;{}       
CBDE: 39                  RTS                 
CBDF: 32 62               LEAS    2,S         
CBE1: 3F                  SWI                 
CBE2: 02                                         ; SWI 02 * Uncompress message m and display
CBE3: 17 7B D0 ; "???"    
CBE6: 39                  RTS                 
CBE7: 34 76               PSHS    U,Y,X,B,A   
CBE9: 4F                  CLRA                
CBEA: 20 08               BRA     $CBF4       ;{}       
CBEC: 34 76               PSHS    U,Y,X,B,A   
CBEE: 4F                  CLRA                
CBEF: 5F                  CLRB                
CBF0: 8D A4               BSR     $CB96       ;{}       
CBF2: 2B 39               BMI     $CC2D       ;{}       
CBF4: 0F 78               CLR     >$78        ;{-}       
CBF6: 0F 7B               CLR     >$7B        ;{-}       
CBF8: E6 80               LDB     ,X+         
CBFA: D7 79               STB     >$79        ;{-}       
CBFC: CE 03 13            LDU     #$0313      
CBFF: 3F                  SWI                 
CC00: 05                                         ; SWI 05 Uncompress message X to buffer
CC01: 10 8E 03 36         LDY     #$0336      
CC05: E6 C0               LDB     ,U+         
CC07: 2B 0E               BMI     $CC17          ;{}       
CC09: E1 A0               CMPB    ,Y+         
CC0B: 26 15               BNE     $CC22          ;{}       
CC0D: 6D A4               TST     ,Y          
CC0F: 2A F4               BPL     $CC05          ;{}       
CC11: 6D C4               TST     ,U          
CC13: 2A 0D               BPL     $CC22          ;{}       
CC15: 0A 7B               DEC     >$7B           ;{-}       
CC17: 0D 78               TST     >$78           ;{-}       
CC19: 26 10               BNE     $CC2B          ;{}       
CC1B: 0C 78               INC     >$78           ;{-}       
CC1D: F6 03 35            LDB     $0335       
CC20: ED E4               STD     ,S          
CC22: 4C                  INCA                
CC23: 0A 79               DEC     >$79           ;{-}       
CC25: 26 D5               BNE     $CBFC          ;{}       
CC27: 0D 78               TST     >$78           ;{-}       
CC29: 26 04               BNE     $CC2F          ;{}       
CC2B: DC 03               LDD     >$03           ;{-}       
CC2D: ED E4               STD     ,S          
CC2F: 35 F6               PULS    A,B,X,Y,U,PC

CC31: 8E D8 D9            LDX     #$D8D9      
CC34: 8D B6               BSR     $CBEC          ;{}       
CC36: 2F A7               BLE     $CBDF       
CC38: CE 02 1F            LDU     #$021F      
CC3B: 81 01               CMPA    #$01        
CC3D: 27 07               BEQ     $CC46          ;{}       
CC3F: CE 02 1D            LDU     #$021D      
CC42: 81 00               CMPA    #$00        
CC44: 26 99               BNE     $CBDF          ;{}       
CC46: AE C4               LDX     ,U          
CC48: 39                  RTS                 

GetNeighborCells:
; This function gets the cell values for the 8 cells surrounding a given cell (and the
; value of the center square as well). If a cell is on the edge of the map then the
; invalid neighbor value is FF ... just as if it were solid.
;
; Param A,B: The Y,X coordinate of the center cell
; Param U: The 9-byte buffer to store results in
;
; The cell values are stored in the U buffer in this order from the maze map.
; 0 1 2
; 3 4 5
; 6 7 8
;
CC49: 34 56               PSHS    U,X,B,A     ; Preserve registers
CC4B: 4A                  DECA                ; Y-1
CC4C: 8D 08               BSR     $CC56       ;{} Check row (Y-1,*)
CC4E: 4C                  INCA                ; Back to center
CC4F: 8D 05               BSR     $CC56       ;{} Check row (Y,*)
CC51: 4C                  INCA                ; Y+1
CC52: 8D 02               BSR     $CC56       ;{} Check row (Y+1,*)
CC54: 35 D6               PULS    A,B,X,U,PC  ; Restore and out
;
CC56: 34 06               PSHS    B,A         ; Hold Y,X coordinates
CC58: 5A                  DECB                ; X-1
CC59: 8D 05               BSR     $CC60       ;{} Check Y,X-1
CC5B: 5C                  INCB                ; Back to center
CC5C: 8D 02               BSR     $CC60       ;{} Check Y,X
CC5E: 5C                  INCB                ; X+1
CC5F: 8C 34 06            CMPX    #$3406      ; Fall into routine without pushing. Clever.
CC62: 8D 2A               BSR     $CC8E       ;{} Is the cell valid?
CC64: 26 05               BNE     $CC6B       ;{} No ... Store FF to cell buffer
CC66: 8D 13               BSR     $CC7B       ;{} Get the pointer to the cell
CC68: A6 84               LDA     ,X          ; Get the value from the maze
CC6A: 8C 86 FF            CMPX    #$86FF      ; (LDA $FF at CC6A)
CC6D: A7 C0               STA     ,U+         ; Store the result in the buffer
CC6F: 35 86               PULS    A,B,PC      ; Done

GetRandomCell:
; This function returns a random X,Y coordinate in the maze
; and the pointer to the cell memory in X.
;
; Return A: 0-31 (Y coordinate)
; Return B: 0-31 (X coordinate)
; Return X: Pointer to cell in memory
;
CC71: 3F                  SWI                 ; Get random number in A
CC72: 07                                         ; SWI 07 Get random number
CC73: 84 1F               ANDA    #$1F        ; 0-31 ... X coordinate
CC75: 1F 89               TFR     A,B         ; Coordinate to B
CC77: 3F                  SWI                 ; Get random number in A
CC78: 07                                         ; SWI 07 Get random number
CC79: 84 1F               ANDA    #$1F        ; 0-31 ... Y coordinate
;
GetCellPointer:
; Return the pointer to cell memory in X for the Y,X coordinate in A,B
;
CC7B: 34 06               PSHS    B,A         ; Hold these
CC7D: 84 1F               ANDA    #$1F        ; Limit coordiantes ...
CC7F: C4 1F               ANDB    #$1F        ; ... (another entry point)
CC81: 1F 01               TFR     D,X         ; Hold in X
CC83: C6 20               LDB     #$20        ; Multiply A (Y coordinate) ...
CC85: 3D                  MUL                 ; ... by 32 (one row)
CC86: C3 05 F4            ADDD    #$05F4      ; Offset to maze
CC89: 1E 01               EXG     D,X         ; X coordinate back to B
CC8B: 3A                  ABX                 ; Add in the X coordinate
CC8C: 35 86               PULS    A,B,PC      ; Return coordinate and pointer

IsValidCell:
; This function tests a given X,Y coordinate and returns
; Z=1 if within (31,31) or Z=0 if the coordinate is out
; of bounds.
;
; Param A: Y coordinate
; Param B: X coordinate
;
; Return Z: 1 if OK or 0 if out-of-bounds
;
CC8E: 34 06               PSHS    B,A         ; Push the coordinates on the stack
CC90: 84 1F               ANDA    #$1F        ; Mask the coordinate to within range
CC92: A1 E4               CMPA    ,S          ; Is the coordinate within range?
CC94: 26 04               BNE     $CC9A       ;{} No ... out
CC96: C4 1F               ANDB    #$1F        ; Mask the coordinate to within range
CC98: E1 61               CMPB    1,S         ; Is the coordinate within range? (return Z=1 if so)
CC9A: 35 86               PULS    A,B,PC      ; Return with Z=1 if OK or Z=0 if out of range
  
MakeMazeLevel:
; The maze is a 32x32 cell (one byte per cell) table at $05F4. Each cell has 4 2-bit fields that
; describe the wall in a given direction. A value of 00 means the wall in that direction is open.
; A value of 01 is a normal door in that direction. A value of 10 is a magic door in that direction.
; A value of 11 is a solid wall. The 4 fields are stored in the byte as: LL_DD_RR_UU with UU being
; the least significant 2 bits.
;
; The maze is generated by carving out a series of random "runs". The code picks a random starting
; cell and a random direction. It picks a randome "number of crossings" for the run from 1 to 8.
; Then it starts opening cells in that direction one by one until one of the following occurs:
; - The run crosses the randomly chosen number of other runs
; - The run reaches the edge of the map
; - The cell would create a block of 4 adjacent open cells
;
; The 3D dispaly during game play can only draw hallways. Four adjacent open cells would create an
; open space that the display can't handle. Thus the check in the run algorithm.
;
; The algorithm keeps count of each new open cell created. Runs are generated until exactly 500 cells
; have been opened. Each level has exactly 500 open cells in it.
;
; Once the 500 cells are open the code adds exactly 70 regular doors and 45 magic doors between adjacent
; cells. Both cells get a copy of the door in opposite directions.
;
; It is possible (though unlikely) to create a run that does not overlap another. This would be an
; unreachable area that would trap the player or required monsters. Each level is drawn with a pre-chosen
; random number seed. Thus the level is always the same, and the designers chose seeds that produced good
; mazes.
;
; Holes and ladders are manually defined for each level and are kept in a separate table.
; 
; Maze value: LL_DD_RR_UU
; 00 = open
; 01 = normal door
; 10 = magic door
; 11 = blocked
;
CC9C: 8E 05 F4            LDX     #$05F4      ; Start of level
CC9F: CE 09 F4            LDU     #$09F4      ; One past end of level (32*32=1024 byte)
CCA2: 3F                  SWI                 ; Fill the buffer with FFs
CCA3: 12                                         ; SWI 12 Fill X to U with FFs
CCA4: 8E CD 9F            LDX     #$CD9F      ; Random number seeds
CCA7: D6 81               LDB     >$81        ;{-} Offset into seeds ...
CCA9: 3A                  ABX                 ; ... for this level
CCAA: EC 81               LDD     ,X++        ; Copy the ...
CCAC: DD 6B               STD     >$6B        ;{-} ... 3 byte ...
CCAE: A6 84               LDA     ,X          ; ... seed to ...
CCB0: 97 6D               STA     >$6D        ;{-} ... current seed
CCB2: 10 8E 01 F4         LDY     #$01F4      ; Make 500 cells in the "run" process
CCB6: BD CC 71            JSR     $CC71       ;{} Get a random coordinate
CCB9: DD 7C               STD     >$7C        ;{-} Hold the starting point
;
; Start a new maze "run" of cells
CCBB: 3F                  SWI                 ; Get a random number
CCBC: 07                                         ; SWI 07 Get random number
CCBD: 84 03               ANDA    #$03        ; Now a random direction (0-3)
CCBF: 97 8A               STA     >$8A        ;{-} Hold current direction
CCC1: 3F                  SWI                 ; Get a random number
CCC2: 07                                         ; SWI 07 Get random number
CCC3: 84 07               ANDA    #$07        ; Random [0..7]
CCC5: 4C                  INCA                ; Random [1..8]
CCC6: 97 7E               STA     >$7E        ;{-} Store number of crossings
CCC8: 20 08               BRA     $CCD2       ;{} Start this run with a step

CCCA: DC 88               LDD     >$88        ;{-} Get the potential new coordinate
CCCC: DD 7C               STD     >$7C        ;{-} Make it the new cell
CCCE: 0A 7E               DEC     >$7E        ;{-} All crossings in this run placed?
CCD0: 27 E9               BEQ     $CCBB       ;{} Yes ... start a new run (done with this one)
;
CCD2: DC 7C               LDD     >$7C        ;{-} Get the current cell pointer
CCD4: BD D1 1B            JSR     $D11B       ;{} Move in the random direction
CCD7: 8D B5               BSR     $CC8E       ;{} Is this cell out of bounds?
CCD9: 26 E0               BNE     $CCBB       ;{} Yes ... start a new run
CCDB: DD 88               STD     >$88        ;{-} Hold the new coordinates
CCDD: 6D 84               TST     ,X          ; Already an open cell there?
CCDF: 27 E9               BEQ     $CCCA       ;{} Yes ... count it and keep going (no need to check it)
CCE1: CE 09 F4            LDU     #$09F4      ; Buffer to hold cell values
;
; These checks prevent opening a cell if it would make a block-of-4-opens. An open block can't be
; drawn during game play.
CCE4: BD CC 49            JSR     $CC49       ;{} Get the neighbor cell values
CCE7: A6 43               LDA     3,U         ; Cell to the left
CCE9: AB C4               ADDA    ,U          ; Cell to the upper left
CCEB: AB 41               ADDA    1,U         ; Cell above
CCED: 27 CC               BEQ     $CCBB       ;{} This would make the upper left corner 4-opens together. Skip
;
CCEF: A6 41               LDA     1,U         ; Cell above
CCF1: AB 42               ADDA    2,U         ; Cell to the upper right
CCF3: AB 45               ADDA    5,U         ; Cell to the right
CCF5: 27 C4               BEQ     $CCBB       ;{} This would make the upper right corner 4-opens together. Skip
;
CCF7: A6 45               LDA     5,U         ; Cell to the right
CCF9: AB 48               ADDA    8,U         ; Cell to the lower right
CCFB: AB 47               ADDA    7,U         ; Cell below
CCFD: 27 BC               BEQ     $CCBB       ;{} This would make the lower right corner 4-opens together. Skip
;
CCFF: A6 47               LDA     7,U         ; Cell below
CD01: AB 46               ADDA    6,U         ; Cell to the lower left
CD03: AB 43               ADDA    3,U         ; Cell to the left
CD05: 27 B4               BEQ     $CCBB       ;{} This would make the lower left corner 4-opens together. Skip
;
CD07: 6F 84               CLR     ,X          ; Open this cell up
CD09: 31 3F               LEAY    -1,Y        ; All 500 cells done?
CD0B: 26 BD               BNE     $CCCA       ;{} No ... use this and keep going
;
; This loops over the cells and sets the "solid wall" bits for directions that are blocked.
CD0D: 0F 7C               CLR     >$7C        ;{-} Start with ...
CD0F: 0F 7D               CLR     >$7D        ;{-} ... Y,X = 0,0
CD11: DC 7C               LDD     >$7C        ;{-} Get the current coordinate
CD13: BD CC 7B            JSR     $CC7B       ;{} Get the cell pointer
CD16: A6 84               LDA     ,X          ; Get the cell value
CD18: 4C                  INCA                ; Is this a solid?
CD19: 27 26               BEQ     $CD41       ;{} Yes ... skip it
CD1B: DC 7C               LDD     >$7C        ;{-} Coordinates again
CD1D: CE 09 F4            LDU     #$09F4      ; Status buffer
CD20: BD CC 49            JSR     $CC49       ;{} Get the status of the neighbors
CD23: A6 84               LDA     ,X          ; Get the value of the cell
CD25: C6 FF               LDB     #$FF        ; Value FF (solid) for compares
CD27: E1 41               CMPB    1,U         ; Cell above us open?
CD29: 26 02               BNE     $CD2D       ;{} No ... leave the bits open
CD2B: 8A 03               ORA     #$03        ; Set the "up" bits to solid wall
CD2D: E1 43               CMPB    3,U         ; Cell to the left open?
CD2F: 26 02               BNE     $CD33       ;{} No ... leave the bits open
CD31: 8A C0               ORA     #$C0        ; Set the "left" bits to solid wall
CD33: E1 45               CMPB    5,U         ; Cell to the right open?
CD35: 26 02               BNE     $CD39       ;{} No ... leave the bits open
CD37: 8A 0C               ORA     #$0C        ; Set the "right" bits to solid wall
CD39: E1 47               CMPB    7,U         ; Cell to the bottom open?
CD3B: 26 02               BNE     $CD3F       ;{} No ... leave the bits open
CD3D: 8A 30               ORA     #$30        ; Set the "down" bits to solid wall
CD3F: A7 84               STA     ,X          ; Set solid walls on the edge cells
;
; Add walls next to solid cells
CD41: C6 20               LDB     #$20        ; 32 for compare
CD43: 0C 7D               INC     >$7D        ;{-} Bump the X coordinate
CD45: D1 7D               CMPB    >$7D        ;{-} Reached end of row?
CD47: 26 C8               BNE     $CD11       ;{} No ... keep going
CD49: 0F 7D               CLR     >$7D        ;{-} Back to X=0
CD4B: 0C 7C               INC     >$7C        ;{-} Bump the Y coordinate
CD4D: D1 7C               CMPB    >$7C        ;{-} End of maze?
CD4F: 26 C0               BNE     $CD11       ;{} No ... keep going
;
; Add 70 regular doors
CD51: C6 46               LDB     #$46        ; 70 regular doors to make
CD53: CE CD AA            LDU     #$CDAA      ; Table of bit patterns for regular doors
CD56: 8D 15               BSR     $CD6D       ;{} Make a random regular door
CD58: 5A                  DECB                ; All done?
CD59: 26 FB               BNE     $CD56       ;{} No ... do all
;
; Add 45 magic doors
CD5B: C6 2D               LDB     #$2D        ; 45 magic doors to make
CD5D: CE CD AE            LDU     #$CDAE      ; Table of bit patterns for magic doors
CD60: 8D 0B               BSR     $CD6D       ;{} Make a random magic door
CD62: 5A                  DECB                ; All done?
CD63: 26 FB               BNE     $CD60       ;{} No ... do all
;
CD65: D6 97               LDB     >$97        ;{-} ?? A randomizer count
CD67: 3F                  SWI                 ; Get next ...
CD68: 07                                         ; SWI 07 Get random number
CD69: 5A                  DECB                ; Randomized the full count?
CD6A: 26 FB               BNE     $CD67       ;{} No ... do all
CD6C: 39                  RTS                 ; Out
;
; Make a door (regular or magic) between two adjacent cells
CD6D: 34 76               PSHS    U,Y,X,B,A   ; Preserve registers
CD6F: 10 8E CD A6         LDY     #$CDA6      ; Bit patterns for solid walls in each direction
CD73: BD CC 71            JSR     $CC71       ;{} Get random cell
CD76: DD 88               STD     >$88        ;{-} Hold coordinates
CD78: E6 84               LDB     ,X          ; Get cell value
CD7A: C1 FF               CMPB    #$FF        ; Is it solid?
CD7C: 27 F5               BEQ     $CD73       ;{} Yes ... find an open cell
CD7E: 3F                  SWI                 ; Get a random number
CD7F: 07                                         ; SWI 07 Get random number
CD80: 84 03               ANDA    #$03        ; Make it a direction
CD82: 97 8A               STA     >$8A        ;{-} Store the direction
CD84: E5 A6               BITB    A,Y         ; Is that direction open (no solid and no existing door)?
CD86: 26 EB               BNE     $CD73       ;{} No ... find another
CD88: EA C6               ORB     A,U         ; Or in the pattern for the door (magic or regular)
CD8A: E7 84               STB     ,X          ; Set the new pattern
CD8C: DC 88               LDD     >$88        ;{-} Get coordinates
CD8E: BD D1 1B            JSR     $D11B       ;{} Step in that direction
CD91: D6 8A               LDB     >$8A        ;{-} Get the direction we came in
CD93: CB 02               ADDB    #$02        ; Flip it ...
CD95: C4 03               ANDB    #$03        ; ... around
CD97: A6 84               LDA     ,X          ; Get value
CD99: AA C5               ORA     B,U         ; Make same door in ...
CD9B: A7 84               STA     ,X          ; ... on both sides
CD9D: 35 F6               PULS    A,B,X,Y,U,PC ; Restore and out

RandomSeeds:
; These seeds control the shape of the dungeon and placement
; of creatures. Three bytes instead of over 1K of data -- good
; idea. The levels overlap seeds as shown below.
;     0-------
;        1-------
;           2-------
;              3-------
;                 4-------
CD9F: 73 C7 5D 97 F3 13 87   
            
; Bit positions for walls in a given direction (0-3)
;     0U 1R 2D 3L            
CDA6: 03 0C 30 C0

; Bit positions to add a regular door in a given direction
CDAA: 01 04 10 40

; Bit positins to add a magic door in a give direction
CDAE: 02 08 20 80                                    

ShowMap:
;
CDB2: DE 0B               LDU     >$0B        ;{-} Drawing screen descriptor
CDB4: CC 1F 1F            LDD     #$1F1F      ; 32x32
CDB7: DD 7C               STD     >$7C        ;{-} Store the count
;
; First draw the open/closed states of all cells in the maze;
CDB9: DC 7C               LDD     >$7C        ;{-} Get the current map coordinate
CDBB: 8D 54               BSR     $CE11       ;{} Get a screen pointer to the cell in Y
CDBD: BD CC 7B            JSR     $CC7B       ;{} Get a pointer to the maze memory
CDC0: 5F                  CLRB                ; Initial cell state (open)
CDC1: A6 84               LDA     ,X          ; Get the cell wall state
CDC3: 4C                  INCA                ; Is it FF (solid)?
CDC4: 26 01               BNE     $CDC7       ;{} No ... draw it open
CDC6: 5A                  DECB                ; Cell state is solid
CDC7: 86 06               LDA     #$06        ; Six rows per cell
CDC9: E7 A4               STB     ,Y          ; Draw ...
CDCB: 31 A8 20            LEAY    $20,Y       ; ... six ...
CDCE: 4A                  DECA                ; ... row ...
CDCF: 26 F8               BNE     $CDC9       ;{} ... block
CDD1: 0A 7D               DEC     >$7D        ;{-} Move left one cell
CDD3: 2A E4               BPL     $CDB9       ;{} Do all of the row
CDD5: 86 1F               LDA     #$1F        ; Restart row at ...
CDD7: 97 7D               STA     >$7D        ;{-} ... far right
CDD9: 0A 7C               DEC     >$7C        ;{-} Move up a row
CDDB: 2A DC               BPL     $CDB9       ;{} Do all rows
;
CDDD: 0D 94               TST     >$94        ;{-} Is this a "seer" scroll?
CDDF: 27 4A               BEQ     $CE2B       ;{} No ... skip drawing monsters and objects
;
; Show objects on floor (Seer Scroll)
CDE1: 0F 91               CLR     >$91        ;{-} Start at top of list
CDE3: BD CF 63            JSR     $CF63       ;{} Get next object on floor
CDE6: 27 0F               BEQ     $CDF7       ;{} All done ... do monsters
CDE8: 6D 05               TST     5,X         ; Is this on the floor?
CDEA: 26 F7               BNE     $CDE3       ;{} No ... don't show it
CDEC: EC 02               LDD     2,X         ; Get the Y,X coordinate
CDEE: 8D 21               BSR     $CE11       ;{} Get map screen pointer for coordinate
CDF0: CC 00 08            LDD     #$0008      ; 4 byte graphics pattern (small dot) for object
CDF3: 8D 28               BSR     $CE1D       ;{} Draw an object on the map
CDF5: 20 EC               BRA     $CDE3       ;{} Draw next object on floor
;
; Show monsters (Seer Scroll)
CDF7: 8E 03 C3            LDX     #$03C3      ; First monster (actually one slot before)
CDFA: 30 88 11            LEAX    $11,X       ; Next monster
CDFD: 8C 05 F4            CMPX    #$05F4      ; All done?
CE00: 27 29               BEQ     $CE2B       ;{} Yes ... draw holes and ladders
CE02: 6D 0C               TST     12,X        ; Is this creature active?
CE04: 27 F4               BEQ     $CDFA       ;{} No ... skip it
CE06: EC 0F               LDD     15,X        ; Get the creature coordinates
CE08: 8D 07               BSR     $CE11       ;{} Get a pointer to the map screen
CE0A: CC 10 54            LDD     #$1054      ; 4 byte graphics pattern (large dot) for monster
CE0D: 8D 0E               BSR     $CE1D       ;{} Draw a creature on the map
CE0F: 20 E9               BRA     $CDFA       ;{} Do all creatures

GetMapCellMem:
; This functions returns a pointer to the screen for a given cell (Y,X coordinate).
; On the screen, cells are 6-rows high and 8-pixels (one byte) wide.
;
; Param A,B: The Y,X cell coordinate
; Param U:   Start of screen memory
; Return Y:  Pointer to the screen memory for the cell
;
CE11: 1F 02               TFR     D,Y         ; Hold the coordinate
CE13: C6 C0               LDB     #$C0        ; Multiply Y time ...
CE15: 3D                  MUL                 ; ... 32*6 (6 rows per cell)
CE16: E3 C4               ADDD    ,U          ; Offset to screen row
CE18: 1E 02               EXG     D,Y         ; X to B (pointer to Y)
CE1A: 31 A5               LEAY    B,Y         ; Add in the column offset
CE1C: 39                  RTS                 ; Done

DrawMapSymbol:
; Map symbols are 4 bytes on the screen. They are symmetrical in that the
; top and bottom row are the same and the middle two rows are the same.
;
; Param A: top and bottom pixel pattern
; Param B: middle 2 rows pixel pattern
;
CE1D: A7 A8 20            STA     $20,Y       ; Top row pattern (A)
CE20: E7 A8 40            STB     $40,Y       ; Middle row pattern (B)
CE23: E7 A8 60            STB     $60,Y       ; Middle row pattern (B)
CE26: A7 A9 00 80         STA     $0080,Y     ; Bottom row pattern (A)
CE2A: 39                  RTS                 ; Done

; Draws holes and player on map (both scroll types)
CE2B: DC 13               LDD     >$13        ;{-} Player Y,X coordinate
CE2D: 8D E2               BSR     $CE11       ;{} Player's cell on map screen
CE2F: CC 24 18            LDD     #$2418      ; 4 byte pattern (X) for player 
CE32: 8D E9               BSR     $CE1D       ;{} Draw player on the map
;
; Two passes here. 1st draw the holes in the current ceiling. Then draw the holes
; in the current floor.
CE34: 9E 86               LDX     >$86        ;{-} Pointer to ceiling holes/ladders for current level
CE36: 8D 00               BSR     $CE38       ;{} Draw the holes in this floor's ceiling (fall through to show floor holes)
CE38: A6 80               LDA     ,X+         ; Get hole type
CE3A: 2B EE               BMI     $CE2A       ;{} End of list? Yes ... out
CE3C: EC 81               LDD     ,X++        ; Get the hole's Y,X coordinate
CE3E: 8D D1               BSR     $CE11       ;{} Convert to screen pointer
CE40: CC 3C 24            LDD     #$3C24      ; 4 byte pattern (open circle) for hole
CE43: 8D D8               BSR     $CE1D       ;{} Draw the hole
CE45: 20 F1               BRA     $CE38       ;{} Keep going

CE47: 34 12               PSHS    X,A         
CE49: 8E CF 48            LDX     #$CF48      
CE4C: 0D 73               TST     >$73        ;{-}       
CE4E: 26 0C               BNE     $CE5C       ;{}       
CE50: 30 89 00 01         LEAX    $0001,X     
CE54: 0D 74               TST     >$74        ;{-}       
CE56: 26 04               BNE     $CE5C       ;{}       
CE58: 30 89 FF F5         ;LEAX    $00-B,X     
CE5C: 96 8B               LDA     >$8B        ;{-}       
CE5E: A6 86               LDA     A,X         
CE60: 97 4F               STA     >$4F        ;{-}       
CE62: 97 50               STA     >$50        ;{-}       
CE64: 35 92               PULS    A,X,PC      
CE66: 3F                  SWI                 
CE67: 09                                         ; SWI 09 Clear secondary screen
CE68: 0F 8B               CLR     >$8B           ;{-}       
CE6A: DC 13               LDD     >$13           ;{-}       
CE6C: DD 7C               STD     >$7C           ;{-}       
CE6E: 8D D7               BSR     $CE47          ;{}       
CE70: DC 7C               LDD     >$7C           ;{-}       
CE72: BD CC 7B            JSR     $CC7B          ;{}       
CE75: A6 84               LDA     ,X          
CE77: CE 09 F4            LDU     #$09F4      
CE7A: 8E 00 04            LDX     #$0004      
CE7D: 1F 89               TFR     A,B         
CE7F: C4 03               ANDB    #$03        
CE81: E7 44               STB     4,U         
CE83: E7 C0               STB     ,U+         
CE85: 44                  LSRA                
CE86: 44                  LSRA                
CE87: 30 1F               LEAX    -1,X        
CE89: 26 F2               BNE     $CE7D          ;{}       
CE8B: D6 23               LDB     >$23           ;{-}       
CE8D: CE 09 F4            LDU     #$09F4      
CE90: 33 C5               LEAU    B,U         
CE92: 10 8E DB DE         LDY     #$DBDE      
CE96: A6 A0               LDA     ,Y+         
CE98: 2B 3E               BMI     $CED8          ;{}       
CE9A: E6 C6               LDB     A,U         
CE9C: 58                  ASLB                
CE9D: C1 04               CMPB    #$04        
CE9F: 26 08               BNE     $CEA9          ;{}       
CEA1: AE A5               LDX     B,Y         
CEA3: 0A 75               DEC     >$75           ;{-}       
CEA5: 8D 27               BSR     $CECE          ;{}       
CEA7: C6 06               LDB     #$06        
CEA9: AE A5               LDX     B,Y         
CEAB: 8D 21               BSR     $CECE          ;{}       
CEAD: 31 28               LEAY    8,Y         
CEAF: 20 E5               BRA     $CE96          ;{}       
CEB1: 39                  RTS                 
CEB2: 1F 12               TFR     X,Y         
CEB4: 6D C5               TST     B,U         
CEB6: 26 F9               BNE     $CEB1          ;{}       
CEB8: DB 23               ADDB    >$23           ;{-}       
CEBA: D7 8A               STB     >$8A           ;{-}       
CEBC: DC 7C               LDD     >$7C           ;{-}       
CEBE: BD D1 1B            JSR     $D11B          ;{}       
CEC1: BD CF 82            JSR     $CF82          ;{}       
CEC4: 27 EB               BEQ     $CEB1          ;{}       
CEC6: 1E 12               EXG     X,Y         
CEC8: 6D 22               TST     2,Y         
CECA: 27 02               BEQ     $CECE          ;{}       
CECC: 0A 75               DEC     >$75           ;{-}       
CECE: 34 40               PSHS    U           
CED0: 3F                  SWI                 
CED1: 00                                         ; SWI 00 Light level
CED2: DE 0B               LDU     >$0B           ;{-}       
CED4: 3F                  SWI                 
CED5: 01                                         ; SWI 01 Draw picture X on screen
CED6: 35 C0               PULS    U,PC        
CED8: DC 7C               LDD     >$7C           ;{-}       
CEDA: BD CF 82            JSR     $CF82          ;{}       
CEDD: 27 0C               BEQ     $CEEB          ;{}       
CEDF: 1F 12               TFR     X,Y         
CEE1: E6 2D               LDB     13,Y        
CEE3: 58                  ASLB                
CEE4: 8E DA A3            LDX     #$DAA3      
CEE7: AE 85               LDX     B,X         
CEE9: 8D DD               BSR     $CEC8          ;{}       
CEEB: C6 03               LDB     #$03        
CEED: 8E DC B0            LDX     #$DCB0      
CEF0: 8D C0               BSR     $CEB2          ;{}       
CEF2: C6 01               LDB     #$01        
CEF4: 8E DC B9            LDX     #$DCB9      
CEF7: 8D B9               BSR     $CEB2          ;{}       
CEF9: 8E DD 3C            LDX     #$DD3C      
CEFC: DC 7C               LDD     >$7C           ;{-}       
CEFE: BD CF E1            JSR     $CFE1          ;{}       
CF01: 2B 06               BMI     $CF09          ;{}       
CF03: 8E DC C2            LDX     #$DCC2      
CF06: 48                  ASLA                
CF07: AE 86               LDX     A,X         
CF09: 8D C3               BSR     $CECE          ;{}       
CF0B: 0F 91               CLR     >$91           ;{-}       
CF0D: DC 7C               LDD     >$7C           ;{-}       
CF0F: BD CF 53            JSR     $CF53          ;{}       
CF12: 27 10               BEQ     $CF24          ;{}       
CF14: A6 0A               LDA     10,X        
CF16: 48                  ASLA                
CF17: 8E D9 EE            LDX     #$D9EE      
CF1A: AE 86               LDX     A,X         
CF1C: 0A 75               DEC     >$75           ;{-}       
CF1E: 8D AE               BSR     $CECE          ;{}       
CF20: 8D AC               BSR     $CECE          ;{}       
CF22: 20 E9               BRA     $CF0D          ;{}       
CF24: 6D C4               TST     ,U          
CF26: 26 15               BNE     $CF3D          ;{}       
CF28: 96 23               LDA     >$23           ;{-}       
CF2A: 97 8A               STA     >$8A           ;{-}       
CF2C: DC 7C               LDD     >$7C           ;{-}       
CF2E: BD D1 1B            JSR     $D11B          ;{}       
CF31: DD 7C               STD     >$7C           ;{-}       
CF33: 0C 8B               INC     >$8B           ;{-}       
CF35: 96 8B               LDA     >$8B           ;{-}       
CF37: 81 09               CMPA    #$09        
CF39: 10 2F FF 31         LBLE    $CE6E       
CF3D: 39                  RTS                 
CF3E: C8 80               EORB    #$80        
CF40: 50                  NEGB                
CF41: 32 1F               LEAS    -1,X        
CF43: 14                       
CF44: 0C 08               INC     >$08           ;{-}       
CF46: 04 02               LSR     >$02           ;{-}       
CF48: FF                        
CF49: 9C 64               CMPX    >$64           ;{-}       
CF4B: 41                        
CF4C: 28 1A               BVC     $CF68       
CF4E: 10 0A                    
CF50: 06 03               ROR     >$03           ;{-}       
CF52: 01                        
CF53: 8D 0E               BSR     $CF63          ;{}       
CF55: 27 0B               BEQ     $CF62          ;{}       
CF57: 10 A3 02            CMPD    2,X         
CF5A: 26 F7               BNE     $CF53          ;{}       
CF5C: 6D 05               TST     5,X         
CF5E: 26 F3               BNE     $CF53          ;{}       
CF60: 1C FB               ANDCC   #$FB        
CF62: 39                  RTS                 

GetNextOject:
; Get the next (or first) object on this level. Start over at top of list
; if requested or continue from last iteration.
;
; Param >$91 0 to start at top of list, 1 to continue from last
; Return object descriptor in X (if found)
; Return Z=1 if no more, Z=0 if next is in X
;
CF63: 34 02               PSHS    A           ; Preserve A
CF65: 96 81               LDA     >$81        ;{-} Get current level number
CF67: 9E 92               LDX     >$92        ;{-} Get current object pointer
CF69: 0D 91               TST     >$91        ;{-} Start at top of list?
CF6B: 26 05               BNE     $CF72       ;{} No ... continue from last time
CF6D: 8E 0B 07            LDX     #$0B07      ; Start of list (-14 ... one slot before)
CF70: 0A 91               DEC     >$91        ;{-} Next time through we won't restart
CF72: 30 0E               LEAX    14,X        ; Get pointer to next object
CF74: 9F 92               STX     >$92        ;{-} Remember it
CF76: 9C 0F               CMPX    >$0F        ;{-} Have we reached the end of the list?
CF78: 27 06               BEQ     $CF80       ;{} Yes ... out with nothing found
CF7A: A1 04               CMPA    4,X         ; Level the same as what we want?
CF7C: 26 F4               BNE     $CF72       ;{} No ... next object
CF7E: 1C FB               ANDCC   #$FB        ; Clear the Z flag meaning there is a next object
CF80: 35 82               PULS    A,PC        ; Restore A and out

GetCreatureAt:
; Find the creature (if any) at the given Y,X coordinate.
; Param A,Y: The Y,X coordinate
; Return X: Pointer to creature if found
; Return NZ if found or Z if not found
;
CF82: 8E 03 C3            LDX     #$03C3      ; Start of creatures (minus pre-decrement)
CF85: 30 88 11            LEAX    $11,X       ; Point to next creature
CF88: 8C 05 F4            CMPX    #$05F4      ; Reached the end of the list?
CF8B: 27 09               BEQ     $CF96       ;{} Yes ... return Z set (not found)
CF8D: 10 A3 0F            CMPD    15,X        ; Right coordinates?
CF90: 26 F3               BNE     $CF85       ;{} No ... keep looking
CF92: 6D 0C               TST     12,X        ; Creature is active?
CF94: 27 EF               BEQ     $CF85       ;{} No ... keep looking (yes, Z=0)
CF96: 39                  RTS                 ; Return

GetRandCell:
; Get a random open cell in the current maze.
; Return A,B: The Y,X coordinate of the random open cell
;
CF97: 34 16               PSHS    X,B,A       ; Preserve registers
CF99: BD CC 71            JSR     $CC71       ;{} Get a random cell
CF9C: ED E4               STD     ,S          ; Put it in return in case it is good
CF9E: A6 84               LDA     ,X          ; Get the cell value
CFA0: 4C                  INCA                ; FF means all walls (solid)
CFA1: 27 F6               BEQ     $CF99       ;{} This is not a valid cell ... keep looking
CFA3: 35 96               PULS    A,B,X,PC    ; Return the random cell in A,B

CreateCreature:
; Create a new creature of the given type at the next available monster slot.
; The new creature is given a random valid coordinate.
; Param A: The monster type
; 
CFA5: 34 76               PSHS    U,Y,X,B,A   ; Preserve registers
CFA7: CE 03 C3            LDU     #$03C3      ; Start of creatures (03D4 minus 11 pre-increment)
CFAA: 33 C8 11            LEAU    $11,U       ; Point to next creature slot
CFAD: 6D 4C               TST     12,U        ; Is this a living creature?
CFAF: 26 F9               BNE     $CFAA       ;{} Yes ... find an empty slot
CFB1: 6A 4C               DEC     12,U        ; Mark this creature living
CFB3: A7 4D               STA     13,U        ; Set the type
CFB5: C6 08               LDB     #$08        ; 8 bytes of init data
CFB7: 3D                  MUL                 ; Type * 8
CFB8: C3 DA BB            ADDD    #$DABB      ; Add to creature-class data table
CFBB: 1F 02               TFR     D,Y         ; Source to Y
CFBD: 1F 31               TFR     U,X         ; Destination to X
CFBF: 86 08               LDA     #$08        ; Bytes to copy = 8
CFC1: BD C0 4B            JSR     $C04B       ;{} Copy the 8 bytes of initial data
CFC4: 8D D1               BSR     $CF97       ;{} Get a random cell
CFC6: 8D BA               BSR     $CF82       ;{} Is there already a creature there?
CFC8: 26 FA               BNE     $CFC4       ;{} Yes ... keep looking
CFCA: ED 4F               STD     15,U        ; Put the creature in the random cell
CFCC: 1F 31               TFR     U,X         
CFCE: BD C2 5C            JSR     $C25C       ;{}       
CFD1: AF 45               STX     5,U         
CFD3: CC D0 41            LDD     #$D041      
CFD6: ED 43               STD     3,U         
CFD8: A6 06               LDA     6,X         
CFDA: C6 04               LDB     #$04        
CFDC: BD C2 1D            JSR     $C21D       ;{}       
CFDF: 35 F6               PULS    A,B,X,Y,U,PC

ScanForHole:
; There can only be one hole in the current cell. This scans for a hole in the current
; cell and returns the type in A (or A is negative for none).
;
; Param A,B: Y,X cell coordinate to check
; Return A: Hole type (if found: 00=hole in ceiling, 01=ladder in ceiling, 10=hole in floor, 11=ladder in floor)
; Return Negative if not found, positive if found
;
CFE1: 34 56               PSHS    U,X,B,A     ; Preserve registers
CFE3: DE 86               LDU     >$86        ;{-} Holes in ceiling of current level
CFE5: 8D 0B               BSR     $CFF2       ;{} Check for a hole in the ceiling
CFE7: 4D                  TSTA                ; Is there one?
CFE8: 2A 04               BPL     $CFEE       ;{} Yes ... keep the data and skip the floor
CFEA: 8D 06               BSR     $CFF2       ;{} Check for a hole in the floor
CFEC: 8B 02               ADDA    #$02        ; Flag that it is in the floor
CFEE: A7 E4               STA     ,S          ; Save the hole result (returns in A)
CFF0: 35 D6               PULS    A,B,X,U,PC  ; Out
;
; Run a list of holes and return the type of the hole
; that has the check coordiantes (or bit 7 set if not found)
CFF2: A6 C0               LDA     ,U+         ; Get hole type
CFF4: 2B 06               BMI     $CFFC       ;{} End of list ... out
CFF6: AE C1               LDX     ,U++        ; Get hole coordinate
CFF8: AC 62               CMPX    2,S         ; Matches the test coordinate?
CFFA: 26 F6               BNE     $CFF2       ;{} No ... keep looking
CFFC: 39                  RTS                 ; Return A is hole type or bit 7 set if not found

HolesAndLadders:
; The game maintains a pointer-to-holes-in-current-ceiling in $286. The next list
; after is the list of holes-in-current-floor.
;
; Holes between surface and level 0 (none ... no surface)
CFFD: 80 
;
; Holes between levels 0 and 1
CFFE: 01 00 17 ; Ladder Y=00, X=17
D001: 00 0F 04 ; Hole   Y=0F, X=04
D004: 00 14 11 ; Hole   Y=14, X=11
D007: 01 1C 1E ; Ladder Y=1C, X=1E 
D00A: 80 
;
; Holes between levels 1 and 2
D00B: 01 02 03 ; Ladder Y=02, X=03
D00E: 00 03 1F ; Hole   Y=03, X=1F
D011: 00 13 14 ; Hole   Y=13, X=14
D014: 00 1F 00 ; Hole   Y=1F, X=00
D017: 80
;
; Holes between levels 3 and 4 (none)
D018: 80 
;
; Holes between levels 4 and 5
D019: 00 00 1F ; Hole   Y=00, X=1F
D01C: 00 05 00 ; Hole   Y=05, X=00
D01F: 00 16 1C ; Hole   Y=16, X=1C
D022: 00 1F 10 ; Hole   Y=1F, X=10
D025: 80 
;
; Holes between levels 5 and 6 (none ... no level 6)
D026: 80

; ?? Task 4 ??
D027: 9E 82               LDX     >$82        ;{-}       
D029: C6 0B               LDB     #$0B        
D02B: 4F                  CLRA                
D02C: AB 85               ADDA    B,X         
D02E: 5A                  DECB                
D02F: 2A FB               BPL     $D02C       ;{}       
D031: 81 20               CMPA    #$20        
D033: 24 08               BCC     $D03D       ;{}       
D035: 3F                  SWI                 
D036: 07                                         ; SWI 07 Get random number
D037: 84 07               ANDA    #$07        
D039: 8B 02               ADDA    #$02        
D03B: 6C 86               INC     A,X         
D03D: CC 05 08            LDD     #$0508      
D040: 39                  RTS                 
D041: 10 AE 45            LDY     5,U         
D044: 0D 2B               TST     >$2B           ;{-}       
D046: 26 22               BNE     $D06A          ;{}       
D048: E6 2C               LDB     12,Y        
D04A: 26 01               BNE     $D04D          ;{}       
D04C: 39                  RTS                 
D04D: A6 2D               LDA     13,Y        
D04F: 81 06               CMPA    #$06        
D051: 27 1A               BEQ     $D06D          ;{}       
D053: 81 0A               CMPA    #$0A        
D055: 2C 16               BGE     $D06D       
D057: EC 2F               LDD     15,Y        
D059: 0F 91               CLR     >$91           ;{-}       
D05B: BD CF 53            JSR     $CF53          ;{}       
D05E: 27 0D               BEQ     $D06D          ;{}       
D060: EC 28               LDD     8,Y         
D062: AF 28               STX     8,Y         
D064: ED 84               STD     ,X          
D066: 6A 05               DEC     5,X         
D068: 3F                  SWI                 
D069: 0E                                         ; SWI 0E Display playing screen
D06A: 7E D1 03            JMP     $D103          ;{}       
D06D: EC 2F               LDD     15,Y        
D06F: 10 93 13            CMPD    >$13           ;{-}       
D072: 26 3E               BNE     $D0B2          ;{}       
D074: A6 2D               LDA     13,Y        
D076: C6 FF               LDB     #$FF        
D078: 3F                  SWI                 
D079: 1C                                         ; SWI 1C Play sound A at volume B
D07A: CC 80 80            LDD     #$8080      
D07D: 9E 1D               LDX     >$1D           ;{-}       
D07F: 8D 1D               BSR     $D09E          ;{}       
D081: 9E 1F               LDX     >$1F           ;{-}       
D083: 8D 19               BSR     $D09E          ;{}       
D085: 97 1A               STA     >$1A           ;{-}       
D087: D7 1C               STB     >$1C           ;{-}       
D089: 1F 21               TFR     Y,X         
D08B: CE 02 17            LDU     #$0217      
D08E: BD D3 D7            JSR     $D3D7          ;{}       
D091: 2B 06               BMI     $D099          ;{}       
D093: 3F                  SWI                 
D094: 1B                                         ; SWI 1B * Play sound i at full volume
D095: 13                                         ; 13 = Wizard beam                
D096: BD D4 0C            JSR     $D40C          ;{}       
D099: 3F                  SWI                 
D09A: 0C                                         ; SWI 0C Update heart rate
D09B: 7E D1 0F            JMP     $D10F          ;{}       
D09E: 34 16               PSHS    X,B,A       
D0A0: 27 0E               BEQ     $D0B0          ;{}       
D0A2: A6 0A               LDA     10,X        
D0A4: 81 03               CMPA    #$03        
D0A6: 26 08               BNE     $D0B0          ;{}       
D0A8: AE 06               LDX     6,X         
D0AA: AC E4               CMPX    ,S          
D0AC: 24 02               BCC     $D0B0          ;{}       
D0AE: AF E4               STX     ,S          
D0B0: 35 96               PULS    A,B,X,PC    
D0B2: 91 13               CMPA    >$13           ;{-}       
D0B4: 26 0D               BNE     $D0C3          ;{}       
D0B6: A6 A8 10            LDA     $10,Y       
D0B9: C6 01               LDB     #$01        
D0BB: 90 14               SUBA    >$14           ;{-}       
D0BD: 2B 11               BMI     $D0D0          ;{}       
D0BF: C6 03               LDB     #$03        
D0C1: 20 0D               BRA     $D0D0          ;{}       
D0C3: EC 2F               LDD     15,Y        
D0C5: D1 14               CMPB    >$14           ;{-}       
D0C7: 26 1B               BNE     $D0E4          ;{}       
D0C9: C6 02               LDB     #$02        
D0CB: 90 13               SUBA    >$13           ;{-}       
D0CD: 2B 01               BMI     $D0D0          ;{}       
D0CF: 5F                  CLRB                
D0D0: D7 8A               STB     >$8A           ;{-}       
D0D2: EC 2F               LDD     15,Y        
D0D4: 8D 60               BSR     $D136          ;{}       
D0D6: 26 0C               BNE     $D0E4          ;{}       
D0D8: 10 93 13            CMPD    >$13           ;{-}       
D0DB: 26 F7               BNE     $D0D4          ;{}       
D0DD: D6 8A               LDB     >$8A           ;{-}       
D0DF: E7 2E               STB     14,Y        
D0E1: 5F                  CLRB                
D0E2: 20 1D               BRA     $D101          ;{}       
D0E4: 8E D1 14            LDX     #$D114      
D0E7: 3F                  SWI                 
D0E8: 07                                         ; SWI 07 Get random number
D0E9: 4D                  TSTA                
D0EA: 2B 02               BMI     $D0EE          ;{}       
D0EC: 30 03               LEAX    3,X         
D0EE: 84 03               ANDA    #$03        
D0F0: 26 02               BNE     $D0F4          ;{}       
D0F2: 30 01               LEAX    1,X         
D0F4: 86 03               LDA     #$03        
D0F6: E6 80               LDB     ,X+         
D0F8: 8D 55               BSR     $D14F          ;{}       
D0FA: 27 07               BEQ     $D103          ;{}       
D0FC: 4A                  DECA                
D0FD: 26 F7               BNE     $D0F6          ;{}       
D0FF: C6 02               LDB     #$02        
D101: 8D 4C               BSR     $D14F          ;{}       
D103: A6 26               LDA     6,Y         
D105: AE 2F               LDX     15,Y        
D107: 9C 13               CMPX    >$13           ;{-}       
D109: 26 06               BNE     $D111          ;{}       
D10B: 3F                  SWI                 
D10C: 0E                                         ; SWI 0E Display playing screen
D10D: 0F B5               CLR     >$B5           ;{-}       
D10F: A6 27               LDA     7,Y         
D111: C6 04               LDB     #$04        
D113: 39                  RTS                 

D114: 00 03        
D116: 01
D117: 00 01  
D119: 03 00

StepInDirection:
; This function moves the Y,X coordinates in A,B in the direction in $8A.
;
; Param A,B: The Y,X coordinates
;
; Return A,B: The new Y,X coordinates
; Return X: Pointer to the new cell
;
D11B: 34 06               PSHS    B,A         ; Hold coordinates
D11D: D6 8A               LDB     >$8A        ;{-} Get direction
D11F: C4 03               ANDB    #$03        ; Only four
D121: 58                  ASLB                ; 2 bytes for each table entry
D122: 8E D1 2E            LDX     #$D12E      ; Table of X,Y offsets for direction
D125: EC 85               LDD     B,X         ; Get the X,Y offsets
D127: AB E0               ADDA    ,S+         ; Offset the Y
D129: EB E0               ADDB    ,S+         ; Offset the X
D12B: 7E CC 7B            JMP     $CC7B       ;{} Get cell pointer and return
;     
; Y,X offsets for each direction
;
D12E: FF 00 ; 00 Up    (Y-1, X)
D130: 00 01 ; 01 Right (Y,   X+1)
D132: 01 00 ; 02 Down  (y+1, X)
D134: 00 FF ; 03 Left  (Y,   X-1)
                        
D136: 34 76               PSHS    U,Y,X,B,A   
D138: 8D E1               BSR     $D11B       ;{}       
D13A: BD CC 8E            JSR     $CC8E       ;{}       
D13D: 26 0E               BNE     $D14D       ;{}       
D13F: 1F 03               TFR     D,U         
D141: A6 84               LDA     ,X          
D143: 4C                  INCA                
D144: 27 06               BEQ     $D14C       ;{}       
D146: EF E4               STU     ,S          
D148: AF 62               STX     2,S         
D14A: 86 01               LDA     #$01        
D14C: 4A                  DECA                
D14D: 35 F6               PULS    A,B,X,Y,U,PC
D14F: 34 16               PSHS    X,B,A       
D151: EB 2E               ADDB    14,Y        
D153: C4 03               ANDB    #$03        
D155: D7 8A               STB     >$8A        ;{-}       
D157: EC 2F               LDD     15,Y        
D159: 8D DB               BSR     $D136       ;{}       
D15B: 26 3C               BNE     $D199       ;{}       
D15D: BD CF 82            JSR     $CF82       ;{}       
D160: 26 37               BNE     $D199       ;{}       
D162: ED 2F               STD     15,Y        
D164: D6 8A               LDB     >$8A        ;{-}       
D166: E7 2E               STB     14,Y        
D168: EC 2F               LDD     15,Y        
D16A: 90 13               SUBA    >$13        ;{-}       
D16C: 2A 01               BPL     $D16F       ;{}       
D16E: 40                  NEGA                
D16F: D0 14               SUBB    >$14        ;{-}       
D171: 2A 01               BPL     $D174       ;{}       
D173: 50                  NEGB                
D174: D7 C1               STB     >$C1        ;{-}       
D176: 91 C1               CMPA    >$C1        ;{-}       
D178: 2C 02               BGE     $D17C       
D17A: 1E 89               EXG     A,B         
D17C: 97 C1               STA     >$C1        ;{-}       
D17E: 81 08               CMPA    #$08        
D180: 2E 16               BGT     $D198       
D182: C1 02               CMPB    #$02        
D184: 2E 12               BGT     $D198       
D186: 3F                  SWI                 
D187: 07                                         ; SWI 07 Get random number
D188: 85 01               BITA    #$01        
D18A: 27 0A               BEQ     $D196          ;{}       
D18C: 96 C1               LDA     >$C1           ;{-}       
D18E: C6 1F               LDB     #$1F        
D190: 3D                  MUL                 
D191: 53                  COMB                
D192: A6 2D               LDA     13,Y        
D194: 3F                  SWI                 
D195: 1C                                         ; SWI 1C Play sound A at volume B
D196: 0A B5               DEC     >$B5           ;{-}       
D198: 4F                  CLRA                
D199: 35 96               PULS    A,B,X,PC

; ?? Task 3 ??    
D19B: DE 24               LDU     >$24           ;{-}       
D19D: 27 1D               BEQ     $D1BC          ;{}       
D19F: A6 46               LDA     6,U         
D1A1: 27 19               BEQ     $D1BC          ;{}       
D1A3: 4A                  DECA                
D1A4: A7 46               STA     6,U         
D1A6: 81 05               CMPA    #$05        
D1A8: 2E 06               BGT     $D1B0       
D1AA: C6 18               LDB     #$18        
D1AC: E7 49               STB     9,U         
D1AE: 6F 4B               CLR     11,U        
D1B0: A1 47               CMPA    7,U         
D1B2: 2C 02               BGE     $D1B6       
D1B4: A7 47               STA     7,U         
D1B6: A1 48               CMPA    8,U         
D1B8: 2C 02               BGE     $D1BC       
D1BA: A7 48               STA     8,U         
D1BC: 0A B5               DEC     >$B5           ;{-}       
D1BE: CC 01 08            LDD     #$0108      
D1C1: 39                  RTS

; ?? Task 1 ??                 
D1C2: 0D B5               TST     >$B5           ;{-}       
D1C4: 26 07               BNE     $D1CD          ;{}       
D1C6: 8E CD B2            LDX     #$CDB2      
D1C9: 9C B2               CMPX    >$B2           ;{-}       
D1CB: 26 04               BNE     $D1D1          ;{}       
D1CD: 0F B5               CLR     >$B5           ;{-}       
D1CF: 3F                  SWI                 
D1D0: 0E                                         ; SWI 0E Display playing screen
D1D1: CC 03 04            LDD     #$0304      
D1D4: 39                  RTS

; ?? Task 2 ??                 
D1D5: 4F                  CLRA                
D1D6: 5F                  CLRB                
D1D7: 93 21               SUBD    >$21           ;{-}       
D1D9: BD D3 79            JSR     $D379          ;{}       
D1DC: D3 21               ADDD    >$21           ;{-}       
D1DE: 2E 02               BGT     $D1E2       
D1E0: 4F                  CLRA                
D1E1: 5F                  CLRB                
D1E2: DD 21               STD     >$21           ;{-}       
D1E4: 3F                  SWI                 
D1E5: 0C                                         ; SWI 0C Update heart rate
D1E6: 96 AF               LDA     >$AF           ;{-}       
D1E8: C6 02               LDB     #$02        
D1EA: 39                  RTS

; ?? Task 0 ??                 
D1EB: 0D 77               TST     >$77           ;{-}       
D1ED: 26 2C               BNE     $D21B          ;{}       
D1EF: BD C3 29            JSR     $C329          ;{}       
D1F2: 4D                  TSTA                
D1F3: 27 53               BEQ     $D248          ;{}       
D1F5: 0D 28               TST     >$28           ;{-}       
D1F7: 26 F6               BNE     $D1EF          ;{}       
D1F9: 81 20               CMPA    #$20        
D1FB: 27 18               BEQ     $D215          ;{}       
D1FD: C6 1F               LDB     #$1F        
D1FF: 81 0D               CMPA    #$0D        
D201: 27 0F               BEQ     $D212          ;{}       
D203: C6 24               LDB     #$24        
D205: 81 08               CMPA    #$08        
D207: 27 09               BEQ     $D212          ;{}       
D209: 5F                  CLRB                
D20A: 81 41               CMPA    #$41        
D20C: 25 04               BCS     $D212          ;{}       
D20E: 81 5A               CMPA    #$5A        
D210: 23 03               BLS     $D215          ;{}       
D212: 1F 98               TFR     B,A         
D214: 8C 84 1F            CMPX    #$841F      
D217: 8D 33               BSR     $D24C          ;{}       
D219: 20 D4               BRA     $D1EF          ;{}       
D21B: 10 9E 0D            LDY     >$0D           ;{-}       
D21E: E6 A0               LDB     ,Y+         
D220: 2A 07               BPL     $D229          ;{}       
D222: 3F                  SWI                 
D223: 10                                         ; SWI 10 Wait for n SYNCs
D224: 3F                  SWI                 
D225: 10                                         ; SWI 10 Wait for n SYNCs
D226: 7E C0 00            JMP     $C000       ;{} Restart

D229: AE A1               LDX     ,Y++        
D22B: CE 03 61            LDU     #$0361      
D22E: 3F                  SWI                 
D22F: 06                                         ; SWI 06 Uncompress message X to given buffer U
D230: 33 41               LEAU    1,U         
D232: 3F                  SWI                 
D233: 10                                         ; SWI 10 Wait for n SYNCs
D234: 8C 8D 15            CMPX    #$8D15      
D237: A6 C0               LDA     ,U+         
D239: 2A FA               BPL     $D235          ;{}       
D23B: 4F                  CLRA                
D23C: 8D 0E               BSR     $D24C          ;{}       
D23E: 5A                  DECB                
D23F: 26 E8               BNE     $D229          ;{}       
D241: 86 1F               LDA     #$1F        
D243: 8D 07               BSR     $D24C          ;{}       
D245: 10 9F 0D            STY     >$0D           ;{-}       
D248: CC 01 02            LDD     #$0102      
D24B: 39                  RTS                 
D24C: 34 76               PSHS    U,Y,X,B,A   
D24E: 0D AD               TST     >$AD           ;{-}       
D250: 26 04               BNE     $D256          ;{}       
D252: 3F                  SWI                 
D253: 19                                         ; SWI 19 Bring up normal display
D254: 3F                  SWI                 
D255: 0F                                         ; SWI 0F Ready command prompt
D256: DE 11               LDU     >$11           ;{-}       
D258: 81 1F               CMPA    #$1F        
D25A: 27 13               BEQ     $D26F          ;{}       
D25C: 81 24               CMPA    #$24        
D25E: 27 1D               BEQ     $D27D          ;{}       
D260: 3F                  SWI                 
D261: 04                                         ; SWI 04 Display a single character in A
D262: A7 C0               STA     ,U+         
D264: 8E C6 7C            LDX     #$C67C      ; Cursor data
D267: 3F                  SWI                 ; Print cursor
D268: 03                                         ; SWI 03 Display uncompressed message pointed to by X
D269: 11 83 03 11         CMPU    #$0311      
D26D: 26 45               BNE     $D2B4          ;{}       
D26F: 4F                  CLRA                
D270: 3F                  SWI                 
D271: 04                                         ; SWI 04 Display a single character in A
D272: DC 03               LDD     >$03           ;{-}       
D274: ED C1               STD     ,U++        
D276: CE 02 F1            LDU     #$02F1      
D279: DF 11               STU     >$11           ;{-}       
D27B: 20 15               BRA     $D292          ;{}       
D27D: 11 83 02 F1         CMPU    #$02F1      
D281: 27 31               BEQ     $D2B4          ;{}       
D283: 33 5F               LEAU    -1,U        
D285: 8E D2 8C            LDX     #$D28C      
D288: 3F                  SWI                 
D289: 03                                         ; SWI 03 Display uncompressed message pointed to by X
D28A: 20 28               BRA     $D2B4          ;{}       
D28C: 00 24               NEG     >$24           ;{-}       
D28E: 24 1C               BCC     $D2AC          ;{}       
D290: 24 FF               BCC     $D291          ;{}       
D292: 8E D8 94            LDX     #$D894      
D295: BD CB EC            JSR     $CBEC          ;{}       
D298: 27 0D               BEQ     $D2A7          ;{}       
D29A: 2A 05               BPL     $D2A1          ;{}       
D29C: BD CB E1            JSR     $CBE1          ;{}       
D29F: 20 06               BRA     $D2A7          ;{}       
D2A1: 48                  ASLA                
D2A2: 8E D9 D0            LDX     #$D9D0      
D2A5: AD 96               JSR     [A,X]       
D2A7: CE 02 F1            LDU     #$02F1      
D2AA: 0D AD               TST     >$AD           ;{-}       
D2AC: 27 06               BEQ     $D2B4          ;{}       
D2AE: 0D 28               TST     >$28           ;{-}       
D2B0: 26 02               BNE     $D2B4          ;{}       
D2B2: 3F                  SWI                 
D2B3: 0F                                         ; SWI 0F Ready command prompt
D2B4: DF 11               STU     >$11           ;{-}       
D2B6: 35 F6               PULS    A,B,X,Y,U,PC

D2B8: BD CC 31            JSR     $CC31          ;{}       
D2BB: EE C4               LDU     ,U          
D2BD: 26 03               BNE     $D2C2          ;{}       
D2BF: CE 0B 07            LDU     #$0B07      
D2C2: 1F 32               TFR     U,Y         
D2C4: A6 4C               LDA     12,U        
D2C6: 97 19               STA     >$19           ;{-}       
D2C8: A6 4D               LDA     13,U        
D2CA: 97 1B               STA     >$1B           ;{-}       
D2CC: 9B 19               ADDA    >$19           ;{-}       
D2CE: 46                  RORA                
D2CF: 44                  LSRA                
D2D0: 44                  LSRA                
D2D1: 9E 17               LDX     >$17        ;{-} Strength
D2D3: BD D4 36            JSR     $D436       ;{}       
D2D6: D3 21               ADDD    >$21        ;{-}       
D2D8: DD 21               STD     >$21        ;{-}       
D2DA: A6 4A               LDA     10,U        ; Object class
D2DC: 8B 0C               ADDA    #$0C        ; Sound table offset
D2DE: C6 FF               LDB     #$FF        ; Full volume
D2E0: 3F                  SWI                 ; Play sound of object
D2E1: 1C                                         ; SWI 1C Play sound A at volume B
D2E2: A6 49               LDA     9,U         ; Proper name
D2E4: 81 13               CMPA    #$13        ; Ring range?
D2E6: 2D 0F               BLT     $D2F7       ; Too low
D2E8: 81 15               CMPA    #$15        ; Ring Range?
D2EA: 2E 0B               BGT     $D2F7       ; Too high
D2EC: 6A 46               DEC     6,U         ; Subtract one from ring counter
D2EE: 26 07               BNE     $D2F7       ;{} Still good, go on
D2F0: 86 16               LDA     #$16        ; GOLD token
D2F2: A7 49               STA     9,U         ; Now a gold ring
D2F4: BD D6 38            JSR     $D638       ;{} Change object
D2F7: DC 13               LDD     >$13        ;{-} Our coordinates
D2F9: BD CF 82            JSR     $CF82       ;{} Find creature
D2FC: 27 77               BEQ     $D375       ;{} None found ignore attack
D2FE: CE 02 17            LDU     #$0217      
D301: 1E 13               EXG     X,U         
D303: A6 2A               LDA     10,Y        ; Class
D305: 81 01               CMPA    #$01        ; Is it a ring?
D307: 27 16               BEQ     $D31F       ;{} Yes-- can't miss
D309: BD D3 D7            JSR     $D3D7       ;{} Otherwise get calculate hit chance
D30C: 2B 67               BMI     $D375       ;{} Oops, missed
D30E: 10 9E 24            LDY     >$24        ;{-} Torch pointer
D311: 27 06               BEQ     $D319       ;{} Oh, no, no torch...
D313: A6 29               LDA     9,Y         ; Proper name of torch
D315: 81 18               CMPA    #$18        ; Well, it is dead!
D317: 26 06               BNE     $D31F       ;{} No, go on
D319: 3F                  SWI                 ; Random number
D31A: 07                                         ; SWI 07 Get random number
D31B: 84 03               ANDA    #$03        ; Between 0 and 3
D31D: 26 56               BNE     $D375       ;{} Only one in three will hit
D31F: 3F                  SWI                 ; Sound a hit
D320: 1B                                         ; SWI 1B * Play sound i at full volume
D321: 12                                         ; 12 = Player hit                
D322: 3F                  SWI                 ; Print !!!
D323: 02                                         ; SWI 02 * Uncompress message m and display
;
D324: 16 F7 B0 ; "!!!"
;
D327: BD D4 0C            JSR     $D40C       ;{}       
D32A: 22 49               BHI     $D375       ;{}       
D32C: 30 48               LEAX    8,U         ; First in object link for monster
D32E: AE 84               LDX     ,X          ; Get pointer to next object in list
D330: 27 08               BEQ     $D33A       ;{} That's all
D332: 6F 05               CLR     5,X         ; Drop on floor
D334: EC 4F               LDD     15,U        ; Coordinate from monster
D336: ED 02               STD     2,X         ; Now to object
D338: 20 F4               BRA     $D32E       ;{} Keep going for all
D33A: 9E 82               LDX     >$82        ;{-}       
D33C: E6 4D               LDB     13,U        
D33E: 6A 85               DEC     B,X         
D340: 6F 4C               CLR     12,U        ; Monster dead
D342: 3F                  SWI                 
D343: 0E                                         ; SWI 0E Display playing screen
D344: 3F                  SWI                 ; Sound monster dead
D345: 1B                                         ; SWI 1B * Play sound i at full volume
D346: 15                                         ; 15 = Creature dying
D347: EC C4               LDD     ,U          ; Monster strength
D349: 8D 34               BSR     $D37F       ;{}       
D34B: D3 17               ADDD    >$17        ;{-} Add to our strength
D34D: 2A 02               BPL     $D351       ;{} No overflow
D34F: 86 7F               LDA     #$7F        ; Maximum high
D351: DD 17               STD     >$17        ;{-} New strength
D353: A6 4D               LDA     13,U        ; What did we just kill?
D355: 81 0A               CMPA    #$0A        ; Demon...
D357: 27 2D               BEQ     $D386       ;{} ...go to level 4
D359: 81 0B               CMPA    #$0B        ; Wizard...
D35B: 26 18               BNE     $D375       ;{} No, leave from here
D35D: 0A 2B               DEC     >$2B        ;{-}       
D35F: CC 07 13            LDD     #$0713      ; Light level
D362: DD 26               STD     >$26        ;{-} Temporary light
D364: 8E 0B 23            LDX     #$0B23      ; Drop all but ...
D367: 9F 0F               STX     >$0F        ;{-} ... first object (the Supreme Ring)
D369: DC 00               LDD     >$00        ;{-} Zero constant
D36B: DD 29               STD     >$29        ;{-}       
D36D: DD 24               STD     >$24        ;{-} No torch
D36F: DD 1F               STD     >$1F        ;{-} Left hand empty
D371: DD 1D               STD     >$1D        ;{-} Right hand empty
D373: 3F                  SWI                 
D374: 19                                         ; SWI 19 Bring up normal display
D375: 3F                  SWI                 
D376: 0C                                         ; SWI 0C Update heart rate
    
D377: 47                  ASRA                
D378: 56                  RORB                
D379: 47                  ASRA                
D37A: 56                  RORB                
D37B: 47                  ASRA                
D37C: 56                  RORB                
D37D: 47                  ASRA                
D37E: 56                  RORB                
D37F: 47                  ASRA                
D380: 56                  RORB                
D381: 47                  ASRA                
D382: 56                  RORB                
D383: 47                  ASRA                
D384: 56                  RORB                
D385: 39                  RTS                 

; Demon killed

D386: 8E DF 10            LDX     #$DF10      ; Wizard
D389: 3F                  SWI                 ; Beam him on
D38A: 13                                         ; SWI 13 Beam on picture pointed to by X
D38B: 3F                  SWI                 
D38C: 02                                         ; SWI 02 * Uncompress message m and display
;
D38D: FF C0 57 3E A7 46 C0 90 51 32 28 1E 60 51 09 98 20 C0 E7 DE F0 ; "_1F_ ENOUGH! I TIRE OF THIS PLAY..."
;
D3A2: 3F                  SWI                 
D3A3: 02                                         ; SWI 02 * Uncompress message m and display
;
D3A4: E8 00 08 48 B0 0C 8A 0A 3C 0D 29 68 0A 23 20 23 DE DD EF 60 ; "   PREPARE TO MEET THY DOOM!!!"
;
D3B8: 3F                  SWI                 
D3B9: 10                                         ; SWI 10 Wait for n syncs
D3BA: DE 24               LDU     >$24           ;{-}       
D3BC: DF 29               STU     >$29           ;{-}       
D3BE: 27 04               BEQ     $D3C4          ;{}       
D3C0: 4F                  CLRA                
D3C1: 5F                  CLRB                
D3C2: ED C4               STD     ,U          
D3C4: CC 00 C8            LDD     #$00C8      
D3C7: DD 15               STD     >$15           ;{-}       
D3C9: 86 03               LDA     #$03        ; Level 4
D3CB: 3F                  SWI                 ; Prepare level
D3CC: 1A                                         ; SWI 1A Set up level
D3CD: BD CF 97            JSR     $CF97       ;{} Get random coordinates
D3D0: DD 13               STD     >$13        ;{-} New coordinates
D3D2: 3F                  SWI                 
D3D3: 15                                         ; SWI 15 Beam subroutine
D3D4: 3F                  SWI                 
D3D5: 19                                         ; SWI 19 Bring up normal display
D3D6: 39                  RTS                 

D3D7: 34 56               PSHS    U,X,B,A     
D3D9: 86 0F               LDA     #$0F        
D3DB: 97 C1               STA     >$C1           ;{-}       
D3DD: EC C4               LDD     ,U          
D3DF: A3 4A               SUBD    10,U        
D3E1: BD CA 12            JSR     $CA12          ;{}       
D3E4: A3 84               SUBD    ,X          
D3E6: 25 04               BCS     $D3EC          ;{}       
D3E8: 0A C1               DEC     >$C1           ;{-}       
D3EA: 26 F8               BNE     $D3E4          ;{}       
D3EC: D6 C1               LDB     >$C1           ;{-}       
D3EE: C0 03               SUBB    #$03        
D3F0: 2A 09               BPL     $D3FB          ;{}       
D3F2: 50                  NEGB                
D3F3: 86 19               LDA     #$19        
D3F5: 3D                  MUL                 
D3F6: BD CA 99            JSR     $CA99          ;{}       
D3F9: 20 03               BRA     $D3FE          ;{}       
D3FB: 86 0A               LDA     #$0A        
D3FD: 3D                  MUL                 
D3FE: ED E3               STD     ,--S        
D400: 3F                  SWI                 
D401: 07                                         ; SWI 07 Get random number
D402: 1F 89               TFR     A,B         
D404: 4F                  CLRA                
D405: E3 E1               ADDD    ,S++        
D407: 83 00 7F            SUBD    #$007F      
D40A: 35 D6               PULS    A,B,X,U,PC  
D40C: 34 76               PSHS    U,Y,X,B,A   
D40E: 1F 12               TFR     X,Y         
D410: AE A4               LDX     ,Y          
D412: A6 22               LDA     2,Y         
D414: 8D 20               BSR     $D436          ;{}       
D416: 1F 01               TFR     D,X         
D418: A6 43               LDA     3,U         
D41A: 8D 1A               BSR     $D436          ;{}       
D41C: E3 4A               ADDD    10,U        
D41E: ED 4A               STD     10,U        
D420: AE A4               LDX     ,Y          
D422: A6 24               LDA     4,Y         
D424: 8D 10               BSR     $D436          ;{}       
D426: 1F 01               TFR     D,X         
D428: A6 45               LDA     5,U         
D42A: 8D 0A               BSR     $D436          ;{}       
D42C: E3 4A               ADDD    10,U        
D42E: ED 4A               STD     10,U        
D430: AE C4               LDX     ,U          
D432: AC 4A               CMPX    10,U        
D434: 35 F6               PULS    A,B,X,Y,U,PC
D436: 34 16               PSHS    X,B,A       
D438: 0F C1               CLR     >$C1           ;{-}       
D43A: E6 63               LDB     3,S         
D43C: 3D                  MUL                 
D43D: DD C2               STD     >$C2           ;{-}       
D43F: A6 E4               LDA     ,S          
D441: E6 62               LDB     2,S         
D443: 3D                  MUL                 
D444: D3 C1               ADDD    >$C1           ;{-}       
D446: 08 C3               LSL     >$C3           ;{-}       
D448: 59                  ROLB                
D449: 49                  ROLA                
D44A: ED E4               STD     ,S          
D44C: 35 96               PULS    A,B,X,PC    
D44E: DC 13               LDD     >$13           ;{-}       
D450: BD CF E1            JSR     $CFE1          ;{}       
D453: 2B 1A               BMI     $D46F          ;{}       
D455: 97 C1               STA     >$C1           ;{-}       
D457: 8E D8 D9            LDX     #$D8D9      
D45A: BD CB EC            JSR     $CBEC          ;{}       
D45D: 2F 10               BLE     $D46F       
D45F: D6 C1               LDB     >$C1           ;{-}       
D461: 81 04               CMPA    #$04        
D463: 27 0D               BEQ     $D472          ;{}       
D465: 81 05               CMPA    #$05        
D467: 26 06               BNE     $D46F          ;{}       
D469: 86 01               LDA     #$01        
D46B: C5 02               BITB    #$02        
D46D: 26 09               BNE     $D478          ;{}       
D46F: 7E CB E1            JMP     $CBE1          ;{}       
D472: 86 FF               LDA     #$FF        
D474: C1 01               CMPB    #$01        
D476: 26 F7               BNE     $D46F          ;{}       
D478: 3F                  SWI                 
D479: 16                                         ; SWI 16 Print PREPARE
D47A: 9B 81               ADDA    >$81           ;{-}       
D47C: 3F                  SWI                 
D47D: 1A                                         ; SWI 1A Set up level
D47E: 3F                  SWI                 
D47F: 19                                         ; SWI 19 Bring up normal display
D480: 39                  RTS                 
D481: 8E D4 95            LDX     #$D495      
D484: 9F B2               STX     >$B2           ;{-}       
D486: 3F                  SWI                 
D487: 0E                                         ; SWI 0E Display playing screen
D488: 39                  RTS                 
D489: 3F                  SWI                 
D48A: 09                                         ; SWI 09 Clear secondary screen
D48B: AE C4               LDX     ,U          
D48D: CE 03 80            LDU     #$0380      
D490: AF C4               STX     ,U          
D492: 0A B7               DEC     >$B7           ;{-}       
D494: 39                  RTS                 
D495: 8D F2               BSR     $D489          ;{}       
D497: 0F B6               CLR     >$B6           ;{-}       
D499: CC 00 0A            LDD     #$000A      
D49C: ED 44               STD     4,U         
D49E: 3F                  SWI                 
D49F: 02                                         ; SWI 02 * Uncompress message m and display
;
D4A0: 62 5C 0A 21 33 04 9E F6 FC ; "IN THIS ROOM_1F_"
;
D4A9: DC 13               LDD     >$13       ;{-}       
D4AB: BD CF 82            JSR     $CF82       ;{}       
D4AE: 27 10               BEQ     $D4C0       ;{}       
D4B0: AE 44               LDX     4,U         
D4B2: 30 0B               LEAX    11,X        
D4B4: AF 44               STX     4,U         
D4B6: 3F                  SWI                 
D4B7: 02                                         ; SWI 02 * Uncompress message m and display
;
D4B8: 56 C7 22 86 95 91 77 F0 ; "!CREATURE!_1F_"
;
D4C0: 0F 91               CLR     >$91 ;{-}       
D4C2: DC 13               LDD     >$19                ;{-}       
D4C4: BD CF 53            JSR     $CF53       ;{}       
D4C7: 27 04               BEQ     $D4CD       ;{}       
D4C9: 8D 3A               BSR     $D505       ;{}       
D4CB: 20 F5               BRA     $D4C2       ;{}       
D4CD: 0D B6               TST     >$B6        ;{-}       
D4CF: 27 02               BEQ     $D4D3       ;{}       
D4D1: 8D 2B               BSR     $D4FE       ;{}       
D4D3: CC 1B 20            LDD     #$1B20      
D4D6: 3F                  SWI                 
D4D7: 04                                         ; SWI 04 Display a single character in A
D4D8: 5A                  DECB                
D4D9: 26 FB               BNE     $D4D6          ;{}       
D4DB: AE 44               LDX     4,U         
D4DD: 30 0C               LEAX    12,X        
D4DF: AF 44               STX     4,U         
D4E1: 3F                  SWI                 
D4E2: 02                                         ; SWI 02 * Uncompress message m and display
;
D4E3: 40 82 35 C0 23 5F C0 ; "BACKPACK_1F_"
;
D4EA: 8E 02 29            LDX   #$0229        ;
D4ED: AE 84               LDX   ,X            ;
D4EF: 27 0A               BEQ   $D4FB         ;{}
D4F1: 9C 24               CMPX  >$24          ;{-}
D4F3: 26 02               BNE   $D4F7         ;{}
D4F5: 63 46               COM   6,U           ;
D4F7: 8D 0C               BSR   $D505         ;{}
D4F9: 20 F2               BRA   $D4ED         ;{}
D4FB: 0F B7               CLR   >$B7          ;{-}
D4FD: 39                  RTS                 ;
D4FE: 86 1F               LDA   #$1F          ;
D500: 3F                  SWI                 ;
D501: 04                                         ; SWI 04 Display a single character in A
D502: 0F B6               CLR     >$B6           ;{-}       
D504: 39                  RTS                 
D505: 34 16               PSHS    X,B,A       
D507: BD C6 17            JSR     $C617          ;{}       
D50A: 3F                  SWI                 
D50B: 03                                         ; SWI 03 Display uncompressed message pointed to by X
D50C: 96 2C               LDA     >$2C           ;{-}       
D50E: A7 46               STA     6,U         
D510: 03 B6               COM     >$B6           ;{-}       
D512: 27 0A               BEQ     $D51E          ;{}       
D514: EC 44               LDD     4,U         
D516: C3 00 10            ADDD    #$0010      
D519: C4 F0               ANDB    #$F0        
D51B: ED 44               STD     4,U         
D51D: 8C 8D DE            CMPX    #$8DDE      
D520: 35 96               PULS    A,B,X,PC    
D522: 8D 52               BSR     $D576          ;{}       
D524: 26 4D               BNE     $D573          ;{}       
D526: BD CB BA            JSR     $CBBA          ;{}       
D529: 0F 91               CLR     >$91           ;{-}       
D52B: DC 13               LDD     >$13           ;{-}       
D52D: BD CF 53            JSR     $CF53          ;{}       
D530: 27 41               BEQ     $D573          ;{}       
D532: 0D 90               TST     >$90           ;{-}       
D534: 26 06               BNE     $D53C          ;{}       
D536: A6 0A               LDA     10,X        
D538: 91 8F               CMPA    >$8F           ;{-}       
D53A: 20 04               BRA     $D540          ;{}       
D53C: A6 09               LDA     9,X         
D53E: 91 8E               CMPA    >$8E           ;{-}       
D540: 26 E9               BNE     $D52B          ;{}       
D542: AF C4               STX     ,U          
D544: 6C 05               INC     5,X         
D546: E6 0A               LDB     10,X        
D548: 8E D9 FA            LDX     #$D9FA      
D54B: E6 85               LDB     B,X         
D54D: 4F                  CLRA                
D54E: 20 1B               BRA     $D56B          ;{}       
D550: 8D 24               BSR     $D576          ;{}       
D552: 27 1F               BEQ     $D573          ;{}       
D554: 4F                  CLRA                
D555: 5F                  CLRB                
D556: ED C4               STD     ,U          
D558: 6F 05               CLR     5,X         
D55A: DC 13               LDD     >$13           ;{-}       
D55C: ED 02               STD     2,X         
D55E: 96 81               LDA     >$81           ;{-}       
D560: A7 04               STA     4,X         
D562: E6 0A               LDB     10,X        
D564: 8E D9 FA            LDX     #$D9FA      
D567: E6 85               LDB     B,X         
D569: 50                  NEGB                
D56A: 1D                  SEX                 
D56B: D3 15               ADDD    >$15           ;{-}       
D56D: DD 15               STD     >$15           ;{-}       
D56F: 3F                  SWI                 
D570: 0C                                         ; SWI 0C Update heart rate
D571: 20 44               BRA     $D5B7          ;{}       
D573: 7E CB E1            JMP     $CBE1          ;{}       
D576: 7E CC 31            JMP     $CC31          ;{}       
D579: 8D FB               BSR     $D576          ;{}       
D57B: 27 F6               BEQ     $D573          ;{}       
D57D: DC 29               LDD     >$29           ;{-}       
D57F: ED 84               STD     ,X          
D581: 9F 29               STX     >$29           ;{-}       
D583: 4F                  CLRA                
D584: 5F                  CLRB                
D585: ED C4               STD     ,U          
D587: 20 2E               BRA     $D5B7          ;{}       
D589: 8D EB               BSR     $D576          ;{}       
D58B: 26 E6               BNE     $D573          ;{}       
D58D: BD CB BA            JSR     $CBBA          ;{}       
D590: 8E 02 29            LDX     #$0229      
D593: 1F 12               TFR     X,Y         
D595: AE 84               LDX     ,X          
D597: 27 DA               BEQ     $D573          ;{}       
D599: 0D 90               TST     >$90           ;{-}       
D59B: 26 06               BNE     $D5A3          ;{}       
D59D: A6 0A               LDA     10,X        
D59F: 91 8F               CMPA    >$8F           ;{-}       
D5A1: 20 04               BRA     $D5A7          ;{}       
D5A3: A6 09               LDA     9,X         
D5A5: 91 8E               CMPA    >$8E           ;{-}       
D5A7: 26 EA               BNE     $D593          ;{}       
D5A9: EC 84               LDD     ,X          
D5AB: ED A4               STD     ,Y          
D5AD: AF C4               STX     ,U          
D5AF: 4F                  CLRA                
D5B0: 5F                  CLRB                
D5B1: 9C 24               CMPX    >$24           ;{-}       
D5B3: 26 02               BNE     $D5B7          ;{}       
D5B5: DD 24               STD     >$24           ;{-}       
D5B7: 3F                  SWI                 
D5B8: 0D                                         ; SWI 0D Print contents of hands on status line
D5B9: 3F                  SWI                 
D5BA: 0E                                         ; SWI 0E Display playing screen
D5BB: 39                  RTS                 
D5BC: 8E D8 F3            LDX     #$D8F3      
D5BF: BD CB EC            JSR     $CBEC          ;{}       
D5C2: 2F 2B               BLE     $D5EF       
D5C4: 0D 7B               TST     >$7B           ;{-}       
D5C6: 27 27               BEQ     $D5EF          ;{}       
D5C8: DD 8E               STD     >$8E           ;{-}       
D5CA: DE 1D               LDU     >$1D           ;{-}       
D5CC: 8D 02               BSR     $D5D0          ;{}       
D5CE: DE 1F               LDU     >$1F           ;{-}       
D5D0: 27 1D               BEQ     $D5EF          ;{}       
D5D2: A6 4A               LDA     10,U        
D5D4: 81 01               CMPA    #$01        
D5D6: 26 17               BNE     $D5EF          ;{}       
D5D8: A6 47               LDA     7,U         
D5DA: 27 13               BEQ     $D5EF          ;{}       
D5DC: 91 8E               CMPA    >$8E           ;{-}       
D5DE: 26 0F               BNE     $D5EF          ;{}       
D5E0: A7 49               STA     9,U         
D5E2: 3F                  SWI                 
D5E3: 18                                         ; SWI 18 Change object to proper name and data
D5E4: 3F                  SWI                 
D5E5: 1B                                         ; SWI 1B * Play sound i at full volume
D5E6: 0D                                         ; 0D = Ring
D5E7: 3F                  SWI
D5E8: 0D                                         ; SWI 0D Print contents of hands on status line
D5E9: 6F                       
D5EA: 47                  ASRA                
D5EB: 81 12               CMPA    #$12        
D5ED: 27 01               BEQ     $D5F0          ;{}       
D5EF: 39                  RTS                 
D5F0: 8E DF 39            LDX     #$DF39      ; Star Wizard
D5F3: 0A 9E               DEC     >$9E        ;{-}       
D5F5: 3F                  SWI                 
D5F6: 13                                         ; SWI 13 Beam on picture pointed to by X
D5F7: 3F                  SWI                 
D5F8: 02                                         ; SWI 02 * Uncompress message m and display
;
D5F9: FF C4 54 3D 84 D8 08 59 D1 2E C8 03 70 A6 93 05 10 50 20 2E 20 ; "_1F_BEHOLD! DESTINY AWAITS THE HAND"
;
D60E: 3F                  SWI                 
D60F: 02                                         ; SWI 02 * Uncompress message m and display
;
D610: C8 00 00 00 00 03 CC 00 81 C5 B8 2E 9D 06 44 F7 BC ; "        OF A NEW WIZARD..."
;
D621: 20 FE               BRA   $D621         ;{}

D623: BD CC 31            JSR   $CC31         ;{}
D626: EE C4               LDU   ,U            ;
D628: 27 14               BEQ   $D63E         ;{}
D62A: A6 4B               LDA     11,U        ; Already revealed?
D62C: 27 10               BEQ     $D63E       ;{} Yes, skip it now
D62E: C6 19               LDB     #$19        ; Base multiplier
D630: 3D                  MUL                 ; Multiply
D631: 10 93 17            CMPD    >$17        ;{-} Are we strong enough?
D634: 2E 08               BGT     $D63E       ; No, leave it
D636: A6 49               LDA     9,U         ; Get proper name
D638: 3F                  SWI                 ; Change object types
D639: 18                                         ; SWI 18 Change object to proper name and data
D63A: 6F 4B               CLR     11,U        ; Revealed
D63C: 3F                  SWI                 
D63D: 0D                                         ; SWI 0D Print contents of hands on status line
D63E: 39                  RTS                 

D63F: 8E D8 D9            LDX     #$D8D9      
D642: BD CB EC            JSR     $CBEC          ;{}       
D645: 2F 4C               BLE     $D693       
D647: D6 23               LDB     >$23           ;{-}       
D649: 81 00               CMPA    #$00        
D64B: 26 07               BNE     $D654          ;{}       
D64D: 5A                  DECB                
D64E: 8D 1D               BSR     $D66D          ;{}       
D650: 8D 22               BSR     $D674          ;{}       
D652: 20 15               BRA     $D669          ;{}       
D654: 81 01               CMPA    #$01        
D656: 26 05               BNE     $D65D          ;{}       
D658: 5C                  INCB                
D659: 8D 12               BSR     $D66D          ;{}       
D65B: 20 0A               BRA     $D667          ;{}       
D65D: 81 03               CMPA    #$03        
D65F: 26 32               BNE     $D693          ;{}       
D661: CB 02               ADDB    #$02        
D663: 8D 08               BSR     $D66D          ;{}       
D665: 8D 1D               BSR     $D684          ;{}       
D667: 8D 1B               BSR     $D684          ;{}       
D669: 0A B4               DEC     >$B4           ;{-}       
D66B: 13                  SYNC                
D66C: 39                  RTS                 
D66D: C4 03               ANDB    #$03        
D66F: D7 23               STB     >$23           ;{-}       
D671: 7E C6 60            JMP     $C660          ;{}       
D674: 8D 20               BSR     $D696          ;{}       
D676: 26 0B               BNE     $D683          ;{}       
D678: CC 00 08            LDD     #$0008      
D67B: 8D 3D               BSR     $D6BA          ;{}       
D67D: C3 00 20            ADDD    #$0020      
D680: 4D                  TSTA                
D681: 27 F8               BEQ     $D67B          ;{}       
D683: 39                  RTS                 
D684: 8D 10               BSR     $D696          ;{}       
D686: 26 0A               BNE     $D692          ;{}       
D688: CC 00 F8            LDD     #$00F8      
D68B: 8D 2D               BSR     $D6BA          ;{}       
D68D: 83 00 20            SUBD    #$0020      
D690: 2A F9               BPL     $D68B          ;{}       
D692: 39                  RTS                 
D693: 7E CB E1            JMP     $CBE1          ;{}       
D696: DE B2               LDU     >$B2           ;{-}       
D698: 11 83 CE 66         CMPU    #$CE66      
D69C: 26 1B               BNE     $D6B9          ;{}       
D69E: 8E 80 80            LDX     #$8080      
D6A1: 9F 4F               STX     >$4F           ;{-}       
D6A3: 0F 8B               CLR     >$8B           ;{-}       
D6A5: 3F                  SWI                 
D6A6: 00                                         ; SWI 00 Light level
D6A7: 3F                  SWI                 
D6A8: 08                                         ; SWI 08 Clear display screen
D6A9: 8E D6 C6            LDX     #$D6C6      
D6AC: 3F                  SWI                 
D6AD: 01                                         ; SWI 01 Draw picture X on screen
D6AE: 8E 00 11            LDX     #$0011      
D6B1: 9F 2F               STX     >$2F           ;{-}       
D6B3: 8E 00 87            LDX     #$0087      
D6B6: 9F 33               STX     >$33           ;{-}       
D6B8: 4F                  CLRA                
D6B9: 39                  RTS                 
D6BA: DD 31               STD     >$31           ;{-}       
D6BC: DD 35               STD     >$35           ;{-}       
D6BE: 8D 00               BSR     $D6C0          ;{}       
D6C0: BD CA B7            JSR     $CAB7          ;{}       
D6C3: 03 2C               COM     >$2C           ;{-}       
D6C5: 39                  RTS                 
D6C6: 10 00                             
D6C8: 10 FF FF 88         STS     $FF88       
D6CC: 00 88               NEG     >$88           ;{-}       
D6CE: FF                       
D6CF: FE 8E D8            LDU     $8ED8       
D6D2: D9 BD               ADCB    >$BD           ;{-}       
D6D4: CB EC               ADDB    #$EC        
D6D6: 2D BB               BLT     $D693       
D6D8: 2E 09               BGT     $D6E3       
D6DA: 0A 73               DEC     >$73           ;{-}       
D6DC: 3F                  SWI                 
D6DD: 0E                                         ; SWI 0E Display playing screen
D6DE: 5F                  CLRB                
D6DF: 0F 73               CLR     >$73           ;{-}       
D6E1: 20 0C               BRA     $D6EF          ;{}       
D6E3: 81 02               CMPA    #$02        
D6E5: 26 0C               BNE     $D6F3          ;{}       
D6E7: 0A 74               DEC     >$74           ;{-}       
D6E9: 3F                  SWI                 
D6EA: 0E                                         ; SWI 0E Display playing screen
D6EB: C6 02               LDB     #$02        
D6ED: 0F 74               CLR     >$74           ;{-}       
D6EF: 8D 2F               BSR     $D720          ;{}       
D6F1: 20 1B               BRA     $D70E          ;{}       
D6F3: 81 01               CMPA    #$01        
D6F5: 26 0A               BNE     $D701          ;{}       
D6F7: C6 01               LDB     #$01        
D6F9: 8D 25               BSR     $D720          ;{}       
D6FB: 26 11               BNE     $D70E          ;{}       
D6FD: 8D 85               BSR     $D684          ;{}       
D6FF: 20 0D               BRA     $D70E          ;{}       
D701: 81 00               CMPA    #$00        
D703: 26 8E               BNE     $D693          ;{}       
D705: C6 03               LDB     #$03        
D707: 8D 17               BSR     $D720          ;{}       
D709: 26 03               BNE     $D70E          ;{}       
D70B: BD D6 74            JSR     $D674          ;{}       
D70E: DC 15               LDD     >$15           ;{-}       
D710: BD D3 7F            JSR     $D37F          ;{}       
D713: C3 00 03            ADDD    #$0003      
D716: D3 21               ADDD    >$21           ;{-}       
D718: DD 21               STD     >$21           ;{-}       
D71A: 3F                  SWI                 
D71B: 0C                                         ; SWI 0C Update heart rate
D71C: 0A B4               DEC     >$B4           ;{-}       
D71E: 13                  SYNC                
D71F: 39                  RTS                 
D720: 34 06               PSHS    B,A         
D722: 6F E2               CLR     ,-S         
D724: DB 23               ADDB    >$23           ;{-}       
D726: C4 03               ANDB    #$03        
D728: D7 8A               STB     >$8A           ;{-}       
D72A: DC 13               LDD     >$13           ;{-}       
D72C: BD D1 36            JSR     $D136          ;{}       
D72F: 27 07               BEQ     $D738          ;{}       
D731: 3F                  SWI                 
D732: 1B                                         ; SWI 1B * Play sound i at full volume
D733: 14                                         ; 14 = Wall hit
D734: 6A E4               DEC     ,S          
D736: DC 13               LDD     >$13           ;{-}       
D738: DD 13               STD     >$13           ;{-}       
D73A: BD C6 60            JSR     $C660          ;{}       
D73D: 6D E0               TST     ,S+         
D73F: 35 86               PULS    A,B,PC      
D741: BD CC 31            JSR     $CC31          ;{}       
D744: 27 21               BEQ     $D767          ;{}       
D746: EC 09               LDD     9,X         
D748: C1 05               CMPB    #$05        
D74A: 26 0B               BNE     $D757          ;{}       
D74C: 9F 24               STX     >$24           ;{-}       
D74E: BD D5 7D            JSR     $D57D          ;{}       
D751: 3F                  SWI                 
D752: 1B                                         ; SWI 1B * Play sound i at full volume
D753: 11                                         ; 11 = Torch
D754: 3F                  SWI                
D755: 0E                                         ; SWI 0E Display playing screen
D756: 39                  RTS
        
D757: 1F 13               TFR     X,U         
D759: 8E D7 6B            LDX     #$D76B      
D75C: A1 84               CMPA    ,X          
D75E: 27 08               BEQ     $D768          ;{}       
D760: 30 03               LEAX    3,X         
D762: 8C D7 7A            CMPX    #$D77A      
D765: 25 F5               BCS     $D75C          ;{}       
D767: 39                  RTS                 
D768: 6E 98 01            JMP     [$01,X]     
D76B: 05                     
D76C: D7 7A               STB     >$7A           ;{-}       
D76E: 09 D7               ROL     >$D7           ;{-}       
D770: 83 08 D7            SUBD    #$08D7      
D773: 87                      
D774: 04 D7               LSR     >$D7           ;{-}       
D776: A2 07               SBCA    7,X         
D778: D7 A0               STB     >$A0           ;{-}       
D77A: CC 03 E8            LDD     #$03E8      
D77D: D3 17               ADDD    >$17           ;{-}       
D77F: DD 17               STD     >$17           ;{-}       
D781: 20 0F               BRA     $D792          ;{}       
D783: 4F                  CLRA                
D784: 5F                  CLRB                
D785: 20 09               BRA     $D790          ;{}       
D787: 9E 17               LDX     >$17           ;{-}       
D789: 86 66               LDA     #$66        
D78B: BD D4 36            JSR     $D436          ;{}       
D78E: D3 21               ADDD    >$21           ;{-}       
D790: DD 21               STD     >$21           ;{-}       
D792: C6 17               LDB     #$17        
D794: E7 49               STB     9,U         
D796: 6F 4B               CLR     11,U        
D798: 3F                  SWI                 
D799: 1B                                         ; SWI 1B * Play sound i at full volume
D79A: 0C                                         ; 0C = Flask
D79B: 3F                  SWI        
D79C: 0D                                         ; SWI 0D Print contents of hands on status line
D79D: 3F                  SWI        
D79E: 0C                                         ; SWI 0C Update heart rate
D79F: 39                  RTS        
D7A0: 4F                  CLRA                
D7A1: 8C 86 FF            CMPX    #$86FF      
D7A4: 97 94               STA     >$94           ;{-}       
D7A6: 6D 4B               TST     11,U        
D7A8: 26 0C               BNE     $D7B6          ;{}       
D7AA: 3F                  SWI                 
D7AB: 1B                                         ; SWI 1B * Play sound i at full volume
D7AC: 0E                                         ; 0E = Scroll 
D7AD: 0F AD               CLR     >$AD           ;{-}       
D7AF: 8E CD B2            LDX     #$CDB2
D7B2: 9F B2               STX     >$B2           ;{-}       
D7B4: 3F                  SWI                 
D7B5: 0E                                         ; SWI 0E Display playing screen
D7B6: 39                  RTS         
        
; ZLOAD
D7B7: 8D 03               BSR     $D7BC          ;{}       
D7B9: 0A B8               DEC     >$B8           ;{-}       
D7BB: 39                  RTS

D7BC: 8E 03 13            LDX     #$0313      
D7BF: 33 88 20            LEAU    $20,X       
D7C2: 3F                  SWI                    ; Fill X to U with FFs
D7C3: 12                                         ; SWI 12 Fill X to U with FFs
D7C4: 7E CB 96            JMP     $CB96          ;{}       

; ZSAVE
D7C7: 8D F3               BSR     $D7BC          ;{}       
D7C9: BF 00 7E            STX     $007E       
D7CC: CC 00 0F            LDD     #$000F      
D7CF: FD 00 7C            STD     $007C       
D7D2: 0C B8               INC     >$B8           ;{-}       
D7D4: 39                  RTS                 


; ############################################### Data from here down ##########################################################


;Initial backpack objects
;
DemoObjects:
D7D5: 0D ; Iron sword     (Elvish = 02)
D7D6: 0F ; Pine torch     (Solar  = 0A)
D7D7: 10 ; Leather shield (Seer   = 04)
D7D8: FF ; End of list
;
GameObjects:
D7D9: 11 ; Wooden sword
D7DA: 0F ; Pine torch
D7DB: FF ; End of list

; ??Game Task List??
D7DC: D1 EB ;        
D7DE: D1 C2 ;
D7E0: D1 D5 ;
D7E2: D1 9B ;
D7E4: D0 27 ;
D7E6: 00 00 ; End of task list

InitCopyTable:
D7E8: 0C 01 03 ; Copy 0C bytes to 103
D7EB: 7E C3 71   ; SWI2 Vector: JMP $C371
D7EE: 7E C3 52   ; SWI  Vector: JMP $C352
D7F1: 7E C2 7D   ; IRQ  Vector: JMP $C27D
D7F4: 7E C2 7D   ; FIRQ Vector: JMP $C27D
;
; Initialize a few local variables
D7F7: 17 02 02 ; Copy 17 bytes to 202           
D7FA: 01       ; 202                   
D7FB: FF       ; 203                   
D7FC: FF       ; 204                   
D7FD: 00 80    ; 205,6                    
D7FF: 00 4C    ; 207,8                    
D801: D8 70    ; 209,A Pointer to visible screen descriptor                    
D803: D8 76    ; 20B,C Pointer to drawing screen descriptor
D805: D9 88    ; 20D,E                 
D807: 0B 15    ; 20F,0 Pointer to next available game object slot                    
D809: 02       ; 211                 
D80A: F1       ; 212
D80B: 0C 16    ; 213,4 Player starting point (for demo)         
D80D: 00       ; 215   Player direction
D80E: 23       ; 216                 
D80F: 17 A0    ; 217,8
                             
D811: 54 03 80 ; Copy 54 bytes to 380
D814: 10 00    ; ??               
D816: 02 60 
D818: 00 00 
D81A: 00 FF                       
;
D81C: 23 00                    
D81E: 00 40                     
D820: 00 00                    
D822: FF 00 
;
D824: 24 00 
D826: 00 80 
D828: 00 00 
D82A: 00 00       

CreaturesOnLevels:      
; 0398            
;1      
D82C: 09 09 04 02 ; 9 spiders, 9 snakes, 4 giants, 2 blobs
D830: 00 00 00 00 ; 0 knights, 0 hatchet-giants, 0 scorpions, 0 shield-knights                          
D834: 00 00 00 00 ; 0 wraiths, 0 galdrogs, 0 demons, 0 wizards                         
;
;2
D838: 02 04 00 06 ; 2 spiders, 4 snakes, 0 giants, 6 blobs                          
D83C: 06 06 00 00 ; 6 knights, 6 hatchet-giants                          
D840: 00 00 00 00 ; 0 wraiths, 0 galdrogs, 0 demons, 0 wizards                         
;
;3
D844: 00 00 00 04 ; 0 spiders, 0 snakes, 0 giants, 4 blobs                          
D848: 00 06 08 04 ; 0 knights, 6 hatchet-giants, 8 scorpions, 4 shield-knights
D84C: 00 00 01 00 ; 0 wraiths, 0 galdrogs, 1 demons, 0 wizards                          
;
;4
D850: 00 00 00 00 ; 0 spiders, 0 snakes, 0 giants, 0 blobs
D854: 00 00 08 06 ; 0 knights, 0 hatchet-giants, 8 scorpions, 6 shield-knights
D858: 06 04 00 00 ; 6 wraiths, 4 galdrogs, 0 demons, 0 wizards
;
;5
D85C: 02 02 02 02 ; 2 spiders, 2 snakes, 2 giants, 2 blobs
D860: 02 02 02 04 ; 2 knights, 2 hatchet-giants, 2 scorpions, 4 shield-knights
D864: 04 08 00 01 ; 4 wraiths, 8 galdrogs, 0 demons, 1 wizards

D868: 04 0B 11 ; Copy 4 bytes to B11
; ?? Last game task
D86B: 04 00 00 05                       
 
D86F: 00                                    ; End of initialization copy list

;;= Screen Descriptors =
;;
;;There are two graphics pages. One is displayed while the other is being drawn on. RAM 0x209 points to the visible screen. RAM 0x20B points to the drawing screen. To flip the pages the pointers are swapped.
;;
;;Each screen is divided into three sections (3*2 = 6 descriptors below):
;;* Play field
;;* Hands/heart
;;* 4 lines of text 

ScreenDescriptors:
D870: 10 00 ; Start of upper play-field 0x1000
D872: 23 00 ; End of play-field (152 rows)
D874: 20 46 ; SAM value 0010000__001000_110 (G6R,G6C Display=8*512=0x1000)
;
D876: 28 00 ; Start of upper play-field 0x2800
D878: 3B 00 ; End of play-field (152 rows)
D87A: 20 A6 ; SAM value 0010000__010100_110 (G6R,G6C Display=20*512=0x2800)

D87C: 23 00 ; Start of hand/heart row
D87E: 24 00 ; End of hand/heart row (8 rows)
D880: 00 00 

D882: 3B 00 ; Start of hand/heart row
D884: 3C 00 ; End of hand/heart row (8 rows)
D886: 00 00 

D888: 24 00 ; Start of text lines
D88A: 28 00 ; End of text lines (4*8 rows)
D88C: 00 00 

D88E: 3C 00 ; Start of text lines
D890: 40 00 ; End of text lines (4*8 rows)
D892: 00 00    

;;= First Words =

; FirstWords:
D894: 0F
D895: 30 03 4A 04 6B    ; 00 "ATTACK"
D89A: 28 06 C4 B4 40    ; 00 "CLIMB"
D89F: 20 09 27 C0       ; 00 "DROP"
D8A3: 38 0B 80 B5 2E 28 ; 00 "EXAMINE"
D8A9: 18 0E 5A 00       ; 00 "GET"
D8AD: 30 12 E1 85 D4    ; 00 "INCANT"
D8B2: 20 18 F7 AC       ; 00 "LOOK"
D8B6: 20 1A FB 14       ; 00 "MOVE"
D8BA: 20 21 56 30       ; 00 "PULL"
D8BE: 30 24 5B 14 2C    ; 00 "REVEAL"
D8C3: 20 27 47 DC       ; 00 "STOW"
D8C7: 20 29 59 38       ; 00 "TURN"
D8CB: 18 2B 32 80       ; 00 "USE"
D8CF: 28 34 C7 84 80    ; 00 "ZLOAD"
D8D4: 28 35 30 D8 A0    ; 00 "ZSAVE" 

;;= Second Words =

SecondWords:
D8D9: 06 
D8DA: 20 18 53 50      ; 00 "LEFT"
D8DE: 28 24 93 A2 80   ; 00 "RIGHT"
D8E3: 20 04 11 AC      ; 00 "BACK"
D8E7: 30 03 27 D5 C4   ; 00 "AROUND"
D8EC: 10 2B 00         ; 00 "UP"
D8EF: 20 08 FB B8      ; 00 "DOWN"                                 

;;= Proper Names =

ProperNames:
;                           index class text
D8F3: 19
D8F4: 38 67 58 48 AD 28   ;  [00]  01   "SUPREME"
D8FA: 28 54 FA B0 A0      ;  [01]  01   "JOULE"
D8FF: 31 0A CB 26 68      ;  [02]  04   "ELVISH"
D904: 38 DA 9A 22 49 60   ;  [03]  03   "MITHRIL"
D90A: 20 A6 52 C8         ;  [04]  02   "SEER"
D90E: 28 28 82 DE 60      ;  [05]  00   "THEWS"
D913: 20 64 96 94         ;  [06]  01   "RIME"
D917: 30 AC 99 A5 EE      ;  [07]  02   "VISION"
D91C: 20 02 2C 94         ;  [08]  00   "ABYE"
D920: 20 10 16 14         ;  [09]  00   "HALE"
D924: 29 66 F6 06 40      ;  [0A]  05   "SOLAR"
D929: 30 C5 27 BB 45      ;  [0B]  03   "BRONZE"
D92E: 30 6D 56 0C 2E      ;  [0C]  01   "VULCAN"
D933: 21 13 27 B8         ;  [0D]  04   "IRON"
D937: 29 59 57 06 40      ;  [0E]  05   "LUNAR"
D93C: 21 60 97 14         ;  [0F]  05   "PINE"
D940: 38 D8 50 D1 05 90   ;  [10]  03   "LEATHER"
D946: 31 2E F7 90 AE      ;  [11]  04   "WOODEN"
D94B: 28 4C 97 05 80      ;  [12]  01   "FINAL"
D950: 30 4A E2 C8 F9      ;  [13]  01   "ENERGY"
D955: 18 52 32 80         ;  [14]  01   "ICE"
D959: 20 4C 99 14         ;  [15]  01   "FIRE"
D95D: 20 4E F6 10         ;  [16]  01   "GOLD"
D961: 28 0A D8 53 20      ;  [17]  00   "EMPTY"
D966: 21 48 50 90         ;  [18]  05   "DEAD"

;;= Class Names =

ClassNames:
D96A: 06     
D96B: 28 0C C0 CD 60  ; 00 "FLASK"
D970: 20 64 97 1C     ; 01 "RING"
D974: 30 A6 39 3D 8C  ; 02 "SCROLL"
D979: 30 E6 84 95 84  ; 03 "SHIELD"
D97E: 29 27 77 C8 80  ; 04 "SWORD"
D983: 29 68 F9 0D 00  ; 05 "TORCH"                                                    

DemoCommands:
D988: 01           ;
D989: D8 A3        ; EXAMINE
D98B: 03           ;
D98C: D8 BA        ; PULL
D98E: D8 DE        ; RIGHT
D990: D9 83        ; TORCH
D992: 02           ;
D993: D8 CB        ; USE
D995: D8 DE        ; RIGHT
D997: 01           ;
D998: D8 B2        ; LOOK
D99A: 01           ;
D99B: D8 B6        ; MOVE
D99D: 03           ;
D99E: D8 BA        ; PULL
D9A0: D8 DA        ; LEFT
D9A2: D9 79        ; SHIELD
D9A4: 03           ;
D9A5: D8 BA        ; PULL
D9A7: D8 DE        ; RIGHT
D9A9: D9 7E        ; SWORD
D9AB: 01           ;
D9AC: D8 B6        ; MOVE
D9AE: 01           ;
D9AF: D8 B6        ; MOVE
D9B1: 02           ;
D9B2: D8 95        ; ATTACK
D9B4: D8 DE        ; RIGHT
D9B6: 02           ;
D9B7: D8 C7        ; TURN
D9B9: D8 DE        ; RIGHT
D9BB: 01           ;
D9BC: D8 B6        ; MOVE
D9BE: 01           ;
D9BF: D8 B6        ; MOVE
D9C1: 01           ;
D9C2: D8 B6        ; MOVE
D9C4: 02           ;
D9C5: D8 C7        ; TURN
D9C7: D8 DE        ; RIGHT
D9C9: 01           ;
D9CA: D8 B6        ; MOVE
D9CC: 01           ;
D9CD: D8 B6        ; MOVE
D9CF: FF           ; End of list

; Command function jump table
D9D0: D2 B8 ; 00 ATTACK
D9D2: D4 4E ; 01 CLIMB
D9D4: D5 50 ; 02 DROP
D9D6: D4 81 ; 03 EXAMINE
D9D8: D5 22 ; 04 GET
D9DA: D5 BC ; 05 INCANT
D9DC: C7 51 ; 06 LOOK
D9DE: D6 D0 ; 07 MOVE
D9E0: D5 89 ; 08 PULL
D9E2: D6 23 ; 09 REVEAL
D9E4: D5 79 ; 0A STOW
D9E6: D6 3F ; 0B TURN
D9E8: D7 41 ; 0C USE
D9EA: D7 B7 ; 0D ZLOAD
D9EC: D7 C7 ; 0E ZSAVE

; Object pictures by class
D9EE: DC 19 ; Flask
D9F0: DC 21 ; Ring
D9F2: DC 2A ; Scroll
D9F4: DB FA ; Shield
D9F6: DC 0F ; Sword
D9F8: DC 07 ; Torch

; Object weights by class
D9FA: 05    ; Flask
D9FB: 01    ; Ring
D9FC: 0A    ; Scroll
D9FD: 19    ; Shield
D9FE: 19    ; Sword
D9FF: 0A    ; Torch

; Object descriptors by object index
;     CC RR MM PP: Class, Reveal, Magic, Physical
;                   nn Class   Proper
DA00: 01 FF 00 05 ; 00 Ring    Supreme
DA04: 01 AA 00 05 ; 01 Ring    Joule
DA08: 04 96 40 40 ; 02 Sword   Elvish
DA0C: 03 8C 0D 1A ; 03 Shield  Mithril
DA10: 02 82 00 05 ; 04 Scroll  Seer
DA14: 00 46 00 05 ; 05 Flask   Thews
DA18: 01 34 00 05 ; 06 Ring    Rime
DA1C: 02 32 00 05 ; 07 Scroll  Vision
DA20: 00 30 00 05 ; 08 Flask   Abye
DA24: 00 28 00 05 ; 09 Flask   Hale
DA28: 05 46 00 05 ; 0A Torch   Solar
DA2C: 03 19 00 1A ; 0B Shield  Bronze
DA30: 01 0D 00 05 ; 0C Ring    Vulcan
DA34: 04 0D 00 28 ; 0D Sword   Iron
DA38: 05 19 00 05 ; 0E Torch   Lunar
DA3C: 05 05 00 05 ; 0F Torch   Pine
DA40: 03 05 00 0A ; 10 Shield  Leather
DA44: 04 05 00 10 ; 11 Sword   Wooden
DA48: 01 00 00 00 ; 12 Ring    Final
DA4C: 01 00 FF FF ; 13 Ring    Energy
DA50: 01 00 FF FF ; 14 Ring    Ice
DA54: 01 00 FF FF ; 15 Ring    Fire
DA58: 01 00 00 05 ; 16 Ring    Gold
DA5C: 00 00 00 05 ; 17 Flask   Empty
DA60: 05 05 00 05 ; 18 Torch   Dead
 
; Special object properties by proper-index
;
DA64: 00 03 12 00 ; Supreme Ring    (proper, strikes, ??, ??)
DA68: 01 03 13 00 ; Joule Ring      (proper, strikes, ??, ??)
DA6C: 03 40 40 00 ; Mithril Shield  (proper, ??, ??, ??)
DA70: 06 03 14 00 ; Rime Ring       (proper, strikes, ??, ??)
DA74: 0A 3C 0D 0B ; Solar Torch     (proper, ??, ??, ??)
DA78: 0B 60 80 00 ; Bronze Shield   (proper, ??, ??, ??)
DA7C: 0C 03 15 00 ; Vulcan Ring     (proper, strikes, ??, ??)
DA80: 0E 1E 0A 04 ; Lunar Torch     (proper, ??, ??, ??)
DA84: 0F 0F 07 00 ; Pine Torch      (proper, ??, ??, ??)
DA88: 10 6C 80 00 ; Leather Shield  (proper, ??, ??, ??)
DA8C: 18 00 00 00 ; Dead Torch      (proper, ??, ??, ??)
DA90: FF          ; End of list

ObjectDist:
; This table defines how objects are distributed to creatures on the various
; levels. There are 18 types of objects from most powerful to least. Each
; type of object gets one byte ... two nibbles. The first nibble indicates 
; where the object first appears. The second nibble indicates how many there
; are. For instance, the ABYE FLASK first appears on level 1. There are 6 of them.
; They are assigned to 1, 2, 3, 4, 5, and then wrapping back around to level 1 again
; for the last one. The most powerful creatures on each level are given the most
; important objects. The Demon on level 2 gets a SEER SCROLL, though you can never
; pick it up.
;
; Note that the code assigns objects through level 5 even though there isn't a
; level 5. Based on the types of objects assigned to level 5, I believe this is
; a bug in the wrapping code and not a level that got left out.
;
;                                  Level   0       1       2       3       4      ?5?         
DA91: 41 ; 00 Supreme Ring    1 start 4    --      --      --      --      00      --
DA92: 31 ; 01 Joule Ring      1 start 3    --      --      --      01      --      --
DA93: 31 ; 02 Elvish Sword    1 start 3    --      --      --      02      --      --
DA94: 32 ; 03 Mithril Shield  2 start 3    --      --      --      03      04      --
DA95: 23 ; 04 Seer Scroll     3 start 2    --      --      05      06      07      --
DA96: 23 ; 05 Thews Flask     3 start 2    --      --      08      09      0A      --
DA97: 11 ; 06 Rime Ring       1 start 1    --      0B      --      --      --      --
DA98: 13 ; 07 Vision Scroll   3 start 1    --      0C      0D      0E      --      --
DA99: 16 ; 08 Abye Flask      6 start 1    --      0F 14   10      11      12      13
DA9A: 14 ; 09 Hale Flask      4 start 1    --      15      16      17      18      --
DA9B: 14 ; 0A Solar Torch     4 start 1    --      19      1A      1B      1C      --
DA9C: 16 ; 0B Bronze Shield   6 start 1    --      1D 22   1E      1F      20      21
DA9D: 01 ; 0C Vulcan Ring     1 start 0    23      --      --      --      --      --
DA9E: 04 ; 0D Iron Sword      4 start 0    24      25      26      27      --      --
DA9F: 08 ; 0E Lunar Torch     8 start 0    28 2E   29 2F   2A      2B      2C      2D
DAA0: 08 ; 0F Pine Torch      8 start 0    30 36   31 37   32      33      34      35
DAA1: 03 ; 10 Leather Shield  3 start 0    38      39      3A      --      --      --
DAA2: 04 ; 11 Wooden Sword    4 start 0    3B      3C      3D      3E      --      --
;
; These are added to the backpack after all other objects have been created:
;          11 Wooden Sword       3F     
;          0F Pine Torch         40
;
; These are the objects created for the demo:
;          0D Iron Sword         3F
;          0F Pine Torch         40
;          10 Leather Shield     41

;;= Check List =
;;
;;TODO put these tables side-by-side
;;
;;== Start With ==
;;|| WOODEN SWORD ||
;;|| PINE TORCH ||
;;
;;== Level 0 ==
;;|| BLOB || VULCAN RING ||
;;|| BLOB || IRON SWORD ||
;;|| || ||
;;|| CLUB GIANT || LUNAR TORCH ||
;;|| CLUB GIANT || LUNAR TORCH ||
;;|| CLUB GIANT || PINE TORCH ||
;;|| CLUB GIANT || PINE TORCH ||
;;|| || ||
;;|| SNAKE || LEATHER SHIELD ||
;;|| SNAKE  || WOODEN SWORD ||
;;|| SNAKE  ||   || 
;;|| SNAKE  ||   || 
;;|| SNAKE  ||   || 
;;|| SNAKE  ||   || 
;;|| SNAKE  ||   || 
;;|| SNAKE  ||   || 
;;|| SNAKE  ||   || 
;;|| || ||
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;|| SPIDER  ||   || 
;;
;;== Level 1 ==
;;|| HATCHET GIANT || RIME RING ||
;;|| HATCHET GIANT || VISION SCROLL ||
;;|| HATCHET GIANT || ABYE FLASK ||
;;|| HATCHET GIANT || ABYE FLASK ||
;;|| HATCHET GIANT || HALE FLASK ||
;;|| HATCHET GIANT || SOLAR TORCH ||
;;|| || ||
;;|| PLAIN KNIGHT || BRONZE SHIELD ||
;;|| PLAIN KNIGHT || BRONZE SHIELD ||
;;|| PLAIN KNIGHT  || IRON SWORD ||
;;|| PLAIN KNIGHT  || LUNAR TORCH ||
;;|| PLAIN KNIGHT || LUNAR TORCH ||
;;|| PLAIN KNIGHT || PINE TORCH ||
;;|| || ||
;;|| BLOB || PINE TORCH ||
;;|| BLOB || LEATHER SHIELD ||
;;|| BLOB || WOODEN SWORD ||
;;|| BLOB || ||
;;|| BLOB || ||
;;|| BLOB || ||
;;|| || ||
;;|| SNAKE || ||
;;|| SNAKE || ||
;;|| SNAKE || ||
;;|| SNAKE || ||
;;|| || ||
;;|| SPIDER || ||
;;|| SPIDER || ||
;;
;;== Level 2 ==
;;|| DEMON  || SEER SCROLL ||
;;|| || ||
;;|| SHIELD KNIGHT || THEWES FLASK ||
;;|| SHIELD KNIGHT || VISION SCROLL ||
;;|| SHIELD KNIGHT || ABYE FLASK ||
;;|| SHIELD KNIGHT || HALE FLASK ||
;;|| || ||
;;|| SCORPION || SOLAR TORCH ||
;;|| SCORPION || BRONZE SHIELD ||
;;|| SCORPION  || IRON SWORD ||
;;|| SCORPION || LUNAR TORCH ||
;;|| SCORPION  || PINE TORCH ||
;;|| SCORPION  || LEATHER SHIELD ||
;;|| SCORPION || WOODEN SWORD ||
;;|| SCORPION ||  ||
;;|| || ||
;;|| HATCHET GIANT ||  ||
;;|| HATCHET GIANT ||  ||
;;|| HATCHET GIANT ||  ||
;;|| HATCHET GIANT || ||
;;|| HATCHET GIANT || ||
;;|| HATCHET GIANT || ||
;;|| || ||
;;|| BLOB || ||
;;|| BLOB || ||
;;|| BLOB || ||
;;|| BLOB || ||
;;
;;== Level 3 ==
;;|| GALDROG || JOULE RING ||
;;|| GALDROG || ELVISH SWORD ||
;;|| GALDROG || MITHRIL SHIELD ||
;;|| GALDROG || SEER SCROLL ||
;;||  || ||
;;|| WRAITH || THEWS FLASK ||
;;|| WRAITH || VISION SCROLL ||
;;|| WRAITH || ABYE FLASK ||
;;|| WRAITH || HALE FLASK ||
;;|| WRAITH || SOLAR TORCH ||
;;|| WRAITH || BRONZE SHIELD ||
;;||  || ||
;;|| SHIELD KNIGHT || IRON SWORD ||
;;|| SHIELD KNIGHT || LUNAR TORCH ||
;;|| SHIELD KNIGHT || PINE TORCH ||
;;|| SHIELD KNIGHT || WOODEN SWORD ||
;;|| SHIELD KNIGHT || ||
;;|| SHIELD KNIGHT || ||
;;||  || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;
;;== Level 4 ==
;;
;;|| WIZARD || SUPREME RING ||
;;||  || ||
;;|| GALDROG || MITHRIL SHIELD ||
;;|| GALDROG || SEER SCROLL ||
;;|| GALDROG || THEWS FLASK ||
;;|| GALDROG || ABYE FLASK ||
;;|| GALDROG || HALE FLASK ||
;;|| GALDROG || SOLAR TORCH ||
;;|| GALDROG || BRONZE SHIELD ||
;;|| GALDROG || LUNAR TORCH ||
;;||  || ||
;;|| WRAITH || PINE TORCH
;;|| WRAITH || ||
;;|| WRAITH || ||
;;|| WRAITH || ||
;;||  || ||
;;|| SHIELD KNIGHT || ||
;;|| SHIELD KNIGHT || ||
;;|| SHIELD KNIGHT || ||
;;|| SHIELD KNIGHT || ||
;;||  || ||
;;|| SCORPION || ||
;;|| SCORPION || ||
;;||  || ||
;;|| HATCHET GIANT || ||
;;|| HATCHET GIANT || ||
;;||  || ||
;;|| PLAIN KNIGHT || ||
;;|| PLAIN KNIGHT || ||
;;||  || ||
;;|| BLOB || ||
;;|| BLOB || ||
;;||  || ||
;;|| CLUB GIANT || ||
;;|| CLUB GIANT || ||
;;||  || ||
;;|| SNAKE || ||
;;|| SNAKE || ||
;;||  || ||
;;|| SPIDER || ||
;;|| SPIDER || ||

CreaturePictures:
DAA3: DE 26 ; Spider        
DAA5: DF CA ; Snake        
DAA7: DD 41 ; Giant        
DAA9: DE 59 ; Blob        
DAAB: DE 82 ; Knight        
DAAD: DD 51 ; Hatchet-giant        
DAAF: DE 3F ; Scorpion        
DAB1: DE 9D ; Shield-knight        
DAB3: DE 07 ; Wraith        
DAB5: DD A3 ; Galdrog        
DAB7: DF 65 ; Demon        
DAB9: DF 10 ; Wizard   

MonsterData:
;     To-kill  See  MShield  Damage  PShield  ?task-speed?
DABB: 00 20    00   FF       80      FF       17 0B ; Spider
DAC3: 00 38    00   FF       50      80       0F 07 ; Snake
DACB: 00 C8    00   FF       34      C0       1D 17 ; Giant
DAD3: 01 30    00   FF       60      A7       1F 1F ; Blob
DADB: 01 F8    00   80       60      3C       0D 07 ; Knight
DAE3: 02 C0    00   80       80      30       11 0D ; Hatchet-giant
DAEB: 01 90    FF   80       FF      80       05 04 ; Scorpion
DAF3: 03 20    00   40       FF      08       0D 07 ; Shield-knight
DAFB: 03 20    C0   10       C0      08       03 03 ; Wraith
DB03: 03 E8    FF   05       FF      03       04 03 ; Galdrog
DB0B: 03 E8    FF   06       FF      00       0D 07 ; Demon
DB13: 1F 40    FF   06       FF      00       0D 07 ; Wizard

;;= Text Characters =
;;
;;Characters are 5x7 printed on 8x8 boundaries. The "extra" rows/columns allow for spacing between the characters. All 7 rows of a character
;;are 5-bit-packed into 5 bytes and unpacked every single time needed.

;;{{{html
;;<canvas width="400" height="260"
;;     data-getTileDataFunction="get5x7Packed"
;;         data-address="DB1B"
;;         data-gridX="5"
;;         data-gridY="7"
;;         data-command="0,+x,1,+x,2,+x,3,+x,4,+x,5,+x,6,+x,7,*,+y,
;;                       8,+x,9,+x,A,+x,B,+x,C,+x,D,+x,E,+x,F,*,+y,
;;                       10,+x,11,+x,12,+x,13,+x,14,+x,15,+x,16,+x,17,*,+y,
;;                       18,+x,19,+x,1A,+x,1B,+x,1C,+x,1D,+x,1E">
;;</canvas>
;;}}}

TextCharacters:
DB1B: 30 00 00 00 00 ; SPACE 00110 > 00000 00000 00000 00000 00000 00000 00000  .....  ..X..  XXXX.  .XXX.  XXXX.  XXXXX  XXXXX  .XXXX
DB20: 31 15 18 FE 31 ; A     00110 > 00100 01010 10001 10001 11111 10001 10001  .....  .X.X.  X...X  X...X  X...X  X....  X....  X...X
DB25: 37 A3 1F 46 3E ; B     00110 > 11110 10001 10001 11110 10001 10001 11110  .....  X...X  X...X  X....  X...X  X....  X....  X....
DB2A: 33 A3 08 42 2E ; C     00110 > 01110 10001 10000 10000 10000 10001 01110  .....  X...X  XXXX.  X....  X...X  XXXX.  XXXX.  X....
DB2F: 37 A3 18 C6 3E ; D     00110 > 11110 10001 10001 10001 10001 10001 11110  .....  XXXXX  X...X  X....  X...X  X....  X....  X..XX
DB34: 37 E1 0F 42 1F ; E     00110 > 11111 10000 10000 11110 10000 10000 11111  .....  X...X  X...X  X...X  X...X  X....  X....  X...X
DB39: 37 E1 0F 42 10 ; F     00110 > 11111 10000 10000 11110 10000 10000 10000  .....  X...X  XXXX.  .XXX.  XXXX.  XXXXX  X....  .XXXX
DB3E: 33 E3 08 4E 2F ; G     00110 > 01111 10001 10000 10000 10011 10001 01111
DB43: 34 63 1F C6 31 ; H     00110 > 10001 10001 10001 11111 10001 10001 10001  X...X  .XXX.  ....X  X...X  X....  X...X  X...X  .XXX.
DB48: 33 88 42 10 8E ; I     00110 > 01110 00100 00100 00100 00100 00100 01110  X...X  ..X..  ....X  X..X.  X....  XX.XX  X...X  X...X
DB4D: 30 42 10 86 2E ; J     00110 > 00001 00001 00001 00001 00001 10001 01110  X...X  ..X..  ....X  X.X..  X....  X.X.X  XX..X  X...X
DB52: 34 65 4C 52 51 ; K     00110 > 10001 10010 10100 11000 10100 10010 10001  XXXXX  ..X..  ....X  XX...  X....  X.X.X  X.X.X  X...X
DB57: 34 21 08 42 1F ; L     00110 > 10000 10000 10000 10000 10000 10000 11111  X...X  ..X..  ....X  X.X..  X....  X.X.X  X..XX  X...X
DB5C: 34 77 5A D6 31 ; M     00110 > 10001 11011 10101 10101 10101 10001 10001  X...X  ..X..  X...X  X..X.  X....  X...X  X...X  X...X
DB61: 34 63 9A CE 31 ; N     00110 > 10001 10001 11001 10101 10011 10001 10001  X...X  .XXX.  .XXX.  X...X  XXXXX  X...X  X...X  .XXX.
DB66: 33 A3 18 C6 2E ; O     00110 > 01110 10001 10001 10001 10001 10001 01110
DB6B: 37 A3 1F 42 10 ; P     00110 > 11110 10001 10001 11110 10000 10000 10000  XXXX.  .XXX.  XXXX.  .XXX.  XXXXX  X...X  X...X  X...X
DB70: 33 A3 18 D6 4D ; Q     00110 > 01110 10001 10001 10001 10101 10010 01101  X...X  X...X  X...X  X...X  X.X.X  X...X  X...X  X...X
DB75: 37 A3 1F 52 51 ; R     00110 > 11110 10001 10001 11110 10100 10010 10001  X...X  X...X  X...X  X....  ..X..  X...X  X...X  X...X
DB7A: 33 A3 07 06 2E ; S     00110 > 01110 10001 10000 01110 00001 10001 01110  XXXX.  X...X  XXXX.  .XXX.  ..X..  X...X  .X.X.  X.X.X
DB7F: 37 EA 42 10 84 ; T     00110 > 11111 10101 00100 00100 00100 00100 00100  X....  X.X.X  X.X..  ....X  ..X..  X...X  .X.X.  X.X.X
DB84: 34 63 18 C6 2E ; U     00110 > 10001 10001 10001 10001 10001 10001 01110  X....  X..X.  X..X.  X...X  ..X..  X...X  ..X..  XX.XX
DB89: 34 63 15 28 84 ; V     00110 > 10001 10001 10001 01010 01010 00100 00100  X....  .XX.X  X...X  .XXX.  ..X..  .XXX.  ..X..  X...X
DB8E: 34 63 1A D7 71 ; W     00110 > 10001 10001 10001 10101 10101 11011 10001
DB93: 34 62 A2 2A 31 ; X     00110 > 10001 10001 01010 00100 01010 10001 10001  X...X  X...X  XXXXX  ..X..  .....  .XXX.  .....
DB98: 34 62 A2 10 84 ; Y     00110 > 10001 10001 01010 00100 00100 00100 00100  X...X  X...X  ....X  ..X..  .....  X...X  .....
DB9D: 37 C2 22 22 1F ; Z     00110 > 11111 00001 00010 00100 01000 10000 11111  .X.X.  .X.X.  ...X.  ..X..  .....  ....X  .....
DBA2: 31 08 42 10 04 ; !     00110 > 00100 00100 00100 00100 00100 00000 00100  ..X..  ..X..  ..X..  ..X..  .....  ..XX.  .....
DBA7: 30 00 00 00 1F ; _     00110 > 00000 00000 00000 00000 00000 00000 11111  .X.X.  ..X..  .X...  ..X..  .....  ..X..  .....
DBAC: 33 A2 13 10 04 ; ?     00110 > 01110 10001 00001 00110 00100 00000 00100  X...X  ..X..  X....  .....  .....  .....  .....
DBB1: 30 00 00 00 04 ; .     00110 > 00000 00000 00000 00000 00000 00000 00100  X...X  ..X..  XXXXX  ..X..  XXXXX  ..X..  ..X..

;;= Heart Pictures =

;;{{{html
;;<canvas width="280" height="80"
;;     data-getTileDataFunction="get8x7"
;;         data-address="DBB6"
;;         data-gridX="8"
;;         data-gridY="7"
;;         data-command="0,1,+x,2,3">
;; </canvas>
;;}}}

DBB6: 00 00 01 01 00 00 00
; ........
; ........
; .......X
; .......X
; ........
; ........
; ........

DBBD: 00 A0 F0 F0 E0 40 00
; ........                 
; X.X.....
; XXXX....           
; XXXX....
; XXX.....
; .X......
; ........

DBC4: 00 01 03 03 01 00 00
; ........
; .......X
; ......XX
; ......XX
; .......X
; ........
; ........

DBCB: 00 B0 F8 F8 F0 E0 40
; ........
; X.XX....
; XXXXX...
; XXXXX...
; XXXX....
; XXX.....
; .X......

DBD2: 00 80   00 01
DBD6: 00 50   00 04
DBDA: 00 50   00 05

DBDE: 03 ; Left
DBDF: DC 4F ; Left wall open
DBE1: DC 6B ; Left wall with physical door
DBE3: DC 9B ; Left magic door 
DBE5: DC 33 ; Left wall solid
DBE7: 00 ; Front
DBE8: DC 6A ; Front wall open (draw nothing)
DBEA: DC 8B ; Front wall with physical door
DBEC: DC A9 ; Front wall magic door
DBEE: DC 45 ; Front wall (lines at top and bottom)
DBF0: 01 ; Right
DBF1: DC 5D ; Right wall open
DBF3: DC 7B ; Right wall with physical door
DBF5: DC A2 ; Right magic door
DBF7: DC 3C ; Right wall solid
DBF9: FF ; End

;;= Object Pictures =
;;{{{html
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DBFA,DC07,DC0F,DC19,DC21,DC2A">
;;</canvas><br>
;;}}}
;;
;;{{{html
;;<canvas width="200" height="60" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="3.0" data-xoffs="-450" data-yoffs="-350" data-command="DBFA">
;;</canvas>
;;}}}

ShieldPic:       
; Shield
DBFA: 86 AC
DBFC: 80 C0
DBFE: 7A BA 
DC00: 80 A8 
DC02: FC 
DC03: 3E
DC04: 04 
DC05: 00
DC06: FE 

;;{{{html
;;<canvas width="128" height="30" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="3.0" data-xoffs="-140" data-yoffs="-335" data-command="DC07">
;;</canvas>
;;}}}

; Torch
DC07: 76 3C
DC09: FC 
DC0A: F7 
DC0B: FF
DC0C: 2A 
DC0D: 00
DC0E: FE 

;;{{{html
;;<canvas width="128" height="45" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="3.0" data-xoffs="-200" data-yoffs="-330" data-command="DC0F">
;;</canvas>
;;}}}

; Sword
DC0F: 72 50
DC11: 7C 64 
DC13: FF
DC14: 76 52 
DC16: 72 56
DC18: FE 

;;{{{html
;;<canvas width="128" height="40" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="3.0" data-xoffs="-420" data-yoffs="-325" data-command="DC19">
;;</canvas>
;;}}}

; Flask
DC19: 6E A2
DC1B: FC 
DC1C: 51 
DC1D: 0E
DC1E: B1 
DC1F: 00 
DC20: FE

;;{{{html
;;<canvas width="128" height="40" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="3.0" data-xoffs="-120" data-yoffs="-350" data-command="DC21">
;;</canvas>
;;}}}

; Ring
DC21: 7A 3C 
DC23: FC
DC24: 11 
DC25: 1F
DC26: FF
DC27: F1 
DC28: 00 
DC29: FE

;;{{{html
;;<canvas width="128" height="40" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="3.0" data-xoffs="-530" data-yoffs="-350" data-command="DC2A">
;;</canvas>
;;}}}

; Scroll
DC2A: 76 C2 
DC2C: FC
DC2D: 1F 
DC2E: 34
DC2F: F1 
DC30: DC 
DC31: 00
DC32: FE 

;;= Walls and Doors =

;;{{{html
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC4F">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC6B">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC9B">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC33">
;;</canvas>
;;<p>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC6A">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC8B">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DCA9">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC45">
;;</canvas>
;;<p>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC5D">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC7B">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DCA2">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="true"
;;    data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DC3C">
;;</canvas>
;;}}}

; Left wall
DC33: 10 1B
DC35: 26 40
DC37: 72 40
DC39: 88 1B
DC3B: FE 

; Right wall
DC3C: 10 E5
DC3E: 26 C0
DC40: 72
DC41: C0 88
DC43: E5 FE

; Front wall (line at top and bottom)
DC45: 26 40
DC47: 26 C0
DC49: FF
DC4A: 72
DC4B: 40
DC4C: 72
DC4D: C0 FE

; Left wall open
DC4F: 26 1D
DC51: 26 40
DC53: 72
DC54: 40
DC55: 72
DC56: 1B
DC57: FF
DC58: 10 1B
DC5A: 26 40
DC5C: FE

; Right wall open
DC5D: 26 E5
DC5F: 26 C0
DC61: 72
DC62: C0 72
DC64: E5 FF 10 E5
DC68: 26 C0
DC6A: FE 

; Left wall physical door
DC6B: 80 28
DC6D: 41
DC6E: 28 44
DC70: 38
DC71: 77 38 FF
DC74: 5C
DC75: 30 5D
DC77: 34 FD
DC79: DC 33

; Right wall with physical door
DC7B: 80 D8
DC7D: 41
DC7E: D8 44
DC80: C8 77
DC82: C8 FF
DC84: 5C
DC85: D0 5D
DC87: CC FD DC 3C

;Front wall with physical door 
DC8B: 72
DC8C: 6C 43
DC8E: 6C 43
DC90: 94 72
DC92: 94 FF
DC94: 5E
DC95: 7E 5E 82
DC98: FD DC 45

; Left magic door
DC9B: 80 28
DC9D: 42
DC9E: 32 75
DCA0: 3A
DCA1: FE 

; Right magic door
DCA2: 80 D8
DCA4: 42
DCA5: CE 75 C6
DCA8: FE 

; Front magic door
DCA9: 71 6C
DCAB: 43
DCAC: 80 72
DCAE: 94 
DCAF: FE

; Creature on left
DCB0: 64 1C
DCB2: FC 44 2E
DCB5: 42
DCB6: 4C
DCB7: 00 FE

; Creature on right
DCB9: 64 E4
DCBB: FC 4C 22
DCBE: 4E
DCBF: 44
DCC0: 00 FE

; Table for drawing holes/ladders
DCC2: DD 0E  ; Hole in ceiling
DCC4: DC CA  ; Ladder through ceiling
DCC6: DD 2A  ; Hole in floor
DCC8: DC D0  ; Ladder through floor

;;= Holes and Ladders =

;;{{{html
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DD0E">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DCCA">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DD2A">
;;</canvas>
;;<canvas width="256" height="152"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="1.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DCD0">
;;</canvas>
;;}}}

; Ladder through ceiling
DCCA: FB DC D6 ; Ladder subroutine
DCCD: FD DD 0E ; Hole in ceiling

; Ladder through floor
DCD0: FB DC D6 ; Ladder subroutine
DCD3: FD DD 2A ; Hole in floor

; Ladder subroutine
DCD6: 18
DCD7: 74 80 74
DCDA: FF
DCDB: 18
DCDC: 8C 80 8C
DCDF: FF
DCE0: 1C 74
DCE2: 1C 8C
DCE4: FF
DCE5: 28 74
DCE7: 28 8C
DCE9: FF
DCEA: 34 74
DCEC: 34 8C
DCEE: FF
DCEF: 40
DCF0: 74 40 8C
DCF3: FF
DCF4: 4C
DCF5: 74 4C 8C
DCF8: FF
DCF9: 58
DCFA: 74 58 8C
DCFD: FF
DCFE: 64 74
DD00: 64 8C FF
DD03: 70 74 70
DD06: 8C FF 7B
DD09: 74 7B 8C
DD0C: FF
DD0D: FA
 
; Hole in ceiling
DD0E: 22 64
DD10: 18
DD11: 5C
DD12: 18
DD13: A4 22
DD15: 9C 22
DD17: 64 18
DD19: 64 FF 22 9C
DD1D: 18
DD1E: 9C FF
DD20: 1C 2F
DD22: 1C 60
DD24: FF
DD25: 1C A1
DD27: 1C D2
DD29: FE 

; Hole in floor
DD2A: 76 64
DD2C: 80 5C
DD2E: 80 A4
DD30: 76 9C 76
DD33: 64 80
DD35: 64 FF 76 9C
DD39: 80 9C
DD3B: FF
DD3C: 1C 2F
DD3E: 1C D2
DD40: FE 

;;= Club Giant Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DD41">
;;</canvas><br>
;;<canvas width="512" height="304"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="false"
;;  data-scale="4.5"
;;  data-xoffs="-300"
;;  data-yoffs="-275"
;;  data-command="DD41">
;;</canvas>
;;}}}

ClubGiantPic:       
DD41: 68 62
DD43: FC 
DD44: D7 D4
DD46: 14
DD47: 12
DD48: 30 1D
DD4A: 0D FD
DD4C: 29 00
;
DD4E: FD
DD4F: DD 62
;

;;= Hatchet Giant Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DD51">
;;</canvas><br>
;;<canvas width="512" height="304"
;;  data-canvasFunction="handleDagCanvas"
;;  data-border="false"
;;  data-scale="4.5"
;;  data-xoffs="-300"
;;  data-yoffs="-275"
;;  data-command="DD51">
;;</canvas>
;;}}}

HatchetGiantPic:        
; Giant (with hatchet)
DD51: 68 62
DD53: 5E
DD54: 7C 60 7E
DD57: 6A 64
DD59: FF
DD5A: 66 84
DD5C: 5C
DD5D: 72
DD5E: 66 76
DD60: 6E 72
;
; Common Giant
DD62: 66 84
DD64: FC 02 56
DD67: 56
DD68: 17 EE 02
DD6B: EA BB
DD6D: BB EA EA
DD70: 00 4E
DD72: 5C
DD73: FC C2 51
DD76: 3E
DD77: CF
DD78: FC 42 13
DD7B: 00 6A
DD7D: 5A
DD7E: FC 1E 11
DD81: F3 62 39
DD84: E2 0C
DD86: E4 8A
DD88: E2 00
DD8A: 56
DD8B: 54
DD8C: FC 54 65
DD8F: 2E CA
DD91: BA A1 D4
DD94: EE 12
DD96: D2 13
DD98: E1 20
DD9A: F6 24 72
DD9D: 58
DD9E: EE C5
DDA0: BE 00 FE

;;= Galdrog Picture =
;;{{{html
;;<canvas width="768" height="456"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-scale="3.0"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DDA3">
;;</canvas>
;;}}}

GaldrogPic:       
DDA3: 50
DDA4: 7C 5E 72
DDA7: 6E 78
DDA9: 84 70
DDAB: 68 4E
DDAD: 84 30
DDAF: 44
DDB0: 48
DDB1: 54
DDB2: 20 16
DDB4: 58
DDB5: 34 72
DDB7: 5C
DDB8: 80 34
DDBA: 8E 16 A8
DDBD: 58
DDBE: E0 44
DDC0: B8 84 D0
DDC3: 70 B2 84
DDC6: 90 6E
DDC8: 88 5E
DDCA: 8E 50 84
DDCD: FF
DDCE: 84 70
DDD0: FC C5 92
DDD3: BE C3 43
DDD6: 5E
DDD7: 72
DDD8: 45
DDD9: 00 52
DDDB: 7A FC 78
DDDE: E9 8D EC 33
DDE2: 0C 24
DDE4: 72
DDE5: 47
DDE6: E7 00
DDE8: 16 A8 FC
DDEB: 2D C2
DDED: 3D
DDEE: 30 4B
DDF0: 4B
DDF1: ED B2
DDF3: 9D 71
DDF5: 3D
DDF6: DD 91
DDF8: 7D 52 63
DDFB: A3 2D
DDFD: ED 2D
DDFF: CB CB
DE01: D0 DD
DE03: 42
DE04: ED 00
DE06: FE 

;;= Wraith Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DE07">
;;</canvas><br>
;;<canvas width="200" height="220" data-canvasfunction="handleDagCanvas" data-border="false" data-scale="4.5" data-xoffs="-300" data-yoffs="-240" data-command="DE07">
;;</canvas>
;;}}}

WraithPic:       
DE07: 3E 44
DE09: 44
DE0A: 58
DE0B: 38
DE0C: 64 FF 4A 5A
DE10: 46
DE11: 4A
DE12: FC 33 F5
DE15: F5 C1 5A
DE18: 62
DE19: 0E 00
DE1B: 64 50
DE1D: FC B3 17
DE20: 34 EB
DE22: 0A 3D
DE24: 00 FE

;;= Spider Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DE26">
;;</canvas><br>
;;<canvas width="200" height="100" data-canvasfunction="handleDagCanvas" data-colors="[&quot;#FFFFFF&quot;,&quot;#000000&quot;]" data-border="false" data-scale="5.0" data-xoffs="-780" data-yoffs="-550" data-command="DE26">
;;</canvas>
;;}}}

SpiderPic:       
DE26: 7C A0
DE28: FC
DE29: C2 22
DE2B: E4 24
DE2D: 2C EC
DE2F: 04 04
DE31: E2 42
DE33: 00
DE34: 7C
DE35: A8
DE36: FC C1
DE38: 21 12
DE3A: F2 E1 41
DE3D: 00
DE3E: FE

;;= Scorpion Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DE3F">
;;</canvas><br>
;;<canvas width="200" height="150" data-canvasfunction="handleDagCanvas" data-colors="[&quot;#FFFFFF&quot;,&quot;#000000&quot;]" data-border="false" data-scale="5.0" data-xoffs="-300" data-yoffs="-500" data-command="DE3F">
;;</canvas>
;;}}}

ScorpionPic:                     
DE3F: 70 4A FC
DE42: E0 EE
DE44: 2C 42
DE46: 14
DE47: 14
DE48: 20 0C
DE4A: CC 22 0C
DE4D: 22 00
DE4F: 7C 5A FC
DE52: E0 0C
DE54: 2C 20
DE56: 04 00
DE58: FE 

;;= Blob Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DE59">
;;</canvas><br>
;;<canvas width="512" height="250" data-canvasfunction="handleDagCanvas" data-colors="[&quot;#FFFFFF&quot;,&quot;#000000&quot;]" data-border="false" data-scale="4.0" data-xoffs="-350" data-yoffs="-300" data-command="DE59">
;;</canvas>
;;}}}

BlobPic:
;     
; Body outline   
DE59: 52 82    ; MoveTo(130,82)
DE5B: FC       ; DrawShorts(   
DE5C: 28       ;   LineToRelative(-16,+4) 
DE5D: 7D       ;
DE5E: 5F       ;
DE5F: 50
DE60: 5B
DE61: F5 
DE62: 2F 
DE63: D5
DE64: 17 
DE65: 17 
DE66: F3
DE67: 22 
DE68: E1
DE69: 14
DE6A: DD 
DE6B: 8F
DE6C: 8D 
DE6D: DB
DE6E: EC 
DE6F: 00       ; )
;
; Eyes
DE70: 56 82    ; MoveTo(130,86)
DE72: FC       ; DrawShorts( 
DE73: 33       ;   LineToRelative(+6,+6)
DE74: 31
DE75: 1B
DE76: 91 
DE77: 3B
DE78: 5F
DE79: F5 
DE7A: 00       ; )
;
; Mouth
DE7B: 6C 74    ; MoveTo(116,108)
DE7D: 72 76    ; LineToAbsolute(118,114)
DE7F: 78 90    ; LineToAbsolute(144,120)
DE81: FE       ; EndOfImage

;;= Knight Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DE82">
;;</canvas><br>
;;<canvas width="400" height="500" data-canvasfunction="handleDagCanvas" data-colors="[&quot;#FFFFFF&quot;,&quot;#000000&quot;]" data-border="false" data-scale="4.0" data-xoffs="-350" data-yoffs="-50" data-command="DE82">
;;</canvas>
;;}}}

KnightPic:       
DE82: 22 7C
DE84: FC 04 1F
DE87: 0E FF
DE89: 00 50
DE8B: 8E 40 88
DE8E: 2E 92
DE90: 40
DE91: 9C 52
DE93: 8C 4C 88
DE96: 40
DE97: 92 3A
DE99: 8C FD DE
DE9C: B3 
;

;;= Shield Knight Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DE9D">
;;</canvas><br>
;;<canvas width="400" height="500" data-canvasfunction="handleDagCanvas" data-colors="[&quot;#FFFFFF&quot;,&quot;#000000&quot;]" 
;;data-border="false" data-scale="4.0" data-xoffs="-350" data-yoffs="-50" data-command="DE9D">
;;</canvas>
;;}}}

ShieldKnightPic:       
DE9D: 1E 7E
DE9F: FC 50 0F
DEA2: E0 00
DEA4: 2C 96
DEA6: 34 A6
DEA8: 4C
DEA9: A4 5C
DEAB: 96 4C
DEAD: 88 34
DEAF: 86 2C
DEB1: 96 FF
DEB3: 50
DEB4: 8C 80 98
DEB7: 84 A0
DEB9: 84 90
DEBB: 7E 90 54
DEBE: 82 FF
DEC0: 54
DEC1: 7E 7E 6E
DEC4: 84 6E
DEC6: 84 5C
DEC8: 80 66
DECA: 50
DECB: 74 FF 50
DECE: 8C FC 3A
DED1: D9 83
DED3: DE AD
DED5: E6 A1
DED7: E2 22
DED9: 61
DEDA: 26 EA
DEDC: 20 3D
DEDE: DD E0
DEE0: 00 34
DEE2: 80 14
DEE4: 80 FC
DEE6: 0E 21
DEE8: 02
DEE9: E1 0E
DEEB: 00 4A
DEED: 66 FC E0
DEF0: 02
DEF1: D0 08
DEF3: 30 02
DEF5: 20 01
DEF7: 30 02
DEF9: D0 01
DEFB: 87
DEFC: 00 2E
DEFE: 6E 40
DF00: 66 40
DF02: 64 1E
DF04: 66 14
DF06: 62
DF07: 1E 5E
DF09: 40
DF0A: 60 40
DF0C: 62
DF0D: 14
DF0E: 62
DF0F: FE

;;= Moon Wizard Picture =
;;{{{html
;;<canvas width="768" height="456"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="3"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DF10">
;;</canvas>
;;}}}

MoonWizardPic:        
DF10: 2E 62
DF12: FC 21 2F
DF15: 2D FD
DF17: CE C2 F2
DF1A: 12
DF1B: 0F 1E
DF1D: 3F
DF1E: 21
DF1F: 12
DF20: E3 E0
DF22: 00 68
DF24: 9A FC
DF26: 21 2F
DF28: 2D FD
DF2A: CE C2 F2
DF2D: 12
DF2E: 0F 1E
DF30: 3F
DF31: 22
DF32: 12
DF33: E2 E0
DF35: 00 FD
DF37: DF 65

;;= Star Wizard Picture =
;;{{{html
;;<canvas width="768" height="456"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="3"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DF39">
;;</canvas>
;;}}}

StarWizardPic:
DF39: 28 56
DF3B: 40
DF3C: 5C
DF3D: 2A 64
DF3F: 36 52
DF41: 38
DF42: 68 28
DF44: 56
DF45: FF
DF46: 42
DF47: 8C FC 70
DF4A: AD 35
DF4C: 1B
DF4D: B3 00 60
DF50: 92 78
DF52: 94 64
DF54: 88 6A
DF56: 9A 74
DF58: 8A 60
DF5A: 92 FF
DF5C: 50
DF5D: 74 FC 53
DF60: EC E4
DF62: 4D
DF63: B0 00 


;;= Demon Picture =
;;{{{html
;;<canvas width="768" height="456"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="3"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DF65">
;;</canvas>
;;}}}

DemonPic:        
DF65: 40
DF66: 7C FC 4E
DF69: C0 7B
DF6B: 9C D4
DF6D: E4 E1
DF6F: E1 DD 1C 96
DF73: 03 00
DF75: 1C 82
DF77: FC 03 45
DF7A: 71
DF7B: DA 1E
DF7D: 11 E1
DF7F: 00 30
DF81: 86 36
DF83: 8E 74 A4
DF86: 84 84
DF88: 82 76
DF8A: 78 5E 5A
DF8D: 6E 84
DF8F: 84 48
DF91: 6A FF 40 66
DF95: FC 1F BD
DF98: F1 53 00
DF9B: 42
DF9C: 66 FC 1E
DF9F: 32 11
DFA1: 73 00 58
DFA4: 70 48 78
DFA7: FF
DFA8: 3E
DFA9: 84 14
DFAB: 80 34
DFAD: 7A 40 7A
DFB0: 3C 7C
DFB2: 72
DFB3: 80 50
DFB5: 82 44
DFB7: 82 3E
DFB9: 84 FF
DFBB: 28 82
DFBD: FC FF 1E
DFC0: 11 F2
DFC2: 3F
DFC3: 20
DFC4: 0F C0
DFC6: FF
DFC7: 31 00
DFC9: FE

;;= Snake Picture =
;;{{{html
;;<canvas width="128" height="76"
;;  data-canvasFunction="handleDagCanvas"
;;  data-colors='["#FFFFFF","#000000"]'
;;  data-border="true"
;;  data-scale="0.5"
;;  data-xoffs="0"
;;  data-yoffs="0"
;;  data-command="DFCA">
;;</canvas><br>
;;<canvas width="200" height="250" data-canvasfunction="handleDagCanvas" data-colors="[&quot;#FFFFFF&quot;,&quot;#000000&quot;]" 
;;data-border="false" data-scale="4" data-xoffs="-400" data-yoffs="-300" data-command="DFCA">
;;</canvas>
;;}}}

SnakePic:        
DFCA: 84 82
DFCC: 70 7A
DFCE: 5C 7C
DFD0: 5E 7E
DFD2: 5E 82
DFD4: 5C 84
DFD6: 70 82
DFD8: 80 8C
DFDA: 84 88
DFDC: 84 72
DFDE: 78 6C
DFE0: 6A 76
DFE2: 78 70
DFE4: 7C 74
DFE6: 7C 7E
;
DFE8: FF
DFE9: 64 78
; 
DFEB: FC
DFEC: E0
DFED: E2
DFEE: EE
DFEF: E0
DFF0: F1
DFF1: 22
DFF2: EE
DFF3: 06
DFF4: 2E
DFF5: E2
DFF6: 11
DFF7: 20
DFF8: 2E
DFF9: 22
DFFA: 20
DFFB: 00
DFFC: FE

DFFD: 4B 53 4B ; "KSK" Initials of Keith S. Kiyohara, co-creator of the game
